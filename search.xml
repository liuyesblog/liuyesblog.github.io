<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>WordPress域名注册商更换土耳其区结算，域名交易更优惠！</title>
      <link href="/posts/e70f5507.html"/>
      <url>/posts/e70f5507.html</url>
      
        <content type="html"><![CDATA[<p>23年8月份域名服务商WordPress.com（后面简称WordPress）搞了一个活动，顺利白嫖一年域名续费，目前域名也满足60天了，可以转出了。</p><p>本来打算转移到namesilo，不过发现 namesilo 域名价格将近14美元了！</p><p>后来TG大佬提醒，WordPress换土区也有优惠！虽然比不上Google Domains 但还是比较便宜的！</p><blockquote><p>土区优惠</p></blockquote><p>依COM域名为例！</p><p>美元结算价格：12美元 ≈ 87元RMB</p><p>土币结算价格：259里拉 ≈ 68元RMB</p><p>WordPress 还有首年优惠的域名，比如：</p><p>.store  20.7里拉 ≈ 5.4元RMB</p><p>.link  23.4里拉 ≈ 6.1元RMB</p><p>.online 25.9里拉 ≈ 6.8元RMB</p><p> <img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202310160956755.png" alt="img"></p><blockquote><p>申请换区</p></blockquote><p>登陆 WordPress.com 右下角聊天框，联系客服：Hello, please change the billing currency to: Turkish lira</p><p>等客服上线会有邮件通知，直接邮件回复即可！</p><p>如果右下角不显示聊天框？请把科技软件设置为全局模式，刷新页面！</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202310160957399.png" alt="img"></p><p>等待客服操作完成！登陆账号查看付款方式国家为 TR 即可</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202310160958914.png" alt="img"></p><blockquote><p> 最后总结</p></blockquote><p>1，WordPress 土区域名价格 明显没有 Google 土区域名便宜，不过Google土区域名羊毛已经没了。</p><p>2，如果新注册用户绑定支付方式国家选择土耳其，就不需要联系客服换区了。</p><p>3，文中标注的里拉与RMB的汇率为百度提供实时汇率，也不一定是你卡片结算的汇率，需要留意一下！</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 域名 </tag>
            
            <tag> 续费 </tag>
            
            <tag> 优惠 </tag>
            
            <tag> 土耳其 </tag>
            
            <tag> wordpress </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>爆开甲骨文云服务器20几台服务器</title>
      <link href="/posts/751b5cce.html"/>
      <url>/posts/751b5cce.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="ca58a0d6bb23c27ed8f4511881fd42f26b9397ec81d55a080ed6c7221ee434e9">a1688f47cfccba90c0837639745f9a097468b2ebf7cd2b8941a404090f480e6e4c3874710345a1056e0073687e51657c68e35c75c78899d5042a464bf2751ad33a738279a52204d47b89a69c94b9aaae314ef7b4158c754ca61f0b8451b4884b25b5d87fb3828596e7c97540ec20443c7f14cb36c568db92360aab9cba0b2df4bcd169c72b8f928933ee55ce07be3ec098940f7a82d81ea88a6bdfa09c998d63c65268397610a1f17da76085595907cf2525360feb7163c0b9e83528ee87bddc857dc5824fe7352238f278f24b2f1f1dced34eb6aa1d1e942b38189e8e7584a73595dded537504344c4556a5a60ae0f84babf8eb37e1db5f0c73a45a3edc992e05ce2a573e1bc0c7070496e620f9f25fcb68731f33d0c7cdc18eb2a1787ca5fb3f14422b8bd1ec37768c0162fbd9cb87249f30230a5a0fa2c76973df8ff32b9d7c0ca092050edf532b59191b3fa6555d9e3ffb9c23d7d406cd8f9bafe13c789df39d1390ab93b2a39968fc7667063f3f9409f0c507bec9b4a83045f5890b757936498e0c27538ea1f390f8f7b806eeb48549fb0649a7047d6bd74982f13c8a6de60745f3f7bd693d1364a23f0e78961eb09354647cd16a49ee070ca1670551d307ca5b29b18fffd5058b6bcfe7fed9e38ff1311e38b8231b633198890ecf6cecd63228fd0b5785af26108526e7c02789d33f8c0408eb35902b6ef4fb987cc755532ed98c2442a0136330e88dda8d2f1b427fd8631ae201e9df312c9249b20a0c6bcad186e803df600e8152d9a6dc2adef45b710611880cb23832bfbb83f79ccac2d0304731790f58ac41c7ea7845c785483d2b1a5775b342469c634454e715ff287d6cbcb0b186b9a3e64d3dc2917d72a60410a99aa287e54599b3c529ee36cfa1f48625d2ec90e430bebcc4c523b18dda2e3ad989b0f4b7849187a5571b775bc77e384e1961bef0b5c3703366c0dcbc8bf0ae579319e4902141a9074134974a97d33a522a34d5d1cc539356379218f1eba460faee79005d37daf3fb5a82d74a3d48a8faa9c094ed715c865ea240efc3e04cc3073340c5714204d20627fea1b5c2bdbc7207393547ebc999a4449ec1575e58f9500d874ea9752e251805104125c43945aaf5f3e53ce1194414816034312673c97cf3eb410c065fcda95904fa942087e5a75489351881d2e63708899f90fa27e7b2bf8b93ef52541826d61830261b1cdf30d5836180cf1d89198ee8d6a63b53340440298bb1c704cdde39316d896446e25e317396e48b0cdf182e135082f66f99b56c574d657623aa6e5cbf21fe4c77cfc5519b17d769b452be80086e58fcac3782fabc87de135c6d9ef5810d2de35114767d898cc8d43c2bde4dee4d22aed7b7bd230a94372aa65c68fb77333d2555a621d3f4c0b5c36cb65c1bed8456c9ccb907c9bf313e88a091ca4ac56869188d714fa2cdbb15122a1f9e7c023fe89b4a996708a6e5afd1ca64c869d9bc3887bf3051a0937ed1a4fed2f8b761300e954ec12529e9a20a5fb1edbc3dc73b5b6db27fd6b41961bf340c543b72ac850300e164baf6dbf3d21a1febee0225827ccfde30450aaf21680992df6fbb3a81e32646e7a8b1e4d7d4f28da438b5b60623b84f1b80707490773790424b005db4c7c79259506e6ba87ca5877507563903c580a02821b6a4fbcd43aeaa2228b1c665039342b86e5aec02a5c56f7606e07bad07f55e2eba6b45ebedbbd722e870ecdf373547978afa3ee60e120c89ddf2b1bd145aabe2895847d8808b6f06dc13ec5323f5ee0750fd3d84821bfaac0184732186077f862ab038cb489a3406573b24272b14c6f646448a0c86a3915e936a65d13b691b8f372e59faa574e1bfad0297b06844641576ed5ce3ff9f1219f67ee16fb033132a5a1d1a58fd39776318f9f135fc77fb51316d3f7fb1a66c71c854b22759394bb89ea4b87ccc5b3141de6497304cccd760b061fb72e6a5a06dffe7fc467e0365298b8a09d4463530d98aef227d473888692d32750e78c999faaacb8da052feb5cc6c2b4856618f87bb72051fb1e0a3f63ec6f3ec9ad97a8a49d290f31b9161c12499a3f19f724b72a7013b097b44982cbc6840a836a0ba4c462e66208d834a350d42d78b5b429129c0caa91d346067c1597593da97ed08f7503a2117a9a10f9e8e0aab8ce16014faad609743d50bc4235116e962a61cbdf0bd299a2ae2db42d29f60a61c1a64d6623285bfb080cb316a0c539c59a28a752fb06f7238b6af9da40d0624d0186fc23821e252d674aed81d766090bff0fb90e05ce8d541bf332a461fc028501755c73a10bf4f1dc44fb5172f3108ee8d13f84014f8ccc19f2ee3c62a65ec4c8a87cee204021633cba2ac1d60a0a1729d9e7efc78e8b0ba7fc67acb90b6bc687542edeb7f7d5acd3fb85d21878a6e7b81646354bfa5881ff62a4d06d8aaf2e18fd5e7ff2c93943ab0662cb1e13b4affd8d480ea18442e62ad6611466fa8c844cc6b1d16d998d0502eead4928bda6eeef9811dfdbea35e4f1ae81ee8d6c578389b08025c6fee329246d2241f1ec37df059595706dc50f41c2acc0de7f4b8fd579ef2beaa835dedc7c7ae5d48f9b7a29d53c64c3c3d6d341c858c6e9ce2853688a3ccb4be95216952a761eb6179dcfd3d2fab53c3830ededb7c1306000245fe416b8e066f9068e452391d7a841ea33b50f7dcf5ac114321dff6aa94c06889f689ceb1a5d4c85dd7ce7114223c2632eb827bb82ef74552943818da651c903e0158663e278e3f6443590c5f2a562d732bfdd92cf5aeb0ec969be92af0b29578bd36d4901d56dadc31ecad777903e188de71b07e4892fe525655b5c9f4261e0dd82166966bb80f2552adb752ab16b7236164b0ba5b444a18660fc333eb982fac0659c779580a651ba85cc87f2990e65a01289c1c04268d33156f3e76a035b8b62783fc837437e04bffe6d1f6e3e2d59023d8da55deff26ade9d075d6f79ab386f3de4d8f49c94b9cae072d2c8442e242af7b5b92d52f304395583320d5a1f315e9c027344ee011b056f9a8a12f13a36900e5f69d5e3528956e722a62bf36156866154359fc3bae95f7cd36e6e01c99f1200f6e91bde98f863cc383570928c59f2693757fd46bf70fe4d9eda9295649f97310c11579657c3ed9fa293fa2bbf2daa02f24c7ca85d85a742bf40970b1bd0fc0fe3fd50dcf163867c87fbf1ca9d004e1df2f153f4cb207ed173eb8a9eedb6880eb6d24f9b6d86fe912d5108df226a176a70de8158a2071c0164e8fb75ee94b90fb1c54daa18560a251f5fe39a0e2837716dd6d26753efb397e4ef4f34ba41e35280b129c3c89ab04ab4afaae5fad23529747248c8a248e544c2fd30b050bbb7d1823e4c3831b7757b74d693cd9e8754057300f2388f235d1a98031695985474b22c167cdce33022b38539e3f44dfd44d3108ee2943088d403ad7a3e9e8de55921f6f6a21e0acc0b4374bfac467601f279bbe0fd724f381e1093cd0bfac108d63fad6e3f44fb89f8c1d2fb43f182c7d852624769f61a55686238151b6c45ca6912212c2ae217aefbc79ab927757f9af5978d63bf01da4b6bf644c65586cecfbd0ce1bdc718895be8a563cdf3954ce246713c62968fd7d2dc4d2f7c5511dbe87a398f4519f05b70195dd80399cb16554170a267480cccc6fca67c6b41845bd54132a98639151ecc26ce077cc93afa1b7a13a0dfeebacf588c96f3c5d1b6954e6e253387d83baf4a27bf115cfd972e51373a3bdfa0716b37688b3f601c477748b0fa13db6a15cc736bc0bbae3871d7b9b8fa4804f632ee5a53a952fa548ed606bb9ac84bd13f57bc156e011c1e658c6177d19d61f51d3da54cf78c574c04bd818aa187e3813b62fbcb9d95a7b85f9ccd205136b0eb92b9cb80a88c23e478ce0381b35c0356f254aa55a5be3038ae4d0a9672f9730e3af1efbabd8d2abbc41162a5fac032df257f111f26d63906217500f792ffac9b33b4776876fc851aa68812502e6b3360b486c034e506a3eca7798dfc575add0b20a1b18518ab2f157ee3acba1d6030a694354d2dff0dca2b88ac79f597d7036f6a02283fa01032eee2170d0ccedbda45d479b6ce33ed974f27802a5beb7bafad8bb719d87c84c2c1a4f9c21c1ae7cfc21e7e5616895230fbaf797764fd3943d4d5b5e4349ec4b6ae34a2c74ab7d8eef3171a4d2dd2c78091f8bc3d0e89d568fa3b612a7c0d961184b8e2b4a29cbd37169368cca6cf39eb828b595c71a8b6e26144e0e6c1aca46f4625ef6be8267887b360577027bbece0ad988c48a8a8f4fa4ee366e85cda837b4cba35734320e930f5dcdc7c1056a7877dfd930db4f43a752f508467a588a9c1cd73d672f3fc16005af45ddf6333d9aedf5af1d5e109e1e95c35fc4578e631aad93b266566c92999b43dfc91265545dc5e28c430af73ef08160002a6e8462714d5377bc15a6a80c914cdd0c6acb7258</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">文章对外不可见，请加入https://t.me/liuyesblog获取密码！</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cloud </tag>
            
            <tag> oracle </tag>
            
            <tag> 甲骨文 </tag>
            
            <tag> private </tag>
            
            <tag> 付费 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Bitwarden / Vaultwarden --- 密码管理工具</title>
      <link href="/posts/8223df9d.html"/>
      <url>/posts/8223df9d.html</url>
      
        <content type="html"><![CDATA[<h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>Bitwarden 是一款自由且开源的密码管理服务，用户可在加密的保管库中存储敏感信息。Bitwarden 平台提供有多种客户端应用程序，包括网页用户界面、桌面应用，浏览器扩展、移动应用以及命令行界面。Bitwarden 提供云端托管服务，并支持自行部署解决方案。</p><p>在调研一些市面常用的密码管理工具之后，我选择了 Bitwarden。然后使用自托管的方式部署在服务器上，定时备份数据库，导出密码，安全性也有保证。</p><p><a href="https://bitwarden.com/">https://bitwarden.com/</a></p><p>而Vaultwarden 是一个使用 Rust 编写的非官方 Bitwarden 服务器实现，提供了不错的 web 管理界面，并与 Bitwarden 兼容。</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202308231013036.png" alt="img"></p><h3 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h3><p>先在服务器执行指令。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name bitwardenrs \  </span><br><span class="line">  --restart unless-stopped \  </span><br><span class="line">  -e WEBSOCKET_ENABLED=true \  </span><br><span class="line">  -v /data/password/data/:/data/ \  </span><br><span class="line">  -p 6666:80 \  </span><br><span class="line">  -p 3012:3012 \  </span><br><span class="line">  vaultwarden/server:latest</span><br></pre></td></tr></table></figure><p>部署完成后打开网站，登陆注册之后，删除容器。</p><p>需要配置禁止注册的功能，因为我只想自己使用。如果不禁止注册，可以忽略下面这两步。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker stop bitwardenrs  #停止容器  </span><br><span class="line">docker rm -f bitwardenrs  #删除容器</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name bitwardenrs \  </span><br><span class="line">  --restart unless-stopped \  </span><br><span class="line">  -e SIGNUPS_ALLOWED=false \  </span><br><span class="line">  -e WEBSOCKET_ENABLED=true \  </span><br><span class="line">  -v /data/password/data/:/data/ \  </span><br><span class="line">  -p 6666:80 \  </span><br><span class="line">  -p 3012:3012 \  </span><br><span class="line">  vaultwarden/server:latest</span><br></pre></td></tr></table></figure><h3 id="docker-compose-yml"><a href="#docker-compose-yml" class="headerlink" title="docker-compose.yml"></a>docker-compose.yml</h3><p>通过 ChatGPT 我将这段代码转化成了<code>docker-compose.yml</code> 文件，可以更方便的部署安装。</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202308231013965.png" alt="img"></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">bitwardenrs:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">vaultwarden/server:latest</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">bitwardenrs</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">SIGNUPS_ALLOWED=false</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">WEBSOCKET_ENABLED=true</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/data/password/data/:/data/</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;6666:80&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;3012:3012&quot;</span></span><br></pre></td></tr></table></figure><h3 id="chrome-扩展"><a href="#chrome-扩展" class="headerlink" title="chrome 扩展"></a>chrome 扩展</h3><p>通过反向代理可以使用域名登陆 web 端，并且使用了 chrome 扩展方式，在登陆网站可以自动保存密码。</p><p><a href="https://chrome.google.com/webstore/detail/bitwarden-free-password-m/nngceckbapebfimnlniiiahkandclblb">https://chrome.google.com/webstore/detail/bitwarden-free-password-m/nngceckbapebfimnlniiiahkandclblb</a></p><p>之后我只需要记住一个主密码，其他网站密码全部采用加密方式生成，方便与安全并存。</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 密码 </tag>
            
            <tag> bitwarden </tag>
            
            <tag> vaultwarden </tag>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用 CloudFlare 的邮件转发功能</title>
      <link href="/posts/28f647f0.html"/>
      <url>/posts/28f647f0.html</url>
      
        <content type="html"><![CDATA[<p>在我们需要使用自己的域名作为邮箱地址时，可能大家第一个想到的就是企业邮箱。但是对于我们这种白嫖党而言，一般只需要收件即可。那么除了企业邮箱之外，有没有可选的替代品？答案还真有，并且就在大家常用的 CloudFlare 中。这篇教程就来和大家一起了解并使用 CloudFlare 的邮件转发功能</p><h2 id="准备材料"><a href="#准备材料" class="headerlink" title="准备材料"></a>准备材料</h2><ul><li>一枚域名</li><li>一个 CloudFlare 账户</li></ul><h2 id="部署步骤"><a href="#部署步骤" class="headerlink" title="部署步骤"></a>部署步骤</h2><ol><li>打开 CloudFlare 控制台，然后进入自己嗦想要的域名的管理页面。转到“Email”下面的“Email Routing”处。第一次使用需要添加域名邮箱的 MX 和 TXT 记录，点击“Add records and enable”按钮以添加 DNS 记录</li></ol><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202308081033783.png" alt="img"></p><ol start="2"><li>转到“Routes”选项卡，然后找到“Destination addresses”这边，点击“Add destination address”按钮，输入自己想要转发到的邮箱地址，点击“Save”按钮保存即可。</li></ol><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202308081034090.png" alt="img"></p><ol start="3"><li>找到“Custom addresses”这边，点击“Create custom address”按钮。输入自定义的邮件地址前缀，Action选择“Send to an email”，选择需要转发的邮箱地址。点击“Save”按钮保存即可。</li></ol><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202308081033762.png" alt="img"></p><ol start="4"><li>可以测试一下邮件发送情况</li></ol><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202308081033839.png" alt="img"></p><ol start="5"><li>测试表明已经成功收到了</li></ol><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202308081033799.png" alt="img"></p><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><p>这个功能目前还不支持发件</p><blockquote><p>原文链接：<a href="https://blog.misaka.rest/2023/08/06/cf-email-routing/">https://blog.misaka.rest/2023/08/06/cf-email-routing/</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cf </tag>
            
            <tag> cloudflare </tag>
            
            <tag> email </tag>
            
            <tag> 邮件 </tag>
            
            <tag> 转发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在 CloudFlare Pages 部署 vless 节点</title>
      <link href="/posts/32b3d744.html"/>
      <url>/posts/32b3d744.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="2c4722455f8a6ada0dc26d15c7a8295fc3ed6de18f07d98e2b7a23a9067162db">a1688f47cfccba90c0837639745f9a098abd1bcb625373e3a9ffef7f8755ccf217e5361622b3940409ef5fdb32ebeefc11eeae556255b4840a98c22b815b20158ad0be18a0c5d0e5e3e1237730a71c0d9e602e7ed13eb35c87a42c01a22f97572226e0dd5a99e1ed7053c356e24fa46dc7848ea27416cfaf7295b262d95ba1b45bb0fe1a7c50cb1f92b3b6cfe64765d72039b905cb0d97d27216bbe877338c0f1bb23c3cd79d485cc85f72c86de3eb4ae544c345fd3a3c61cce9f666a24ae0a5847c2c84a45e3c091c50a571849a34a1574688198307c2480cc3f2327aca55a07f9832dfd24c4cc7919f6dab28b434b1e5e3ddb74c6db2e90f756321e2c31c27ce0fd8b546d49e82a0b75d7ef985260622d60ef63c5da1b48b7c7ce3b8a64fa340f19e9c28fe9fe6cf94dabcfaad2ad829b24cc9507f1db892d90caa244be78fbb0e08b06b7e6f5e7228844357f09ccf90d42ba5c7d6d91e44102df600150d9e08821963a199ae3f4936971630500b0a0b8dcd7b3bf1806fecec6aa49b4dc52473cc5e6fd679d47f3af9322829bf6505e437ad696b7564576703a5dfb7b3da56fa58fea30334967e341b36f5a8657272d700d6ee8ea5fb3a8092a72240239aac711e041db40739c6999ded8b5c95dd63a655f893f85535181c279a6d59975b9ef99f37816d6e022b1ef2cd368769987c49b8a91360da0608b099928dbf14b2b10058ea7889ce3ea1518e09cf490cb7ba82775cb152bc8778e9861d2c35358a9871a52d1a1a8b3528be54bdfb7397520ad4b526db366e15a32c3d4e5c0f9a40534eb3b35320e8499e37951227635c491fc879227e8e320006faabd7637de3608d80da594e7c5975110f86fa0162562e5cfa81ac19bb482b19633f23ac254801624010ff27b4821775bc41b806bd5585d9f96c7f820d6cbf51a71f6e352c975e79ce8eaf78065769353454d9878d5b660481e8c656598b8e1f4603931806d86719d622852028ec7a68420c15903fba8ff7495f9c09d0ab3d2594a0029b0db276832a1480aef27e3bba5b14ffa55e2d39b785830e16088ba7d364228a1a76b117e50a18d2ac1529123766dde5fd3cca3f4a4bed485ab81ba461a51f621454a9f7727fb535a3e1a0f0fca11b0fab3ef46a05525d37842165b96b668ed897bd80e64656f8e65fc64c5c73d98fea7deb9bb82bd10846b982e50b8a4a91dfb8d0d2c137f0bf4fbdeab5b1207cb9d51236ae3cf95cc0456e0a465e248bd4f27eb2061c6a7642cb806f385c25391b969a9c31174dd32bafce5bb9d4559aa56a5bf98e0bb0e61b60157a8ce8bee6207d8bc4b66dde7a1b5ed9e842fe1e5c612614c3a6e8853d8d36be86a7f6e581529df94593dbd6a0b801a12c27213f12acb8fc75a2eb884e3295612eb0d5afeb826cee1f2ebd12181e7c730b1fb09d76aa0b0f645e6c2d7a96f1f2d4371a0db4f1b47a5f7e5ca5f45a53318be2fd0ddbceaf5da5b8280f557d9803cd443fdc07b055d697a541c0cc1f8942de0bd244b8a47d12bf2741c595a84e44d15b66b25f226eb50cd58236d97e2ff49ecbe9907bd0f9a72d8f698469ad05bd02df5d4cc88b93f15fdc3c76bee28ea2d4da016c1c8a8a575e394b5ca251d17c842a65775fea8f014d041f743ee8a04c4ed19793ba5506174145d29caa0331b39e1c41ad10caf345d0c28b2b57438bad2ee81df0fa76e8735065bf13e2336ced1ed9d78c225f894daa88539641d68fdaff84b6635127c56c0fb4d3cbcd01b18ee768593276daeeb347609430f918361d5a687f2054f1ee7643ca66cea0062c94d96222e656368186779eb91519ea4ba277be9b2701ada671ce283bd0d1f1a04139737fc212241cc11a8f32d1c04094f4e340d7068562c1234d8ad8c6fd679940f4530d4d9decd42e13a18fa70e725833bce1ccfa3bd3f87e79a6a63759899a8c2d39d33bd1bbde1a2a4fb5d374f277f43f0671a72926030f34faa951b2231a8569675a5f498fff825edf9b0bc2594a8ad9e888327ffb02862ef8f808979e1484e67503d9e5fd338ccab33af195389d38968466558e9f0e0c77ed9b4a627b9b29921013bbeea1a958d5d9a82a241a95628892c77caf167182a2ac27826f7f7795154ff676da353d70c06e833c141b98546af09234569b93637ecc4d6d5116fa75e6fe061dbdcc0867f84dc59ff8df0fe0cb6d66f16644c11ba32d35db58c56118a6da842b3bb519aca5e8b2e18771296f18de628f5a61afa25896a9696fdd12292e420c37aaccdf448a00bb841b925a30e7c68a2d4929c11da3aa270bd93fc6f366b0e0efcdbaaf4b35cd9284b1ac44b6c81cd3d5f977103c6b9aa583945791d57699508306cede3d8789e80cea401c152d06c09f16d1ab7d20dec3bfe4b5c74cec9a53d67d07ba729753a8ab261835b882e3741a2197f8f2ba2571c66c9f7bff613fbc705a60ec62d9a91ba5b7dc44c21ee4c4363c0f66d7feaf718f3705d190e6eaa468627519f702b78296e97b5faafaf280aa289339c84755afa18018fc20ec33d839a226a8a7328776102a6e914370775485da988d5d40eed58558d42cd272adaaf202bdc3381a7f939a0ff76769c60d889bd0f843fbc82135bdd045aefbd31727489bb665cb4e983f22599ff4f01791121e5d0ddb8d325a9f35d0592dfcdf1045b69986caa0a1ba711111cc34d1d2e10e59a4cc315ed7b7850b33de55e506307a64f58069bca128faa3c7fa7b3232e8ad336ebacef17e72ff569543a3794fd28857911fdd027b9dfbb467d88878ab5b077861a44fc2c9564e97e90b0f2626b4ab6e8a90ffa5f711ff30a4b2f4b43de592a476bfadf63a3e24c17fda064293ccb9946577611a9d90e4a4183904fd08a6f1f5dde450ae2b7118c2701cc0ed841724b2069f236a7be813b0783f27624413cb45be6490e09af7a3589e004e46d5e5c6d296dca2c9cf8c8c4587eb20079bcdb64cba62839e6a259e9ed5b57193a733b5b2bbe0f6865244417c5242b699962159834c6bc2ab15e18736d72db50955ef9cc3a0f2b6e84e7f828f56cbda18636b0604a30e83c9046e89526051a516866a30294d12e93836a620609c33e00543beebe20cf7c3071aa855bef3dd5b45d5d13dec2eeb95bd73601b7b513c7219d0adbb58fa62229342b88a11b762c381a6563728fb1e7d7f9d451fa77114ce8e7054d5efc4d1d37f58ca2cd038a92b17cc9350a5b41f8134e56bc7c9b02d50f62c02ba330c2a013332adfca77adda038dcd042a579dde87cb15938ff48f7e4ea73295b963f061ef037ca5859a8000739e766da8a82bdfab2831bcca247c00a8fbd1979a9f18630637ddcc3b9b68aa9fac5b391dc1fa8fb0a193f9e30b3f2417b190c0e63f94b31f81b19c14a41b4b9030a93b451957ebfa7d2295fb559b8e68b1f1b7586ab9d8e44b8d2170e694f700b26509b99a05a91ac617fab71b9f59862d998ac9385bb253cb7e6084e01ec7bb9db30586fc466743c8a397aa484c7d1753ea1e2000ddf66161b252126e8d9f3c23ee5ead93a04c4ec8778b4119afeab0aec469062796169ac4fbdd14d03445a9a42b6d15c5b940f447a23e446b550c5e507235b8479f05a5b4c885dc2053e78c4b56aa32381ada88ee05633343af2962f552844ad27390065344288d8126d94dc2bee6298776e35a57a5a01a14e6e2c86d651e5667568d804041524cbc3d8475e28ac4e4c751e24846df5ab6a4352d736794f6bbac7cacb706d726460ec96964bfaa92f190555baa48778184c4e6e8dcabb3927e16d791e8c9f69eb02f99a831db0c5892afb854b6f6c5dff339f38bc22b0c87bdb14d9f0fd99f952f8fce136b8560974527f6cf56b7e94d069fa87b35c9d02480d565386029eaf43146cbc771d7751dd99b45bdf361fd564891915f94b02180b1985f1f5800f5558ecf451df67e0fd064cc83708e9d5e871661400f434ce8bfd0c6005a953b33db0a8c111d6e263e4052bbd428cc1b06a4f12a34a8c1f66f5d7bf75c50c9f2e9be184b166dcb210cc32f33a8551f3f43a654cc4c7eaee1d0898c05a79533ed2c821c529113414a4fab3d40c635db77ecc2032d5a66969e9cd1880bbf493aa5a3035b41e28d4a54c6cd4e5578d1359eed23922a4634154578ce34817a6b153607e194e225b8f177e1d7ccd1cb153140601f9708ab270f86134fba22c734d136168ffa19ce6b080eab51fa62ab1a6b9d989c58c5c63b49ce61eeedf43e38d9de75926f4a43519efc5565153ce5d1592c863939d8b82dfe1ec6b1a3ad5a9fa4535f10cc80b699c7725898533b7a9c6d93b998b04e7690c1284e7653d066e20635f8116c24d02e70a7b92073d912040f6eb4fd16105740ee87fc4689c8a95ca89d0b6f32cc0485ad9d54d38371fdf98264877a8d2507701f2a8eeb222b883766a5fb7aca85d14f0b3ed827af638a800724407e05648fd24d55334cf3b358842b3e2dce33dac0661316a360072b6e68e1add0d170de1023fc75057d4b9cf540ce84a57e442cbfb92a8af25f84d161f9e33df68276a49c793a4e593af96d62a5bce8d00fc94a6d259c75bae82dcc6733043a98a9cd7055d589b0850014507a3bb98f9f5b55f849a27a6dbbef45c6e617a398392776e842e907ae9091f2b984234eed786905691e9550b5c2a53ec8b477b9f6cd6b985067cc9a4f075d3f810c33d87be916c5c8f0eccf0d8f94b892f419f57e6c45bc0e013f5592a9649dd0f7c62ed0e008d8d9f1c9e83846f6c1ad609d980d2a05373a6808e741fae1ec27f4636e28da4c863bc6fa1f264f829cd2b4af584fc0c041ddb66a7e4f0053a62bc314fb8141ab6be72249ab9c2090bf2d1e37154de26474ac91fbf8cbf9a673d87d494850d919e04dfd35366863bfffe8658001fa183dd45099cf03416b5599a4ec5286ee14d721d7391cfb953339e55ff1259876b5fc6076dfa9cd5624fcf1650bdf540b7cab4a9f4079f2824035dd37d8bf90d778ad88cc1e0f92eb39d2a8eb97dbad68b815801</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">文章对外不可见，请加入https://t.me/liuyesblog获取密码！</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cf </tag>
            
            <tag> cloudflare </tag>
            
            <tag> vless </tag>
            
            <tag> 节点 </tag>
            
            <tag> private </tag>
            
            <tag> pages </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在 CloudFlare Workers 部署 VLESS 节点</title>
      <link href="/posts/f2568a53.html"/>
      <url>/posts/f2568a53.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="590ae4d722784c5fb84ee66ad8e521c72e30df0e2e3320cc8ec45b3b295b4052"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">文章对外不可见，请加入https://t.me/liuyesblog获取密码！</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cf </tag>
            
            <tag> cloudflare </tag>
            
            <tag> vless </tag>
            
            <tag> workers </tag>
            
            <tag> 节点 </tag>
            
            <tag> private </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用 CloudFlare Workers 搭建自己的优选测速地址</title>
      <link href="/posts/8a32044.html"/>
      <url>/posts/8a32044.html</url>
      
        <content type="html"><![CDATA[<p>在使用 XIU2 的优选工具的部分时候，由于 CloudFlare 在这时候对优选测速地址的限制，导致优选的 IP 的速度都是为 0 MB&#x2F;s。那么我们如何避免这个问题呢？下面我来和大家一起来使用 CloudFlare Workers 搭建自己的优选测速地址。</p><h2 id="准备材料"><a href="#准备材料" class="headerlink" title="准备材料"></a>准备材料</h2><ul><li>CloudFlare 账户</li><li>自定义域名并托管至 CloudFlare</li></ul><h2 id="部署步骤"><a href="#部署步骤" class="headerlink" title="部署步骤"></a>部署步骤</h2><ol><li>打开CF的控制台，转到“Workers &amp; Pages”页面，点击“Create Application”按钮</li></ol><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202307112109528.png" alt="img"></p><ol><li>点击“Create Worker”按钮</li></ol><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202307112109155.png" alt="img"></p><ol><li>设置workers的名称，点击“Deploy”按钮</li></ol><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202307112109308.png" alt="img"></p><ol><li>点击“Configure Worker”按钮</li></ol><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202307112112256.png" alt="img"></p><ol><li>点击“Quick Edit”按钮，修改代码</li></ol><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202307112113535.png" alt="img"></p><ol><li>将提供的代码复制到 Workers 中，替换原本的代码</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">addEventListener(&quot;fetch&quot;, event =&gt; &#123;</span><br><span class="line">  let url = new URL(event.request.url);</span><br><span class="line">  if (url.pathname == &quot;/test&quot; &amp;&amp; url.search == &quot;&quot;) &#123;</span><br><span class="line">    url.href=&quot;https://cachefly.cachefly.net/200mb.test&quot;</span><br><span class="line">    let request = new Request(url, event.request);</span><br><span class="line">    event.respondWith(fetch(request));</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ol><li>点击“Save and deploy”按钮，保存代码。然后复制workers地址备用</li></ol><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202307112109678.png" alt="img"></p><ol><li>转到“触发器”，点击“添加自定义域”</li></ol><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202307112113994.png" alt="img"></p><ol><li>输入你想要绑定的域名（备注：一级域名需要绑定在CloudFlare账号里面）</li></ol><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202307112109744.png" alt="img"></p><ol><li>使用命令行打开优选工具，在后面加上 <code>-url 你的优选域名</code> 参数即可</li></ol><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202307112109994.png" alt="img"></p><blockquote><p>原文链接：<a href="https://blog.misaka.rest/2023/07/11/cf-wkrs-yxurl/">https://blog.misaka.rest/2023/07/11/cf-wkrs-yxurl/</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cf </tag>
            
            <tag> cloudflare </tag>
            
            <tag> 优选 </tag>
            
            <tag> 测速 </tag>
            
            <tag> workers </tag>
            
            <tag> 地址 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>甲骨文云服务器忘记密码/丢失密钥的解决办法</title>
      <link href="/posts/f1a10669.html"/>
      <url>/posts/f1a10669.html</url>
      
        <content type="html"><![CDATA[<p>如果是因为系统本身出现了问题导致无法启动不能登陆的，在不删机重开的情况下，就只能是重新DD新的系统。对于 Oracle Linux 想要更换为其他系统的，这篇文章中的方法也一样适用。</p><p>好了，言归正传，我们开始教程。</p><p><strong>要点说明：本文提到的方法必须保证账户内有一台（现有或是新开）可以正常登录的服务器！</strong></p><h4 id="一、准备工作：生成密钥对"><a href="#一、准备工作：生成密钥对" class="headerlink" title="一、准备工作：生成密钥对"></a>一、准备工作：生成密钥对</h4><p>生成的方法有很多。这里我们就以**<code>Xshell</code>**为例。</p><p>打开**<code>Xshell</code><strong>，点击</strong><code>工具</code><strong>-&gt;</strong><code>新建用户密钥生成向导</code><strong>。然后一直点下一步就可以，最后到</strong><code>公钥注册</code><strong>的位置点击</strong><code>保存为文件</code><strong>，将公钥保存为</strong><code>keys.pub</code>**。</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202307112001691.jpeg" alt="img"></p><h4 id="二、控制台操作"><a href="#二、控制台操作" class="headerlink" title="二、控制台操作"></a>二、控制台操作</h4><p>1、首先进入失联的服务器详情页面，点击**<code>停止</code><strong>，弹出框内</strong><code>勾选</code><strong>上 Force stop the instance by immediately powering off，然后</strong><code>确定</code>**，等待停止成功。</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202307112003656.png" alt="img"></p><p>2、下拉到下方列表[左下角]，选择**<code>引导卷</code><strong>，点击引导卷列表右边那三点图标，选择</strong><code>分离</code><strong>，然后</strong><code>确定</code>**。</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202307112004897.png" alt="img"></p><p>3、进入现有（或是新开一台）可正常登录的服务器详情页面，下拉到下方列表[左下角]，选择**<code>附加的块储存卷</code><strong>，点击</strong><code>附加块储存卷</code><strong>，在弹出页面的选择卷下的方框里选择刚刚分离出来的那个引导卷，挂载方式选择</strong><code>半虚拟化</code><strong>，访问方式选择</strong><code>读/写</code><strong>，然后</strong><code>确定</code>**。</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202307112004860.png" alt="img"></p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202307112004142.png" alt="img"></p><p>至此，控制台上的操作就暂时结束。下面我们通过SSH连接继续进行接下来的操作</p><h4 id="三、SSH修复登录"><a href="#三、SSH修复登录" class="headerlink" title="三、SSH修复登录"></a>三、SSH修复登录</h4><p>1、SSH连接刚才挂载块存储的那台能够正常登录的服务器。将本文开始时生成的**<code>公钥</code><strong>上传至</strong><code>/root</code>**根目录。可以使用 Xftp ，也可以使用以下命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 安装 lrzsz 命令</span><br><span class="line">apt install lrzsz -y</span><br><span class="line"></span><br><span class="line"># 输入 rz 命令进行上传</span><br><span class="line">rz</span><br></pre></td></tr></table></figure><p>此时会弹出对话框，选择**<code>公钥文件</code><strong>，点击</strong><code>确定</code>**。</p><p>2、使用**<code>lsblk</code><strong>或</strong><code>fdisk -l</code>**命令，就可以看到刚附加的引导卷，一般是 **<code>/dev/sdb</code>**。再向下找到容量最大的分区，此处是 **<code>/dev/sdb1</code>**。 （具体盘符可能会有差异，请自行查看）</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202307112001662.jpeg" alt="img"></p><p>3、运行以下命令，挂载分区并进行秘钥修复</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"># 挂载分区：/dev/sdb1 必须修改为自己看到的实际分区</span><br><span class="line">sudo mount /dev/sdb1 /mnt</span><br><span class="line"></span><br><span class="line"># 此处 keys.pub 为前面生成的公钥文件名，如果前面未改名的，在此要将 keys.pub 修改为你的公钥文件名</span><br><span class="line">mv /root/keys.pub /root/authorized_keys</span><br><span class="line"></span><br><span class="line"># 覆盖 opc 及 root 用户登录秘钥</span><br><span class="line">cp /root/authorized_keys /mnt/home/opc/.ssh/</span><br><span class="line">cp /root/authorized_keys /mnt/root/.ssh/</span><br><span class="line"></span><br><span class="line"># 开启秘钥登录权限</span><br><span class="line">sed -i &#x27;s/#PubkeyAuthentication yes/PubkeyAuthentication yes/g&#x27; /mnt/etc/ssh/sshd_config</span><br><span class="line"></span><br><span class="line"># 取消分区挂载</span><br><span class="line">sudo umount /mnt</span><br></pre></td></tr></table></figure><p>确认以上操作无误后，我们就回到控制台继续操作。</p><h4 id="四、控制台恢复引导卷挂载并开机"><a href="#四、控制台恢复引导卷挂载并开机" class="headerlink" title="四、控制台恢复引导卷挂载并开机"></a>四、控制台恢复引导卷挂载并开机</h4><p>简单来说，就是将前面第二步中控制台上的操作，从后往回再操作一遍：<strong>在能正常登录的服务器详情页面，分离块存储的挂载</strong>；<strong>在失联服务器页面，挂载引导卷</strong>；<strong>将失联服务器开机</strong>。</p><p>每一步确认完成之后，再进行下一步操作。</p><h4 id="五、登录失联服务器"><a href="#五、登录失联服务器" class="headerlink" title="五、登录失联服务器"></a>五、登录失联服务器</h4><p>设置用户名为**<code>root</code><strong>，验证方式选择开始时生成的</strong><code>私钥</code>**（Xshell中会自动记录私钥，选择好就行），如果前面生成密钥对时没有输入密码，则 Xshell 私钥选项下的密码框留空即可。</p><p>至此，如果服务器IP没有问题，失联的服务器现在就已经可以正常登录了！</p><p>如果想使用密码登录，可以使用下面的命令设置新密码、或禁止秘钥登录。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 设置服务器登录密码</span><br><span class="line">passwd root</span><br><span class="line"></span><br><span class="line"># 禁止秘钥登录 （* 建议保留秘钥登录，并同时备份好你的密钥对。万一哪一天又忘记密码了，还可以使用秘钥登录）</span><br><span class="line">sed -i &#x27;s/PubkeyAuthentication yes/#PubkeyAuthentication yes/g&#x27; /mnt/etc/ssh/sshd_config</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cloud </tag>
            
            <tag> oracle </tag>
            
            <tag> 甲骨文云 </tag>
            
            <tag> 密码 </tag>
            
            <tag> 密钥 </tag>
            
            <tag> 丢失 </tag>
            
            <tag> 忘记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Microsoft 365 A1/A1P/E3/E5/商业版等搭建域名邮局，实现无限别名邮箱</title>
      <link href="/posts/9f1a467f.html"/>
      <url>/posts/9f1a467f.html</url>
      
        <content type="html"><![CDATA[<p><strong>这里要用到的是：catch-all 功能</strong>，又叫全收邮件，就是把发给邮件服务器上不存在账户的邮件都重定向到某个邮箱，而不是直接退信。正常情况下，如发邮件给服务器上不存在的账户会直接退信给发件人。这个教程就是教大家如何利用 Microsoft 365 全局账户，通过<strong>catch-all</strong>功能可以实现无限别名收邮件。</p><p><strong>一，添加域名到Microsoft 365</strong></p><p>打开：<a href="https://admin.microsoft.com/Adminportal/Home?source=applauncher#/Domains">https://admin.microsoft.com/Adminportal/Home?source=applauncher#/Domains</a></p><p>这里我们添加域名 cnmail.ml 作为示例。添加过程很简单，一步一步按照提示做就可以了。</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202307111953278.jpeg" alt="img"></p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202307111953180.jpeg" alt="img"></p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202307111949007.jpeg" alt="img"></p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202307111949787.jpeg" alt="img"></p><p><strong>二，添加一个用户用于邮件归集</strong></p><p>添加用户：<a href="https://admin.microsoft.com/Adminportal/Home?source=applauncher#/users">https://admin.microsoft.com/Adminportal/Home?source=applauncher#/users</a></p><p>这里我添加了一个 <a href="mailto:&#99;&#110;&#x62;&#111;&#x79;&#x40;&#99;&#x6e;&#109;&#97;&#x69;&#108;&#46;&#x6d;&#108;">&#99;&#110;&#x62;&#111;&#x79;&#x40;&#99;&#x6e;&#109;&#97;&#x69;&#108;&#46;&#x6d;&#108;</a>，添加过程中记得一定要赋予订阅权限。</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202307111949901.jpeg" alt="img"></p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202307111953750.jpeg" alt="img"></p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202307111949193.jpeg" alt="img"></p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202307111953213.jpeg" alt="img"></p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202307111949340.jpeg" alt="img"></p><p><strong>三，设置Catch-all功能。</strong></p><p>1）打开Exchange 管理中心：<a href="https://admin.exchange.microsoft.com/#/homepage">https://outlook.office365.com/ecp/</a></p><p>可以通过上面链接直接进入新版 Exchange 管理中心，也可以在 Microsoft 365 管理中心的左侧菜单栏选择 Exchange 进入</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202307111953755.jpeg" alt="img"></p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202307111949565.jpeg" alt="img"></p><p>2）修改域类型</p><p><strong>邮件流</strong> — <strong>接受的域</strong>，点击刚刚添加的域名，在弹出页里把域类型改为 <strong>内部中继</strong>，并勾选 <strong>接受所有子域的邮件</strong>，保存即可</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202307111949831.jpeg" alt="img"></p><p>3）创建一个动态通讯组，用于存放已有的用户。</p><p><strong>收件人</strong> — <strong>组</strong> — <strong>动态通讯组列表</strong> — <strong>添加组</strong></p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202307111949530.jpeg" alt="img"></p><p>此处选择 <strong>动态分布</strong>（通讯组 对应的是 分布，动态通讯组 对应的是 动态分布）</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202307111954618.jpeg" alt="img"></p><p>我这里动态通讯组名称设置为 <strong>exchange</strong></p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202307111949881.jpeg" alt="img"></p><p>此处选择 <strong>仅以下收件人类型</strong> — <strong>具有 Exchange 邮箱的用户</strong></p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202307111954178.jpeg" alt="img"></p><p>设置一个组邮件名，这里为了统一，我仍然使用exchange，然后下一步完成即可</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202307111949103.jpeg" alt="img"></p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202307111949932.jpeg" alt="img"></p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202307111949184.jpeg" alt="img"></p><p>如果刚刚添加的动态通讯组没有在列表中出现，稍等片刻刷新即可看到</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202307111954288.jpeg" alt="img"></p><p>4）创建规则，用于把不存在的邮箱的邮件重定向到指定邮箱</p><p><strong>邮件流</strong> — <strong>规则</strong> — <strong>添加规则</strong> — <strong>创建新规则</strong></p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202307111954241.jpeg" alt="img"></p><p><strong>名称</strong>：随意，这里我填写的是 catch-all；</p><p><strong>在以下情况下应用此规则</strong>：前面选择 <strong>发件人</strong>，后面选择 <strong>在外部&#x2F;内部</strong>，弹出框里选择 <strong>Outside the organization</strong></p><p><strong>请执行以下操作</strong>：前面选择 <strong>将邮件重定向到</strong>，后面选择 <strong>这些人收件人</strong>，弹出框里选择 <strong>本文开始时添加的用户</strong>，这里是 <a href="mailto:&#99;&#x6e;&#x62;&#x6f;&#121;&#x40;&#x63;&#x6e;&#109;&#x61;&#x69;&#108;&#46;&#x6d;&#108;">&#99;&#x6e;&#x62;&#x6f;&#121;&#x40;&#x63;&#x6e;&#109;&#x61;&#x69;&#108;&#46;&#x6d;&#108;</a></p><p><strong>除非</strong>：前面选择 <strong>收件人</strong>，后面选择 <strong>是此组成员</strong>，弹出框内选择 <strong>刚添加的动态通讯组</strong>，这里是 <a href="mailto:&#x65;&#120;&#x63;&#x68;&#x61;&#x6e;&#x67;&#101;&#64;&#99;&#110;&#x6d;&#x61;&#105;&#108;&#x2e;&#109;&#108;">&#x65;&#120;&#x63;&#x68;&#x61;&#x6e;&#x67;&#101;&#64;&#99;&#110;&#x6d;&#x61;&#105;&#108;&#x2e;&#109;&#108;</a></p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202307111949659.jpeg" alt="img"></p><p><strong>设置规则设置</strong>：保持默认即可</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202307111954907.jpeg" alt="img"></p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202307111949409.jpeg" alt="img"></p><p>至此规则新建完成。但要特别注意，当前规则状态为 Disabled，并未自动开启，所以我们还需要<strong>启用规则</strong></p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202307111949779.jpeg" alt="img"></p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202307111949248.jpeg" alt="img"></p><p>到这里，我们就全部设置完成了！</p><p>可以测试一下：</p><p>向 <a href="mailto:&#99;&#110;&#x62;&#111;&#x79;&#x40;&#x63;&#x6e;&#x6d;&#x61;&#x69;&#108;&#x2e;&#109;&#108;">&#99;&#110;&#x62;&#111;&#x79;&#x40;&#x63;&#x6e;&#x6d;&#x61;&#x69;&#108;&#x2e;&#109;&#108;</a> 发送邮件，<a href="mailto:&#x63;&#x6e;&#98;&#x6f;&#x79;&#64;&#x63;&#x6e;&#x6d;&#x61;&#x69;&#108;&#46;&#109;&#x6c;">&#x63;&#x6e;&#98;&#x6f;&#x79;&#64;&#x63;&#x6e;&#x6d;&#x61;&#x69;&#108;&#46;&#109;&#x6c;</a>正常接收；</p><p>向 <a href="mailto:&#120;&#x78;&#120;&#64;&#99;&#x6e;&#x6d;&#x61;&#x69;&#x6c;&#46;&#x6d;&#x6c;">&#120;&#x78;&#120;&#64;&#99;&#x6e;&#x6d;&#x61;&#x69;&#x6c;&#46;&#x6d;&#x6c;</a> 等不存在的前缀域名邮箱发送邮件，邮件重定向到了<a href="mailto:&#x63;&#110;&#x62;&#111;&#x79;&#64;&#99;&#110;&#109;&#x61;&#x69;&#x6c;&#46;&#x6d;&#108;">&#x63;&#110;&#x62;&#111;&#x79;&#64;&#99;&#110;&#109;&#x61;&#x69;&#x6c;&#46;&#x6d;&#108;</a>。</p><p>如果接收出现问题，请按本教程逐步检查相应设置是否正确。</p><p>官方相关文档（* 旧版未更新）：</p><p><a href="https://docs.microsoft.com/zh-cn/previous-versions/office/exchange-server-2010/bb691132(v=exchg.141)">https://docs.microsoft.com/zh-cn/previous-versions/office/exchange-server-2010/bb691132(v=exchg.141)</a></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> microsoft </tag>
            
            <tag> 邮箱 </tag>
            
            <tag> 365 </tag>
            
            <tag> a1 </tag>
            
            <tag> a1p </tag>
            
            <tag> e3 </tag>
            
            <tag> e5 </tag>
            
            <tag> 邮局 </tag>
            
            <tag> 无限 </tag>
            
            <tag> 别名 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决Docker Hub国内无法访问方法汇总</title>
      <link href="/posts/7af009da.html"/>
      <url>/posts/7af009da.html</url>
      
        <content type="html"><![CDATA[<p>2023年5月中旬，著名Docker 容器平台： hub.docker.com 国内均无法正常访问了。</p><p>这样对国内服务器拉取Docker仓库影响比较大。不过得亏国内有Docker Hub镜像平台。有付费的，有免费的！</p><p>下面大概介绍一下！</p><h2 id="配置镜像"><a href="#配置镜像" class="headerlink" title="配置镜像"></a>配置镜像</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir -p /etc/docker</span><br><span class="line">sudo tee /etc/docker/daemon.json &lt;&lt;-&#x27;EOF&#x27;</span><br><span class="line">&#123;</span><br><span class="line">    &quot;registry-mirrors&quot;: [</span><br><span class="line">        &quot;https://docker.m.daocloud.io&quot;,</span><br><span class="line">        &quot;https://dockerproxy.com&quot;,</span><br><span class="line">        &quot;https://docker.mirrors.ustc.edu.cn&quot;,</span><br><span class="line">        &quot;https://docker.nju.edu.cn&quot;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure><h2 id="国内镜像"><a href="#国内镜像" class="headerlink" title="国内镜像"></a>国内镜像</h2><h3 id="DaoCloud-镜像站"><a href="#DaoCloud-镜像站" class="headerlink" title="DaoCloud 镜像站"></a>DaoCloud 镜像站</h3><p>加速地址：<a href="https://docker.m.daocloud.io/">https://docker.m.daocloud.io</a></p><p>支持：Docker Hub、GCR、K8S、GHCR、Quay、NVCR 等</p><p>对外免费：是</p><h3 id="网易云"><a href="#网易云" class="headerlink" title="网易云"></a>网易云</h3><p>加速地址：<a href="https://hub-mirror.c.163.com/">https://hub-mirror.c.163.com</a></p><p>支持：Docker Hub</p><p>对外免费：是</p><h3 id="Docker-镜像代理"><a href="#Docker-镜像代理" class="headerlink" title="Docker 镜像代理"></a>Docker 镜像代理</h3><p>加速地址：<a href="https://dockerproxy.com/">https://dockerproxy.com</a></p><p>支持：Docker Hub、GCR、K8S、GHCR</p><p>对外免费：是</p><h3 id="百度云"><a href="#百度云" class="headerlink" title="百度云"></a>百度云</h3><p>加速地址：<a href="https://mirror.baidubce.com/">https://mirror.baidubce.com</a></p><p>支持：Docker Hub</p><p>对外免费：是</p><h3 id="南京大学镜像站"><a href="#南京大学镜像站" class="headerlink" title="南京大学镜像站"></a>南京大学镜像站</h3><p>加速地址：<a href="https://docker.nju.edu.cn/">https://docker.nju.edu.cn</a></p><p>支持：Docker Hub、GCR、GHCR、Quay、NVCR 等</p><p>对外免费：是</p><h3 id="上海交大镜像站"><a href="#上海交大镜像站" class="headerlink" title="上海交大镜像站"></a>上海交大镜像站</h3><p>加速地址：<a href="https://docker.mirrors.sjtug.sjtu.edu.cn/">https://docker.mirrors.sjtug.sjtu.edu.cn/</a></p><p>支持：Docker Hub、GCR 等</p><p>限制：无</p><h3 id="阿里云"><a href="#阿里云" class="headerlink" title="阿里云"></a>阿里云</h3><p>加速地址：https:&#x2F;&#x2F;<your_code>.mirror.aliyuncs.com</p><p>支持：Docker Hub</p><p>限制：需要登录账号获取CODE</p><h3 id="科大镜像站"><a href="#科大镜像站" class="headerlink" title="科大镜像站"></a>科大镜像站</h3><p>加速地址：<a href="https://docker.mirrors.ustc.edu.cn/">https://docker.mirrors.ustc.edu.cn</a></p><p>支持：Docker Hub、GCR、Quay</p><p>限制：仅供内部访问</p><h3 id="Azure中国镜像"><a href="#Azure中国镜像" class="headerlink" title="Azure中国镜像"></a>Azure中国镜像</h3><p>加速地址：<a href="https://dockerhub.azk8s.cn/">https://dockerhub.azk8s.cn</a></p><p>支持：Docker Hub、GCR、Quay</p><p>限制：仅供内部访问</p><blockquote><p>参考文献：<a href="https://gist.github.com/y0ngb1n/7e8f16af3242c7815e7ca2f0833d3ea6">https://gist.github.com/y0ngb1n/7e8f16af3242c7815e7ca2f0833d3ea6</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> hub </tag>
            
            <tag> 国内 </tag>
            
            <tag> 访问 </tag>
            
            <tag> 汇总 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CacheFly免费CDN 每月5T流量，自定义域名，全球Anycast加速</title>
      <link href="/posts/3393e944.html"/>
      <url>/posts/3393e944.html</url>
      
        <content type="html"><![CDATA[<p>CacheFly是一家内容交付网络(CDN) 提供商，总部位于伊利诺伊州芝加哥。它于2002年推出，开发了世界上第一个基于TCP-anycast的CDN服务！</p><p>最近几天CacheFly官方宣传提供免费CDN加速服务！博主体验了一番，国内速度还是挺不错的！大家可以来试一试！</p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>1，邮箱，推荐微软邮箱和Gmail</p><p>2，信用卡（仅验证不扣费，部分虚拟卡可过）</p><h2 id="免费套餐"><a href="#免费套餐" class="headerlink" title="免费套餐"></a>免费套餐</h2><p>加速节点：北美和欧洲PoP</p><p>免费流量：5TB</p><p>超出流量：0.05 美元&#x2F;GB</p><p>自定义域名：1个</p><p>支持SSL：是，需要自己上传证书</p><p>WebSockets：不支持</p><h2 id="账号注册"><a href="#账号注册" class="headerlink" title="账号注册"></a>账号注册</h2><p>1，注册地址：<a href="https://portal.cachefly.com/signup/free2023">https://portal.cachefly.com/signup/free2023</a></p><p>填写账号，邮箱，密码</p><p>2，填写信用卡信息，完成注册！亲测部分虚拟卡支持验证！</p><p>3，验证邮箱，完成账号注册！</p><h2 id="免费套餐-1"><a href="#免费套餐-1" class="headerlink" title="免费套餐"></a>免费套餐</h2><p>由于官方最近几天新上架的新版免费套餐！最近注册的账号后发现官方有2个版本的免费套餐。</p><p>下图为新版套餐！</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202306291933776.jpeg" alt="img"></p><p>下图为另一个套餐！</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202306291933918.jpeg" alt="img"></p><p>哪个套餐合适？？？ 来咬文嚼字一下？？</p><p>新套餐虽然有5T流量，但是超了流量需要付费0.05美元&#x2F;GB！</p><p>另套餐虽然只有1G流量，但是超了流量也是0元&#x2F;GB？</p><p><strong>如何升级到新套餐？直接给官方客服发送邮件！Support - Open a Ticket 填写内容即可！后续沟通通过邮件就行！</strong></p><blockquote><p>以下为客服回复内容。这是不是不应该升级到新套餐才合适呀？</p><p><strong>Tino Colizza, Jun 26, 2023, 3:26 AM CDT:</strong></p><p>Hello!</p><p>I see you have signed up through the 2023 Free Trial plan, you’ve got 1GiB in monthly traffic and $0 cost per GiB above included transfer.</p><p>I have updated your plan to CacheFly Free tier 2023 with 5TB Traffic included.</p><p>Let me know if there’s anything else I can help with.</p><p>Tino C<br>CacheFly Support</p></blockquote><h2 id="配置网站"><a href="#配置网站" class="headerlink" title="配置网站"></a>配置网站</h2><p><strong>CDN加速的大概原理</strong></p><p>tuchuang.ruyo.net —–CNAME解析—–&gt;  huluwa365.cachefly.ne  —–反代—–&gt; jiketuchuang.com</p><p>对外使用 tuchuang.ruyo.net ！</p><p>完成账号注册后。可按照向导一步一步操作！</p><p>1，点击 【Use Configuration Wizard】填写相关信息</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202306291912606.jpeg" alt="img"></p><p>2，填写要加速的域名网址，这个域名指向加速的服务器IP，这里无法直接填写IP，必须使用一个域名解析过去！</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202306291922019.jpeg" alt="img"></p><p>3，添加要使用的域名！</p><p>如果你没有域名或者不想使用自己的域名，这里可以选择跳过，使用平台提供的域名 xxxxx.cachefly.net。</p><p>这里演示我们添加一个域名！</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202306291919251.jpeg" alt="img"></p><p>4，域名添加证书！可以自行申请免费的证书！</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202306291912417.jpeg" alt="img"> </p><p>5，上传PEM 以及 私钥！</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202306291912054.jpeg" alt="img"></p><p>6，域名添加成功！</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202306291912830.jpeg" alt="img"></p><p>7，将添加的域名CNAME 到 平台提供的域名（xxx.cachefly.net）上即可！</p><p>如果提示 403等错误，证书失败等错误，需要多等等才会生效！</p><h2 id="演示域名"><a href="#演示域名" class="headerlink" title="演示域名"></a>演示域名</h2><p><a href="https://huluwa365.cachefly.net/mm_.1.28M.jpg">https://huluwa365.cachefly.net/mm_.1.28M.jpg</a> （美图谨慎打开）</p><p><a href="https://tuchuang.ruyo.net/mm_.1.28M.jpg">https://tuchuang.ruyo.net/mm_.1.28M.jpg</a> （美图谨慎打开）</p><p><a href="https://huluwa365.cachefly.net/100mb.test">https://huluwa365.cachefly.net/100mb.test</a> （100M文件）</p><p><a href="https://tuchuang.ruyo.net/100mb.test">https://tuchuang.ruyo.net/100mb.test</a></p><h2 id="加速IP"><a href="#加速IP" class="headerlink" title="加速IP"></a>加速IP</h2><p>204.93.150.152</p><p>205.234.175.175</p><p>204.93.150.153</p><p>167.88.158.176</p><p>205.234.175.176</p><h2 id="网络情况"><a href="#网络情况" class="headerlink" title="网络情况"></a>网络情况</h2><table><thead><tr><th>线路</th><th>最快节点</th><th>最慢节点</th><th>平均响应</th></tr></thead><tbody><tr><td>电信</td><td>浙江绍兴61ms</td><td>广东佛山171ms</td><td>108.8ms</td></tr><tr><td>多线</td><td>上海66ms</td><td>河南洛阳128ms</td><td>97ms</td></tr><tr><td>联通</td><td>福建福州80ms</td><td>陕西咸阳235ms</td><td>176.1ms</td></tr><tr><td>移动</td><td>安徽合肥47ms</td><td>陕西西安68ms</td><td>57.5ms</td></tr><tr><td>其他</td><td>新加坡&lt;1ms</td><td>中国台湾省72ms</td><td>9.5ms</td></tr></tbody></table><h2 id="最后总结"><a href="#最后总结" class="headerlink" title="最后总结"></a>最后总结</h2><p>1，最新套餐说明超了流量会扣费？虽然绑定的是一张废卡。</p><p>2，只支持加速域名，不支持IP。</p><p>3，貌似只能针对https网站加速？</p><p>4，更多高级用法自己摸索吧。提供的功能还不少呢，防盗链，文件类型规则等。</p><p>5，还有自选IP貌似可以，有国内IP加速。大家感兴趣自己琢磨琢磨吧。</p><blockquote><p>原文链接：<a href="https://51.ruyo.net/18411.html">https://51.ruyo.net/18411.html</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cdn </tag>
            
            <tag> 免费 </tag>
            
            <tag> 加速 </tag>
            
            <tag> cachefly </tag>
            
            <tag> 全球 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Azure订阅被禁用如何找回服务器数据实操教程</title>
      <link href="/posts/b8f20aee.html"/>
      <url>/posts/b8f20aee.html</url>
      
        <content type="html"><![CDATA[<p>6月27日凌晨，用了将近1年的Azure订阅被禁用了。</p><blockquote><p>我们已禁用你的服务。如果你有存储在此订阅中的数据，我们将于 2023年9月26日 永久删除数据，在此之前我们会保证其安全。在此之前，请登录并保存可能存储在此订阅中的所有重要数据。</p></blockquote><p>官方会将数据保存3个月，方便用户找回重要数据。这个找回数据还是有一定的成本的！下面就详细记录一下过程。</p><p>这里特别感谢皮皮虾佬和VV佬不懈指导！</p><h2 id="事发缘由"><a href="#事发缘由" class="headerlink" title="事发缘由"></a>事发缘由</h2><p>社区网站 JIKE.info，之前是采用了2台Azure服务器部署的。</p><p>一台是17年时候的biz订阅的开通的香港服务器主要用于部署WEB。</p><p>另一台为企业订阅Azure主要运行数据库（mongodb）存储服务。</p><p>6月27日凌晨1点，企业订阅Azure被官方禁用。该订阅使用了快1年了，每个月100刀，也算值了！</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202306291850471.jpeg" alt="Azure订阅被禁用如何找回服务器数据实操教程"></p><p>但是可怕的是，我的数据库备份脚本竟然不知何时停了！最近一次备份2个月前！好家伙 JIKE难道再次跑路了？</p><h2 id="省流步骤"><a href="#省流步骤" class="headerlink" title="省流步骤"></a>省流步骤</h2><p>1，被封同一个账号，开通即用即付订阅。</p><p>2，将被封Azure服务器的磁盘创建快照到即用即付订阅上。</p><p>3，新快照创建磁盘。</p><p>4，基于新磁盘创建虚拟机。</p><p>5，找回数据，删虚拟机，删即用即付订阅。</p><h2 id="详细步骤"><a href="#详细步骤" class="headerlink" title="详细步骤"></a>详细步骤</h2><h3 id="开通即用即付"><a href="#开通即用即付" class="headerlink" title="开通即用即付"></a>开通即用即付</h3><p>1，登录订阅被禁用的账号，点击订阅 - 添加 - 选择即用即付产品服务。</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202306291857946.jpeg" alt="Azure订阅被禁用如何找回服务器数据实操教程"> </p><p>2，填写个人信息。邮箱以及手机号码。国家地区选择中国，国内手机号即可。</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202306291850363.jpeg" alt="Azure订阅被禁用如何找回服务器数据实操教程"></p><p>3，账单地址，全套国内信息！</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202306291857457.jpeg" alt="Azure订阅被禁用如何找回服务器数据实操教程"></p><p>4，信用卡。建议使用国内真实的信用卡！没必要尝试虚拟卡了。毕竟数据重要！</p><p>验证信用卡会扣1美元，立即返还！</p><p>亲测招行VISA可以！</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202306291850470.jpeg" alt="Azure订阅被禁用如何找回服务器数据实操教程"></p><p>5，信用卡验证成功后！技术支持选择：没有任何技术支持</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202306291857800.jpeg" alt="Azure订阅被禁用如何找回服务器数据实操教程"></p><p>6，等待一会。订阅开通成功！</p><p>成功后，订阅列表选择 全局筛选器，全部。可见即用即付订阅！</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202306291856338.jpeg" alt="img"></p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202306291850810.jpeg" alt="img"></p><h3 id="创建磁盘快照"><a href="#创建磁盘快照" class="headerlink" title="创建磁盘快照"></a>创建磁盘快照</h3><p>1，找到被停用Az服务器的磁盘，选择 创建快照</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202306291850887.jpeg" alt="Azure订阅被禁用如何找回服务器数据实操教程"></p><p>2，订阅选择：即用即付，其他随意填写即可。</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202306291850338.jpeg" alt="Azure订阅被禁用如何找回服务器数据实操教程"></p><p>3，预览数据，创建快照！稍等一会快照创建完成！</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202306291850489.jpeg" alt="Azure订阅被禁用如何找回服务器数据实操教程"></p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202306291856790.jpeg" alt="Azure订阅被禁用如何找回服务器数据实操教程"></p><h3 id="快照创建磁盘"><a href="#快照创建磁盘" class="headerlink" title="快照创建磁盘"></a>快照创建磁盘</h3><p>1，快照创建成功后，预览快照。点击 创建磁盘！</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202306291850615.jpeg" alt="Azure订阅被禁用如何找回服务器数据实操教程"></p><p>2，磁盘选择即用即付订阅，可用性区域选择：无需基础结构冗余</p><p>点击查看创建！ </p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202306291856391.jpeg" alt="Azure订阅被禁用如何找回服务器数据实操教程"></p><p>3，稍等一会即可创建磁盘成功！如图！</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202306291909059.jpeg" alt="Azure订阅被禁用如何找回服务器数据实操教程"></p><h3 id="磁盘创建VM"><a href="#磁盘创建VM" class="headerlink" title="磁盘创建VM"></a>磁盘创建VM</h3><p>1，上面操作完成后。直接使用该磁盘创建虚拟主机！</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202306291850246.jpeg" alt="Azure订阅被禁用如何找回服务器数据实操教程"></p><p>2，创建虚拟主机就不多说了！唯一留言的是 许可证类型：其他</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202306291850986.jpeg" alt="Azure订阅被禁用如何找回服务器数据实操教程"></p><p>3，虚拟机创建！成功！SSH登录虚拟机！终于登录成功了！</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202306291850248.jpeg" alt="Azure订阅被禁用如何找回服务器数据实操教程"></p><p>4，开始找回数据</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202306291855960.jpeg" alt="Azure订阅被禁用如何找回服务器数据实操教程"></p><h3 id="删服务停订阅"><a href="#删服务停订阅" class="headerlink" title="删服务停订阅"></a>删服务停订阅</h3><p>数据找回完成后！删除虚拟主机！取消即用即付订阅！</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202306291850911.jpeg" alt="Azure订阅被禁用如何找回服务器数据实操教程"></p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202306291850290.jpeg" alt="Azure订阅被禁用如何找回服务器数据实操教程"></p><h2 id="消耗金额"><a href="#消耗金额" class="headerlink" title="消耗金额"></a>消耗金额</h2><p>这一波操作，Azure花费多少钱？目前还不知道。需要等下个月出账单日，然后再等半个月信用卡自动扣费。</p><p>到时候本文再更新具体金额！</p><h2 id="最后总结"><a href="#最后总结" class="headerlink" title="最后总结"></a>最后总结</h2><p>1，订阅被禁后，该订阅下的任何服务都不能正常使用！</p><p>2，不是所有AZ账号都能开通即用即付订阅！</p><p>3，开通免费试用能否找回数据？应该不太容易，因为免费试用必须指定服务器配置才行。</p><p>4，不想开即用即付订阅，也可以迁移一个可用的订阅到该账号也行。比如另一个企业订阅！</p><p>5，快照创建磁盘后，可以将磁盘下载到本地。挂载到本地Linux虚拟机找回数据（过程比较麻烦，有时间的童鞋可折腾）。</p><p>6，本文采用的方式是直接磁盘创建虚拟机。也可以采取创建新虚拟机挂载这块磁盘（需要有一定的Linux运维知识，小白别折腾了）。</p><p>7，删除订阅后会不会不产生扣费？ 答案：不会的</p><p>8，限制信用卡支付额度，不让Az来扣费可否？答案：可以，但是这个卡没法再在Azure中使用了。</p><blockquote><p>原文链接：<a href="https://51.ruyo.net/18413.html">https://51.ruyo.net/18413.html</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> azure </tag>
            
            <tag> az100 </tag>
            
            <tag> 订阅 </tag>
            
            <tag> 禁用 </tag>
            
            <tag> 找回 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>甲骨文云(Oracle Cloud)升级付费账户</title>
      <link href="/posts/dc6473d4.html"/>
      <url>/posts/dc6473d4.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202306141614795.png" alt="img"></p><p>23年2月份甲骨文终于正式公布清理闲置资源，当时博客介绍了官方相关限制。并且提供了一些保活的教程。</p><p>后来不少童鞋反馈，保活脚本运行着呢？服务器还是被停了？？难道保活失败了？？</p><p><strong>其实真实的原因是，在23年4月20日左右，官方叒调整了清理闲置资源的规则了！</strong></p><p><strong>23年1月30日</strong> 空闲计算实例的回收</p><blockquote><p>Idle Always Free计算实例可能会被 Oracle 回收。如果在 7 天内满足以下条件，则 Oracle 会将虚拟机和裸机计算实例视为空闲：</p><ul><li>95%时间CPU利用率低于10%</li><li>网络利用率低于10%</li><li>内存利用率低于 10% （仅适用于A1 形状）（ARM实例）</li></ul></blockquote><p><strong>23年4月20日</strong> 空闲计算实例的回收</p><blockquote><p>Idle Always Free计算实例可能会被 Oracle 回收。如果在 7 天内满足以下条件，则 Oracle 会将虚拟机和裸机计算实例视为空闲：</p><ul><li>95%时间CPU利用率低于15%</li><li>网络利用率低于15%</li><li>内存利用率低于 15% （仅适用于A1 形状）（ARM实例）</li></ul></blockquote><p>想继续愉快的白嫖？把保活脚本占有资源调整的高一点！或者把账户升级一下！</p><p>好嘞，本文就是记录一下升级账户的过程！</p><h2 id="升级目的"><a href="#升级目的" class="headerlink" title="升级目的"></a>升级目的</h2><p>1，更好的使用甲骨文的服务，从19年一直白嫖到现在。甲骨文云已经算非常良心了！</p><p>2，升级后不再会被清理闲置资源！</p><p>3，可以开通其他区域的服务器（比如韩国，日本等等），需要联系客服开通（第一批注册用户可以自己开通）！</p><p>参考文章：<a href="https://51.ruyo.net/14138.html">申请Oracle Cloud永久免费服务+300美元试用额度</a></p><p>4，可以使用甲骨文云的付费服务！</p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>1，邮箱（最好是注册邮箱）</p><p>2，信誉卡一张（我使用招商VISA卡，能支付100多刀的额度）</p><p>3，已注册甲骨文账户</p><h2 id="省流步骤"><a href="#省流步骤" class="headerlink" title="省流步骤"></a>省流步骤</h2><p>1，登陆账户</p><p>2，绑定支付方式（扣100刀验证，会立马返还，保证额度够）</p><p>3，确认升级账户</p><p>4，等官方审核</p><p>5，<strong>封号或者升级成功</strong></p><h2 id="详细步骤"><a href="#详细步骤" class="headerlink" title="详细步骤"></a>详细步骤</h2><h3 id="账号情况说明"><a href="#账号情况说明" class="headerlink" title="账号情况说明"></a>账号情况说明</h3><p>这次升级的账号为 2020年注册的账号！</p><p>注册信息均填写中国信息（国家，地址等）！</p><p>注册时使用的招行VISA卡！</p><p>注册开通的区域是韩国！</p><p>账号已开通了2台始终免费的服务器！</p><h3 id="绑定支付方式"><a href="#绑定支付方式" class="headerlink" title="绑定支付方式"></a>绑定支付方式</h3><p>1，登陆账户，网页头部 点击 【升级】</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202306141610045.jpeg" alt="img"></p><p>2，添加付款方式。填写电子邮箱！</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202306141610657.jpeg" alt="img"></p><p>3，填写信誉卡信息</p><p>支持，万事达 &#x2F; VISA &#x2F; 美国运通卡</p><p><strong>博主亲测，招商VISA双币卡！地址信息，全部都是国内信息（因为我注册的时候就是用的国内信息）</strong></p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202306141610383.jpeg" alt="img"></p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202306141610890.jpeg" alt="img"></p><p>4，绑卡验证信用卡。</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202306141607991.jpeg" alt="img"></p><h3 id="升级付费账户"><a href="#升级付费账户" class="headerlink" title="升级付费账户"></a>升级付费账户</h3><p>1，付款方式绑定成功后！可以勾选升级账户！！</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202306141611495.jpeg" alt="img"></p><p>2，二次确认是否升级！确认升级后。会再次进入审核！审核过程中可能会扣费验证信誉卡（我的卡并未再次验证）。</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202306141611316.jpeg" alt="img"></p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202306141611135.jpeg" alt="img"></p><p>3，大概经过5个小时后。来邮件提示升级成功。登陆查看情况！</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202306141611562.jpeg" alt="img"></p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202306141607065.jpeg" alt="img"></p><h2 id="最后总结"><a href="#最后总结" class="headerlink" title="最后总结"></a>最后总结</h2><p>升级过程比较简单！以上仅为个人情况说明！不一定适合大家所有人！</p><p>不少童鞋因为升级账号导致封号，酌情操作！后果自负！</p><p>升级账号后，一定要注意免费额度使用情况！避免产生费用！</p><p>如果你还不太懂甲骨文云永久免费服务器？建议翻翻博客的历史文章吧！</p><p>升级成功和失败的童鞋可以积极留言！分享经验！避免其他童鞋踩坑！</p><blockquote><p>原文链接：<a href="https://51.ruyo.net/18403.html">https://51.ruyo.net/18403.html</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cloud </tag>
            
            <tag> oracle </tag>
            
            <tag> 甲骨文 </tag>
            
            <tag> 升级 </tag>
            
            <tag> 付费 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>教育邮箱认证方式注册Azure详细步骤</title>
      <link href="/posts/bec2c9cc.html"/>
      <url>/posts/bec2c9cc.html</url>
      
        <content type="html"><![CDATA[<h3 id="一、介绍"><a href="#一、介绍" class="headerlink" title="一、介绍"></a>一、介绍</h3><p>前面介绍的方法，适用于有全局管理员的edu邮箱：<a href="https://www.nodeseek.com/post-7935-1">https://www.nodeseek.com/post-7935-1</a><br>如果没有全局管理员，注册Azure会提示你没有资格。那么可以通过edu邮箱验证的方式来注册azure，适用于大多数edu邮箱。</p><h3 id="二、需要准备的"><a href="#二、需要准备的" class="headerlink" title="二、需要准备的"></a>二、需要准备的</h3><p>1、Azure注册地址：<a href="https://portal.azure.com/">https://portal.azure.com/</a><br>2、你的edu邮箱<br>3、一个干净的手机号（最好是自用的没撸过az的），一个干净的ip（最好是家宽，不要挂代理）</p><h3 id="三、具体步骤"><a href="#三、具体步骤" class="headerlink" title="三、具体步骤"></a>三、具体步骤</h3><p>1、使用其他邮箱注册Azure账号：<a href="https://portal.azure.com/">https://portal.azure.com/</a><br>我用的outlook邮箱：<a href="mailto:&#110;&#x6f;&#100;&#101;&#x73;&#101;&#x65;&#107;&#x30;&#x30;&#x31;&#x40;&#x6f;&#117;&#x74;&#x6c;&#111;&#111;&#107;&#46;&#99;&#111;&#109;">&#110;&#x6f;&#100;&#101;&#x73;&#101;&#x65;&#107;&#x30;&#x30;&#x31;&#x40;&#x6f;&#117;&#x74;&#x6c;&#111;&#111;&#107;&#46;&#99;&#111;&#109;</a><br><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202306121611074.png" alt="img"><br>2、注册完成后，认证教育资格：<a href="https://azure.microsoft.com/zh-cn/free/students/">https://azure.microsoft.com/zh-cn/free/students/</a><br>这里需要手机号码认证，<br><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202306121611885.png" alt="img"><br>认证通过后，填写你的edu邮箱验证，<br><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202306121611491.png" alt="img"><br>此时查看你的邮箱，会受到验证链接，打开链接后确认你的身份<br><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202306121611503.png" alt="img"></p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202306121614182.png" alt="img"><br><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202306121615145.png" alt="img"><br>到这个页面填写个人信息，填写信息尽量真实，可以编一个真实地址，提交注册后等待确认<br><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202306121611819.png" alt="img"><br><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202306121611686.png" alt="img"><br>如果申请成功了会提示：正在重定向…<br><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202306121615915.png" alt="img"><br>ok了<br><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202306121611969.png" alt="img"></p><h3 id="四、创建虚拟机"><a href="#四、创建虚拟机" class="headerlink" title="四、创建虚拟机"></a>四、创建虚拟机</h3><p>Az香港的线路延迟只有40左右，是真的香，这里记录一些知识点。</p><p>AZ100刀是学生账户，使用特定机型是可以免费一年的。</p><p>AZ200刀是普通账户，赠送200刀免费用一个月，升级版200到听说是可以欠费使用，欠费一年，具体不清楚。</p><p>AZ香港可以拿来做中转，中转一些垃圾节点，虽然没有光移牛逼，但是也能上垃圾节点跑起来。</p><p>AZ100刀如果在开虚拟机的时候，订阅加载不出来，导致开机失败，如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202306122045509.png" alt="img"></p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202306122050440.png" alt="img"></p><p>这种问题是使用ip不行，更换ip就好了。</p><p>AZ香港是East Asia</p><p>1、AZ100刀免费只能使用B1s也就是如下所示套餐：B1s(1vcpu,1GiB内存)</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202306122045270.png" alt="img"></p><p>2、AZ100刀如果免费使用只能使用动态ip，不可以固定ip，否则会收费</p><p>动态ip，只要不通过AZ面板重启，基本ip就不会变</p><p>3、AZ默认的30G硬盘是收费的。所以linux需要修改硬盘为：P6-240 64G</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202306122048655.png" alt="img"></p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202306122048162.png" alt="img"></p><p>4、放行端口，后台–网络–入站和出站都添加 端口范围* 优先级100</p><p>5、AZ切换root，ssh进去后执行sudo -i</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> azure </tag>
            
            <tag> az100 </tag>
            
            <tag> edu </tag>
            
            <tag> 教育 </tag>
            
            <tag> 邮箱 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FRP一键安装脚本</title>
      <link href="/posts/c3f5490d.html"/>
      <url>/posts/c3f5490d.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本文分享我自己写的FRP一键安装脚本, 同时支持 FRPS (服务端) 和 FRPC (客户端)</p><h2 id="脚本分享"><a href="#脚本分享" class="headerlink" title="脚本分享"></a>脚本分享</h2><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202306091411196.png" alt="img"></p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202306091411282.webp" alt="img"></p><h3 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash &lt;(curl -fsSL https://raw.githubusercontent.com/Slotheve/Shells/main/frp.sh)</span><br></pre></td></tr></table></figure><blockquote><p>原文链接：<a href="https://www.slotheve.com/frp/">https://www.slotheve.com/frp/</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 脚本 </tag>
            
            <tag> 一键 </tag>
            
            <tag> frp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用CertBot申请证书+自动续期</title>
      <link href="/posts/b4fedc42.html"/>
      <url>/posts/b4fedc42.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>毕竟acme.sh是较新的证书申请方式, 但毕竟较新, 兼容性和适配范围不如certbot, 所以本文介绍如何使用certbot申请证书并自动续期</p><h2 id="一键脚本"><a href="#一键脚本" class="headerlink" title="一键脚本"></a>一键脚本</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 一键脚本仅支持CloudFlare</span><br><span class="line">bash &lt;(curl -fsSL https://raw.githubusercontent.com/Slotheve/Shells/main/certbot.sh)</span><br></pre></td></tr></table></figure><h2 id="手动安装"><a href="#手动安装" class="headerlink" title="手动安装"></a>手动安装</h2><ul><li><strong>准备工作</strong></li></ul><p>安装certbot本体</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># APT系  </span><br><span class="line">apt install -y certbot</span><br><span class="line"># YUM系</span><br><span class="line">yum install -y certbot</span><br></pre></td></tr></table></figure><ul><li><strong>安装插件</strong></li></ul><p># cloudflare (软件包自带)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python*-certbot-dns-cloudflare</span><br></pre></td></tr></table></figure><p># dnspod (需先安装pip)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install certbot-dns-dnspod</span><br></pre></td></tr></table></figure><p># aliyun (需先安装pip)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install certbot-dns-aliyun</span><br></pre></td></tr></table></figure><ul><li><strong>创建配置文件并赋予权限</strong></li></ul><p># cloudflare</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">touch /etc/letsencrypt/cloudflare.ini</span><br><span class="line">cat &gt; /etc/letsencrypt/cloudflare.ini &lt;&lt; EOF</span><br><span class="line">dns_cloudflare_email = # 你的cf邮箱</span><br><span class="line">dns_cloudflare_api_key = # 你的cf global api</span><br><span class="line">EOF</span><br><span class="line">chmod 600 /etc/letsencrypt/cloudflare.ini</span><br></pre></td></tr></table></figure><p># dnspod</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">touch /etc/letsencrypt/dnspod.ini</span><br><span class="line">cat &gt; /etc/letsencrypt/dnspod.ini &lt;&lt; EOF</span><br><span class="line">dns_dnspod_email = # 你的dnspod邮箱</span><br><span class="line">dns_dnspod_api_token = # 你的dnspod api token</span><br><span class="line">EOF</span><br><span class="line">chmod 600 /etc/letsencrypt/dnspod.ini</span><br></pre></td></tr></table></figure><p># aliyun</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">touch /etc/letsencrypt/credentials.ini</span><br><span class="line">cat &gt; /etc/letsencrypt/credentials.ini &lt;&lt; EOF</span><br><span class="line">certbot_dns_aliyun:dns_aliyun_access_key = # 你的aliyun密钥</span><br><span class="line">certbot_dns_aliyun:dns_aliyun_access_key_secret = # 你的密钥密码</span><br><span class="line">EOF</span><br><span class="line">chmod 600 /etc/letsencrypt/credentials.ini</span><br></pre></td></tr></table></figure><ul><li><strong>申请证书</strong></li></ul><p># cloudflare</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">certbot certonly --dns-cloudflare \</span><br><span class="line">    --dns-cloudflare-credentials /etc/letsencrypt/cloudflare.ini \</span><br><span class="line">    -d # 你的域名,多个域名使用 &#x27;,&#x27; 分隔</span><br></pre></td></tr></table></figure><p># dnspod</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">certbot certonly -a dns-dnspod \</span><br><span class="line">    --dns-dnspod-credentials /etc/letsencrypt/dnspod.ini \</span><br><span class="line">    -d # 你的域名,多个域名使用 &#x27;,&#x27; 分隔</span><br></pre></td></tr></table></figure><p># aliyun</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">certbot certonly -a certbot-dns-aliyun:dns-aliyun \</span><br><span class="line">    --certbot-dns-aliyun:dns-aliyun-credentials /etc/letsencrypt/credentials.ini \</span><br><span class="line">    -d # 你的域名,多个域名使用 &#x27;,&#x27; 分隔</span><br></pre></td></tr></table></figure><p>第一次申请填写几个参数（邮箱、是否同意条款、是否接收资讯邮件）就行。</p><ul><li><strong>安装证书</strong></li></ul><p>证书申请后保存在 <code>/etc/letsencrypt/live/</code> 域名&#x2F;目录下。</p><ul><li><strong>自动续期</strong></li></ul><p>使用crontab任务计划来实现自动续期</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0 3 */8 * * certbot renew</span><br></pre></td></tr></table></figure><p>保存后重启crond服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart crond/crontab/cron</span><br></pre></td></tr></table></figure><p>每隔8天凌晨3点整执行证书续签指令</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 脚本 </tag>
            
            <tag> CertBot </tag>
            
            <tag> 证书 </tag>
            
            <tag> 自动 </tag>
            
            <tag> 续期 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在Alpine上使用Nezha一键脚本</title>
      <link href="/posts/7f349c0f.html"/>
      <url>/posts/7f349c0f.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>因为每个人的技术参差不齐, 就算是保姆级的手动安装教程, 有时候也有人搞不懂, 所以<code>官方</code>一键脚本是最适合小白的。</p><h2 id="一、确定Alpine版本"><a href="#一、确定Alpine版本" class="headerlink" title="一、确定Alpine版本"></a>一、确定Alpine版本</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/os-release</span><br></pre></td></tr></table></figure><p>请先升级Alpine到<code>3.17及以上</code> (反正Alpine占用巨低,升级不影响)</p><h2 id="二、安装依赖"><a href="#二、安装依赖" class="headerlink" title="二、安装依赖"></a>二、安装依赖</h2><p>先取消Alpine源文件里的<code>#</code>号 (若有<code>#</code>号)</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202306091045887.png" alt="img"></p><p>安装 <code>bash curl</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apk update &amp;&amp; apk add bash curl</span><br></pre></td></tr></table></figure><h2 id="三、运行一键脚本"><a href="#三、运行一键脚本" class="headerlink" title="三、运行一键脚本"></a>三、运行一键脚本</h2><p>复制脚本</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202306091046614.png" alt="img"></p><p>运行脚本</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202306091046786.png" alt="img"></p><p>提示: 注意脚本命令的<code>sudo</code>, 不是所有系统都带<code>sudo</code>, 自行删除</p><p><strong>OK !</strong> 此时, 你的Alpine探针小鸡已上线了</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202306091046878.png" alt="img"></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> alpine </tag>
            
            <tag> 脚本 </tag>
            
            <tag> 一键 </tag>
            
            <tag> nezha </tag>
            
            <tag> 监控 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>alpine系统一键脚本装X-UI面板创建vmess节点套CF一条龙搞定</title>
      <link href="/posts/a983f08a.html"/>
      <url>/posts/a983f08a.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="0ef78e9af0989bffea95dae9a5bbd110e92d0e4c438407998dfe73b2bf0a4f05">a1688f47cfccba90c0837639745f9a0977a3b7da79f3cb4835505ac5e151c73c6e35385bf4c50eafb6a92854f2c61f1cbe2f2635953710b48919b0a7e66b372de99183580bd060e02110f81c744573032731cb1fd10bae423d175f4109cca5213ab8289ed2dfd72652ba668ad0ea2fcae42563c83f545c8de46038a30d9600d6e3b43f7f2db172f018118292ad99dc8a8be5d621d99a63ad8c7a16600664b65d8e82ea2fe5bebbebf8cda35290e3a64d5ac7e891e7bf79903a37df39ac4d9e715a2eb993127277311c51041a045026086080032b58c446a8ea2d0d4e2d30cb16e94a7ad1a8dbf2218d20e4bf2aa62345466824467097778810eb396fcb0866614d2bbc3971727014b96dbf6e5720bd336ad0906bcbdcef6ee5e6d26d276d9dc2225ac68980c042d71e214ee30399a464febd1b115d6ebe57a331423bcba160ff93466db0a8bf23c448db57add2443b641481df0dbcd894bab422cf77d5c155fcbe09e8694a7ba9028257bfc621a1b0dc929678438fbda94610e4edd3e2c95014807b249832e5851cfb94d91cb8f43417dd4c99c16f1d5b2becfe1326ec8160cd1722feff4773b59c0d6cf2d49f6f4fca8ce95cd7c3feb69f1f8b3546376d96d062fbc4d49d2efa110c87c2d8dbd0f93c0ee124ab74578f8a4dad905b00b0029042753b91da4cc9706c769e30f79966d24a9444a12d7602f880b3d87e5531bfe95ef49f216ab883a3071495209d4a6d8a5619f6b14f09120ea6dadb2a9c74bbed189bc8e99c13176cef4d43789d82e9cc46fc8cb4782873ddcabdb270e3e4a70c7ac543b4d8e716c51a6bbee505bfd891372d9dfabf30a9f0744b20b475816b81cdafcb3d41b022c21d3d6d4677280cdc088cd486973495cd2daf041db29e8629aa455aff9c62f347bb5734b7dd9d232fadd57d108533ebd6b1a4214033c4fcce81bfdac2136b92ce3571f750d8877be000ca1de5feb630a4af94f2be1eaa81d3e026378b59b30c9c787f654b16514ec0814a6aa43fee52d0d12b48f20c3ea9f4a14568c1c6bfd05fea1ae25953024ab59723675cf30a775dabd18d8a5e52f32e43e1e8cb6518c337bb64d36e985ff59c2c1ca8132e3c121e34fec5bda1197a4f6659a10ebea365ec4eb5bed36e8f908e57927d6061c2d2927cc5e4e793d91e31711111f80fd2184fed626c62a93a33c5c290c24ee872330856b360ba02baf06d263c14d142d3e9490ea008d7ba7342f399d3a14873de525ebf392e7a6c4612a04bcb2c98018d448cdf472216ed421fd95d8c60284a807d5b3a864e23e5e53b1ff5643e0bcd06454e2f604123c5e7d715f785b7a4fc54a0cba0ca87071e5816afad485d900840a656e895a3681e8dbac24805197c6f3e796d01743e4648233b81217d5125e4ca214775b8db87554fab8efbb3efa9edb267583cb069a5212d65ebd8edf8b4dbbc4a1c75a7c2709106c7b243bf40958ab0241b554cd526a6e102501a8663918834634daaa73ed26b142f17396ec27c01417e399c6a01269c1f1c7e9c08f2b1d11873c469df6567755410b6889aecbfa93483f7c6e06ca8a6d08ed27d188661333d846ecd48a602d45455a2661a00f8b9e53e6129236cedf00d57648a4e8212eddb607d8782bb9eceaaf1149bb43f5756ec17532053be82e0d9adcecbe581d580ab3954b4cc5f4259058ddbee9b3f895d4da45e97c09006d638ce67d6dbbe2aa3b3a28add09d672005a58935bb6102f37e256a938b6fbb10b38451cba1899ae4ddecd5edad8ec2d112f2d588f7f12cef2b04f4fac730f6f51064f6673b868c6789e568cead11b957ca06431ce938f98142b9b97322dfde124424c08ec644ab21b3d14746864ab74c950ff3811780e640ad07c153b312c25a9e6c27087cccd13828b07496e88c79b135aa4f8b2a9673cd1465efff6a46e9ffd49752a5a98681a1e8b5961f7a7015a79e60b12d10118fb6b5cf09b8c357aebb5f17be2b9a39124846be0fa51e31bab7f583786cc34ea5bdda7a1949c232e3fc19f0ceba79fc6f8d730c5d51dfec7423b7b91558bd14fdfbdb77d9ad4c3382f7f82c92a61d1c3a1a6b2d2c55a73650a8fe31609ae0e3c43f59faf2a620c81ba0182c098ac362d63beffd8d7266e9a0850d87390cc3e5e8fe2632518c19e5ca8ced05c6cfca709be8815624090b4b0b082b80bd75f3e0986e2e582c2d92b143e817e259036a2f03f9e700d28f9ba08a9a6619f9909e6b735fe43aa45e43519a80068efa26d695606f3af34cae78031192731bf366a4856bfa19da308d5447abee1e08db470ebcc6ad95cec259cb0c296c36c0660ecc719e33aa4459183530abcb97d7a6fbf1b1309b0d403f913ce558094de5009d7c0cd0a94ff58749959627ea21524fbf6443a9d2423edec4bfd3b9398b180bed3b010b9fec1b8d6a41cf609cbe87a0517df73069747ff5c2d953230bf7deab38a9fd67b20dd4d73abeb890764f6f359a7f92c10a451b659837abab6abbcf96c0e79166c1bc8eb78065e5eb8ab9ee969ba7de660906aaabfe93febbc05af1f53daf2fe334611d23b2a2594a9ed495092009918b84f4440ae6a1d8cd98a709a80fa6ce2f7a1c9a5b56a6e330f59859b1e4b6e8b85c2ae18c408aac3f84c202b70301bd96e1454aed15cd99bf557c4e969e54ab8423e1fb206e43625484be3ad162cbd6476588eba11581a9de633299f1224c1b914a887edb3d9006956dcb31de1f937dcb630c98935af896255aae5df7adf78c86e40a0cbdb72359fddfce69db9</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">文章对外不可见，请加入https://t.me/liuyesblog获取密码！</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cf </tag>
            
            <tag> alpine </tag>
            
            <tag> 脚本 </tag>
            
            <tag> private </tag>
            
            <tag> 一键 </tag>
            
            <tag> x-ui </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>alpine系统手动安装v2ray服务</title>
      <link href="/posts/9794bd71.html"/>
      <url>/posts/9794bd71.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="4734ee5311c9a3f42a80af0029514dfbbc880594d3b529e84116950277bc75d9"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">文章对外不可见，请加入https://t.me/liuyesblog获取密码！</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> alpine </tag>
            
            <tag> v2ray </tag>
            
            <tag> private </tag>
            
            <tag> 手动 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux网络优化加速一键脚本</title>
      <link href="/posts/6d4bb709.html"/>
      <url>/posts/6d4bb709.html</url>
      
        <content type="html"><![CDATA[<ul><li><h3 id="小白不要使用"><a href="#小白不要使用" class="headerlink" title="小白不要使用"></a>小白不要使用</h3><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305311126017.png" alt="qianyingbbr(1).png"></p><p>Bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget -N --no-check-certificate <span class="string">&quot;https://raw.githubusercontent.com/chiakge/Linux-NetSpeed/master/tcp.sh&quot;</span></span><br><span class="line"><span class="built_in">chmod</span> +x tcp.sh</span><br><span class="line">./tcp.sh</span><br></pre></td></tr></table></figure><h2 id="脚本说明"><a href="#脚本说明" class="headerlink" title="脚本说明"></a>脚本说明</h2><blockquote><p>支持系统<br>Centos 6+ &#x2F; Debian 7+ &#x2F; Ubuntu 14+<br>BBR魔改版不支持Debian 8</p></blockquote><p>如果在删除内核环节出现这样一张图<br><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305311126202.png" alt="3363374172.png"><br><strong>注意选择NO</strong></p><p>根据自己需求操作，重启后再使用<code>./tcp.sh</code>命令接着操作</p><p>脚本会自动检测安装的情况，请注意脚本菜单下的<strong>状态检测</strong>即可。</p></li></ul><blockquote><p>原文链接：<a href="https://xd0.me/?id=10">https://xd0.me/?id=10</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 脚本 </tag>
            
            <tag> linux </tag>
            
            <tag> 网络 </tag>
            
            <tag> 优化 </tag>
            
            <tag> 加速 </tag>
            
            <tag> 一键 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>lxc母鸡批量开小鸡</title>
      <link href="/posts/85890b5e.html"/>
      <url>/posts/85890b5e.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>如果脚本有任何问题或者任何修复系统的需求，可在issues中提出，有空会解决或者回答</p><h1 id="lxc-一键母鸡开小鸡"><a href="#lxc-一键母鸡开小鸡" class="headerlink" title="lxc 一键母鸡开小鸡"></a>lxc 一键母鸡开小鸡</h1><p>更新：</p><p>2023.05.28 修复部分宿主机原生的DNS和IPV4网络优先级的问题</p><p><a href="CHANGELOG.md">更新日志</a></p><h2 id="待解决的问题"><a href="#待解决的问题" class="headerlink" title="待解决的问题"></a>待解决的问题</h2><p>使得母鸡支持更多的系统版本，使小鸡支持更多的系统版本</p><h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><ul><li><a href="#%E9%85%8D%E7%BD%AE%E8%A6%81%E6%B1%82">配置要求</a><ul><li><a href="#%E8%84%9A%E6%9C%AC%E6%A3%80%E6%B5%8B">脚本检测</a></li></ul></li><li><a href="#%E6%89%8B%E5%8A%A8%E5%AE%89%E8%A3%85">手动安装</a><ul><li><a href="#%E6%99%AE%E9%80%9A%E7%89%88%E6%9C%AC">普通版本</a><ul><li><a href="#%E5%85%B3%E9%97%AD%E9%98%B2%E7%81%AB%E5%A2%99">关闭防火墙</a></li><li><a href="#%E5%BC%80%E8%AE%BE%E8%99%9A%E6%8B%9F%E5%86%85%E5%AD%98SWAP">开设虚拟内存SWAP</a></li><li><a href="#%E5%AE%89%E8%A3%85LXD">安装LXD</a></li><li><a href="#%E5%A4%9A%E6%AC%A1%E6%89%B9%E9%87%8F%E7%94%9F%E6%88%90LXC%E8%99%9A%E6%8B%9F%E5%8C%96%E7%9A%84%E5%B0%8F%E9%B8%A1">多次批量生成LXC虚拟化的小鸡</a></li></ul></li><li><a href="#%E7%BA%AF%E6%8E%A2%E9%92%88%E7%89%88%E6%9C%AC">纯探针版本</a></li><li><a href="#%E6%9F%A5%E7%9C%8Blog%E6%96%87%E4%BB%B6">查看log文件</a></li><li><a href="#%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9">注意事项</a></li></ul></li><li><a href="#%E4%B8%80%E9%94%AE%E8%84%9A%E6%9C%AC%E8%80%81%E6%89%8B%E6%8E%A8%E8%8D%90%E6%96%B9%E4%BE%BF%E5%BF%AB%E6%8D%B7">一键脚本老手推荐方便快捷</a><ul><li><a href="#%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85lxd%E7%8E%AF%E5%A2%83">一键安装lxd环境</a></li><li><a href="#%E5%8F%AA%E5%BC%80%E4%B8%80%E4%B8%AANAT%E6%9C%8D%E5%8A%A1%E5%99%A8">只开一个NAT服务器</a></li><li><a href="#%E5%85%B6%E4%BB%96%E9%85%8D%E7%BD%AE">其他配置</a></li></ul></li><li><a href="#%E8%87%B4%E8%B0%A2">致谢</a></li><li><a href="#%E5%8F%8B%E9%93%BE">友链</a></li></ul><h2 id="配置要求"><a href="#配置要求" class="headerlink" title="配置要求"></a>配置要求</h2><p>硬件要求:</p><ul><li>系统：Debian 8+, Ubuntu 18+(推荐)，系统越新越好</li><li>架构：推荐KVM、VMWARE虚拟化</li><li>内存：内存至少512MB</li><li>硬盘：硬盘(系统盘)至少10G</li><li>网络：独立的IPV4地址，IPV6可有可无，带宽能下载脚本就行，网络能连接Github的raw页面就行</li></ul><p>PS: 如果硬件非常好资源很多，可使用PVE批量开KVM虚拟化的虚拟机 <a href="https://github.com/spiritLHLS/pve">跳转</a></p><p>PS: 如果硬件资源更烂，虚拟化不支持，可使用docker版本的，适配面更广 <a href="https://github.com/spiritLHLS/docker">跳转</a></p><h3 id="脚本检测"><a href="#脚本检测" class="headerlink" title="脚本检测"></a>脚本检测</h3><p><strong>使用后续脚本的务必执行本命令检测母鸡是否符合要求</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash &lt;(wget -qO- --no-check-certificate https://raw.githubusercontent.com/spiritLHLS/lxc/main/scripts/pre_check.sh)</span><br></pre></td></tr></table></figure><h4 id="项目特点"><a href="#项目特点" class="headerlink" title="项目特点"></a>项目特点</h4><ul><li><p>本套脚本开发使用的Ubuntu20，Ubuntu别的长期维护版本应该也没问题，Debian无法使用zfs时自动切换别的存储类型</p></li><li><p>已设置同时进行TCP和UDP转发，除了SSH端口其他的映射内网外网端口一致</p></li><li><p>已设置支持开出的LXC容器进行docker嵌套虚拟，默认普通版本和纯探针版本使用debian11系统</p></li><li><p>已屏蔽容器内可能用于滥用的工具包和IPV4网络的TCP&#x2F;UDP协议的端口( 3389 8888 54321 65432 )，以防止容器被用于扫描和爆破，且可外置进程检查有问题自动停机</p></li><li><p>已支持一键为LXC容器配置IPV6地址(前提是母鸡有IPV6子网，无IPV6地址则不配置)</p></li><li><p>一定要在 <code>/root</code> 的路径下运行本仓库脚本，且使用<code>一键脚本</code>的<strong>不要删除</strong>路径下的<code>ssh.sh</code>和<code>config.sh</code>文件</p></li><li><p>保证你要开的盘为默认的系统盘(sda或者sda1)而不是挂载的盘(sdb之类的)，不确定的使用<code>fdisk -l</code>和<code>df</code>查看</p></li><li><p>挂载其他盘的详看 <a href="https://github.com/spiritLHLS/lxc/blob/main/README_other.md">其他说明</a></p></li><li><p>一键脚本支持自定义限制所有内容，普通版本支持多次运行批量生成不覆盖先前生成的配置</p></li></ul><h2 id="手动安装"><a href="#手动安装" class="headerlink" title="手动安装"></a>手动安装</h2><p>新手推荐，避免有bug不知道怎么修</p><ul><li>批量生成NAT服务器</li><li>支持批量重复生成(多次批量开NAT服务器，且不覆盖原配置)</li><li>批量重复生成仅限于普通版本的配置，不支持纯探针版本</li></ul><h3 id="普通版本"><a href="#普通版本" class="headerlink" title="普通版本"></a>普通版本</h3><p>(带1个SSH端口，25个外网端口)</p><p>开出的小鸡配置：1核256MB内存1GB硬盘限速250Mbps带宽</p><h4 id="关闭防火墙"><a href="#关闭防火墙" class="headerlink" title="关闭防火墙"></a>关闭防火墙</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">apt update</span><br><span class="line">apt install curl wget sudo dos2unix ufw -y</span><br><span class="line">ufw <span class="built_in">disable</span></span><br></pre></td></tr></table></figure><h4 id="开设虚拟内存SWAP"><a href="#开设虚拟内存SWAP" class="headerlink" title="开设虚拟内存SWAP"></a>开设虚拟内存SWAP</h4><p>内存看你开多少小鸡，这里如果要开8个，换算需要2G内存，实际内存如果是512MB内存，还需要开1.5G，保守点开2G虚拟内存即可</p><p>执行下面命令，输入1，再输入2048，代表开2G虚拟内存</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -L https://raw.githubusercontent.com/spiritLHLS/lxc/main/scripts/swap.sh -o swap.sh &amp;&amp; chmod +x swap.sh &amp;&amp; bash swap.sh</span><br></pre></td></tr></table></figure><h4 id="安装LXD"><a href="#安装LXD" class="headerlink" title="安装LXD"></a>安装LXD</h4><p>实际swap开的虚拟内存应该是实际内存的2倍，也就是开1G是合理的，上面我描述的情况属于超开了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">apt install snapd -y</span><br><span class="line">snap install lxd</span><br><span class="line">/snap/bin/lxd init</span><br></pre></td></tr></table></figure><p>如果上面的命令中出现下面的错误</p><p>(snap “lxd” assumes unsupported features: snapd2.39 (try to update snapd and refresh the core snap))</p><p>使用命令修补后再进行lxd的安装</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">snap install core</span><br></pre></td></tr></table></figure><p>如果无异常，上面三行命令执行结果如下</p><p><img src="https://user-images.githubusercontent.com/103393591/233270028-5a43d0f7-45f5-4175-969e-d4d182cb877a.png" alt="图片"></p><p>一般的选项回车默认即可</p><p>选择配置物理盘大小(提示默认最小1GB那个选项)，一般我填空闲磁盘大小减去内存大小后乘以0.95并向下取整，这里我填了10GB</p><p>提示带auto的更新image的选项记得选no，避免更新占用系统</p><p>测试lxc有没有软连接上</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lxc -h</span><br></pre></td></tr></table></figure><p>如果报错则执行以下命令软连接lxc命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">! lxc -h &gt;/dev/null 2&gt;&amp;1 &amp;&amp; <span class="built_in">echo</span> <span class="string">&#x27;alias lxc=&quot;/snap/bin/lxc&quot;&#x27;</span> &gt;&gt; /root/.bashrc &amp;&amp; <span class="built_in">source</span> /root/.bashrc</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:/snap/bin</span><br></pre></td></tr></table></figure><p>连接后再测试lxc命令是否有报错找不到</p><h4 id="手动批量生成LXC虚拟化的小鸡"><a href="#手动批量生成LXC虚拟化的小鸡" class="headerlink" title="手动批量生成LXC虚拟化的小鸡"></a>手动批量生成LXC虚拟化的小鸡</h4><p>(默认内存和硬盘大小)</p><p>lxc若命令无问题，执行初始化开小鸡，这一步最好放<code>screen</code>中后台挂起执行，开小鸡时长与你开几个和母鸡配置相关</p><p>执行下面命令加载开机脚本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">rm -rf init.sh</span><br><span class="line">wget https://github.com/spiritLHLS/lxc/raw/main/scripts/init.sh</span><br><span class="line">chmod 777 init.sh</span><br><span class="line">apt install dos2unix -y</span><br><span class="line">dos2unix init.sh</span><br></pre></td></tr></table></figure><p>下面命令为开小鸡名字前缀为<strong>tj</strong>的<strong>10</strong>个小鸡</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./init.sh tj 10</span><br></pre></td></tr></table></figure><p>有时候init.sh的运行路径有问题，此时建议前面加上sudo强制根目录执行</p><h4 id="多次批量生成LXC虚拟化的小鸡"><a href="#多次批量生成LXC虚拟化的小鸡" class="headerlink" title="多次批量生成LXC虚拟化的小鸡"></a>多次批量生成LXC虚拟化的小鸡</h4><p>可自定义内存和硬盘大小</p><p>有执行过上面的手动批量生成过也没问题，配置是继承的不覆盖</p><p>如果需要多次批量生成小鸡，可使用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -L https://github.com/spiritLHLS/lxc/raw/main/scripts/add_more.sh -o add_more.sh &amp;&amp; chmod +x add_more.sh &amp;&amp; bash add_more.sh</span><br></pre></td></tr></table></figure><p>可多次运行批量生成小鸡，且继承前面已生成的部分在后面添加，可自定义内存和硬盘大小</p><h3 id="纯探针版本"><a href="#纯探针版本" class="headerlink" title="纯探针版本"></a>纯探针版本</h3><p>(只有一个SSH端口)</p><p>开出的小鸡配置：1核128MB内存300MB硬盘限速200Mbps带宽</p><p>关闭防火墙</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">apt update</span><br><span class="line">apt install curl wget sudo dos2unix ufw -y</span><br><span class="line">ufw <span class="built_in">disable</span></span><br></pre></td></tr></table></figure><p>开设虚拟内存</p><p>内存看你开多少小鸡，这里如果要开10个，换算需要1G内存，实际内存如果是512MB内存，还需要开0.5G，保守点开1G虚拟内存即可</p><p>执行下面命令，输入1，再输入1024，代表开1G虚拟内存</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -L https://raw.githubusercontent.com/spiritLHLS/lxc/main/scripts/swap.sh -o swap.sh &amp;&amp; <span class="built_in">chmod</span> +x swap.sh &amp;&amp; bash swap.sh</span><br></pre></td></tr></table></figure><p>实际swap开的虚拟内存应该是实际内存的2倍，也就是开1G是合理的，再多就超开了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">apt install snapd -y</span><br><span class="line">snap install lxd</span><br><span class="line">/snap/bin/lxd init</span><br></pre></td></tr></table></figure><p>如果上面的命令中出现下面的错误</p><p>(snap “lxd” assumes unsupported features: snapd2.39 (try to update snapd and refresh the core snap))</p><p>使用命令修补后再进行lxd的安装</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">snap install core</span><br></pre></td></tr></table></figure><p>如果无异常，上面三行命令执行结果如下</p><p><img src="https://user-images.githubusercontent.com/103393591/233270028-5a43d0f7-45f5-4175-969e-d4d182cb877a.png" alt="图片"></p><p>一般的选项回车默认即可</p><p>选择配置物理盘大小(提示默认最小1GB那行)，一般我填空闲磁盘大小减去内存大小后乘以0.95并向下取整</p><p>提示带auto的更新image的选项记得选no，避免更新占用</p><p>软连接lxc命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">! lxc -h &gt;/dev/null 2&gt;&amp;1 &amp;&amp; <span class="built_in">echo</span> <span class="string">&#x27;alias lxc=&quot;/snap/bin/lxc&quot;&#x27;</span> &gt;&gt; /root/.bashrc &amp;&amp; <span class="built_in">source</span> /root/.bashrc</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:/snap/bin</span><br></pre></td></tr></table></figure><p>测试lxc有没有软连接上</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lxc -h</span><br></pre></td></tr></table></figure><p>lxc命令无问题，执行初始化开小鸡，这一步最好放screen中后台挂起执行，开小鸡时长与你开几个和母鸡配置相关</p><p>加载开机脚本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">rm -rf least.sh</span><br><span class="line">wget https://github.com/spiritLHLS/lxc/raw/main/scripts/least.sh</span><br><span class="line">chmod 777 least.sh</span><br><span class="line">apt install dos2unix -y</span><br><span class="line">dos2unix least.sh</span><br></pre></td></tr></table></figure><p>下列命令最后一行为开小鸡名字前缀为<strong>tj</strong>的<strong>10</strong>个小鸡</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./least.sh tj 10</span><br></pre></td></tr></table></figure><p>有时候least.sh的运行路径有问题，此时建议前面加上sudo强制根目录执行</p><h3 id="查看log文件"><a href="#查看log文件" class="headerlink" title="查看log文件"></a>查看log文件</h3><h4 id="开完小鸡后，具体信息会生成在当前目录下的log文件中，格式如下"><a href="#开完小鸡后，具体信息会生成在当前目录下的log文件中，格式如下" class="headerlink" title="开完小鸡后，具体信息会生成在当前目录下的log文件中，格式如下"></a>开完小鸡后，具体信息会生成在当前目录下的log文件中，格式如下</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1号服务器名称 密码 ssh端口 外网端口起始 外网端口终止</span><br><span class="line">2号服务器名称 密码 ssh端口 外网端口起始 外网端口终止</span><br></pre></td></tr></table></figure><p>如果想要查看，只需在当前目录执行以下命令打印log文件即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> <span class="built_in">log</span></span><br></pre></td></tr></table></figure><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><h4 id="不要拿该脚本开出的小鸡当生产环境，lxc虚拟化不支持换内核，dd，开启bbr，纯探针版本-普通版本无问题-挂载warp等操作"><a href="#不要拿该脚本开出的小鸡当生产环境，lxc虚拟化不支持换内核，dd，开启bbr，纯探针版本-普通版本无问题-挂载warp等操作" class="headerlink" title="不要拿该脚本开出的小鸡当生产环境，lxc虚拟化不支持换内核，dd，开启bbr，纯探针版本(普通版本无问题)挂载warp等操作"></a>不要拿该脚本开出的小鸡当生产环境，lxc虚拟化不支持换内核，dd，开启bbr，<strong>纯探针版本</strong>(普通版本无问题)挂载warp等操作</h4><p>本仓库不提供lxc虚拟化使用的其他问题的解答，非脚本相关问题请自行解决</p><p>虚拟小鸡想要查看是否在线</p><p>查看所有</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lxc list</span><br></pre></td></tr></table></figure><p>查看个例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lxc info 服务器名字</span><br></pre></td></tr></table></figure><p>启动个例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lxc start 服务器名字</span><br></pre></td></tr></table></figure><p>停止个例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lxc stop 服务器名字</span><br></pre></td></tr></table></figure><p>删除个例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lxc delete -f 服务器名字</span><br></pre></td></tr></table></figure><p>进入内部</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lxc <span class="built_in">exec</span> 服务器名字 /bin/bash</span><br></pre></td></tr></table></figure><p>退出则输入<code>exit</code>回车即可</p><p>删除所有LXC容器</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lxc list | awk &#x27;&#123;print $2&#125;&#x27; | grep -v &quot;^$&quot; | xargs -I &#123;&#125; lxc delete -f &#123;&#125;</span><br></pre></td></tr></table></figure><p>在容器内执行删除无用日志</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get autoremove</span><br><span class="line">sudo apt-get clean</span><br><span class="line">sudo find /var/log -type f -delete</span><br><span class="line">sudo find /var/tmp -type f -delete</span><br><span class="line">sudo find /tmp -type f -delete</span><br><span class="line">sudo find /var/cache/apt/archives -type f -delete</span><br></pre></td></tr></table></figure><h2 id="一键脚本老手推荐方便快捷"><a href="#一键脚本老手推荐方便快捷" class="headerlink" title="一键脚本老手推荐方便快捷"></a>一键脚本老手推荐方便快捷</h2><ul><li>环境要求：Ubuntu 18+(推荐)，Debian 8+(仅限x86_64架构)</li><li>只生成一个NAT服务器，可自定义限制所有内容</li></ul><h4 id="一键安装lxd环境"><a href="#一键安装lxd环境" class="headerlink" title="一键安装lxd环境"></a>一键安装lxd环境</h4><h5 id="初始化LXC环境"><a href="#初始化LXC环境" class="headerlink" title="初始化LXC环境"></a>初始化LXC环境</h5><p><strong>如果是全新的服务器，务必保证apt update和apt install curl都无问题再执行本脚本</strong></p><p><strong>且自开机起最好等待5分钟后再执行以下命令，避免系统默认设置中就执行了本脚本导致apt源卡死</strong></p><p>这里的虚拟内存是说要开的SWAP大小，存储池则是你所有要开的小鸡占的盘的大小的总和</p><p><strong>如果是Debian系统的母鸡，务必在screen中执行本脚本，避免长期运行时SSH中断导致ZFS编译安装失败</strong></p><p>环境安装过程中可能需要重启服务器再次执行以加载含zfs的内核</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -L https://raw.githubusercontent.com/spiritLHLS/lxc/main/scripts/lxdinstall.sh -o lxdinstall.sh &amp;&amp; <span class="built_in">chmod</span> +x lxdinstall.sh &amp;&amp; bash lxdinstall.sh</span><br></pre></td></tr></table></figure><p>例子：</p><p>如果系统盘除去已占用空间还有18G硬盘空余，想开2G虚拟内存(2048MB的SWAP)，15G的存储池，则依次输入<code>2048</code>和<code>15</code></p><h4 id="只开一个NAT服务器"><a href="#只开一个NAT服务器" class="headerlink" title="只开一个NAT服务器"></a>只开一个NAT服务器</h4><h5 id="下载开机脚本"><a href="#下载开机脚本" class="headerlink" title="下载开机脚本"></a>下载开机脚本</h5><ul><li>(<em><strong>非必须</strong></em>，如果你使用过一键安装LXD的命令，自动已下载对应的开机脚本，请忽略下面的命令)</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">rm -rf buildone.sh</span><br><span class="line">wget https://raw.githubusercontent.com/spiritLHLS/lxc/main/scripts/buildone.sh</span><br><span class="line">chmod 777 buildone.sh</span><br><span class="line">apt install dos2unix -y</span><br><span class="line">dos2unix buildone.sh</span><br></pre></td></tr></table></figure><h5 id="开NAT服务器"><a href="#开NAT服务器" class="headerlink" title="开NAT服务器"></a>开NAT服务器</h5><p>内存大小以MB计算，硬盘大小以GB计算，下载速度上传速度以Mbit计算，是否启用IPV6不一定要填Y或者N，没有这个参数也行</p><p>如果<code>外网起端口</code>和<code>外网止端口</code>都设置为0则不做区间外网端口映射了，只映射基础的SSH端口，注意<code>不能为空</code>，不进行映射需要设置为0</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./buildone.sh 小鸡名称 内存大小 硬盘大小 SSH端口 外网起端口 外网止端口 下载速度 上传速度 是否启用IPV6(Y or N)</span><br></pre></td></tr></table></figure><p>示例</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./buildone.sh test 256 2 20001 20002 20025 300 300 N</span><br></pre></td></tr></table></figure><p>这样就是创建一个名为test的小鸡，内存256MB，硬盘2G，SSH端口20001，内外网起止端口20002~20025，下载和上传速度都设置为300Mbit，且不自动设置外网IPV6地址</p><p>如果已通过以上方法生成过小鸡，还需要批量生成小鸡，可使用手动安装部分的脚本</p><p>但注意先删除测试小鸡再进行批量生成小鸡</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">lxc delete -f test</span><br><span class="line">rm -rf test</span><br><span class="line">ls</span><br></pre></td></tr></table></figure><p>需要查看信息则执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat 小鸡名字</span><br></pre></td></tr></table></figure><h3 id="其他配置"><a href="#其他配置" class="headerlink" title="其他配置"></a>其他配置</h3><ul><li><strong>以下的配置安装会加重母鸡的负担，非必要不要安装</strong></li></ul><h5 id="自动配置IPV6地址"><a href="#自动配置IPV6地址" class="headerlink" title="自动配置IPV6地址"></a>自动配置IPV6地址</h5><ul><li>(<em><strong>非必须</strong></em>，不使用的也没问题)</li><li><strong>该脚本仅适用于母鸡有给<code>IPV6</code>子网且是<code>/64</code>的，且母鸡绑定了子网的<code>第一个IP</code>做<code>母鸡的IPV6地址或IPV6的gateway</code></strong></li><li>自动为LXD创建的LXC容器配置<code>IPV6</code>地址</li><li>已集成到<code>buildone.sh</code>中可使用变量控制且无需事先下载，该脚本可不手动使用，在使用<code>buildone.sh</code>时配置Y开启即可</li></ul><p>下载脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -L https://raw.githubusercontent.com/spiritLHLS/lxc/main/scripts/build_ipv6_network.sh -o build_ipv6_network.sh &amp;&amp; <span class="built_in">chmod</span> +x build_ipv6_network.sh</span><br></pre></td></tr></table></figure><p>自动为容器配置IPV6映射地址</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash build_ipv6_network.sh 容器名称</span><br></pre></td></tr></table></figure><p>映射完毕会打印信息</p><p>示例(给test容器自动配置IPV6地址，配置完成会写入一个test_v6的文件信息)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash build_ipv6_network.sh <span class="built_in">test</span></span><br></pre></td></tr></table></figure><p>删除所有IPV6已映射的规则</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip6tables -t nat -F PREROUTING</span><br></pre></td></tr></table></figure><h5 id="屏蔽容易被滥用的端口的出入流量以屏蔽端口和屏蔽滥用工具包"><a href="#屏蔽容易被滥用的端口的出入流量以屏蔽端口和屏蔽滥用工具包" class="headerlink" title="屏蔽容易被滥用的端口的出入流量以屏蔽端口和屏蔽滥用工具包"></a>屏蔽容易被滥用的端口的出入流量以屏蔽端口和屏蔽滥用工具包</h5><ul><li>(<em><strong>非必须</strong></em>，该脚本仅仅是为了防止容器滥用方便，不装的也没问题)</li><li>事前预防</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -L https://github.com/spiritLHLS/lxc/raw/main/scripts/rules.sh -o rules.sh &amp;&amp; chmod +x rules.sh &amp;&amp; bash rules.sh</span><br></pre></td></tr></table></figure><h5 id="使用screen配置监控屏蔽某些进程的执行，遇到某些进程的出现直接关闭容器"><a href="#使用screen配置监控屏蔽某些进程的执行，遇到某些进程的出现直接关闭容器" class="headerlink" title="使用screen配置监控屏蔽某些进程的执行，遇到某些进程的出现直接关闭容器"></a>使用screen配置监控屏蔽某些进程的执行，遇到某些进程的出现直接关闭容器</h5><ul><li>如需停止监控可使用<code>screen</code>命令停止<code>lxc_moniter</code>这个名字的窗口并删除</li><li>(<em><strong>非必须</strong></em>，该脚本仅仅是为了防止容器滥用方便，不装的也没问题)</li><li>事后停机</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -L https://github.com/spiritLHLS/lxc/raw/main/scripts/build_monitor.sh -o build_monitor.sh &amp;&amp; chmod +x build_monitor.sh &amp;&amp; bash build_monitor.sh</span><br></pre></td></tr></table></figure><h5 id="一键安装开lxd母鸡所需要的带vnstat环境的常用预配置环境"><a href="#一键安装开lxd母鸡所需要的带vnstat环境的常用预配置环境" class="headerlink" title="一键安装开lxd母鸡所需要的带vnstat环境的常用预配置环境"></a>一键安装开lxd母鸡所需要的带vnstat环境的常用预配置环境</h5><ul><li>(<em><strong>非必须</strong></em>，该脚本仅仅是为了站点对接监控方便，不装的也没问题)</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -L https://raw.githubusercontent.com/spiritLHLS/lxc/main/scripts/backend.sh -o backend.sh &amp;&amp; chmod +x backend.sh &amp;&amp; bash backend.sh</span><br></pre></td></tr></table></figure><h5 id="一键安装母鸡可视化操作的面板"><a href="#一键安装母鸡可视化操作的面板" class="headerlink" title="一键安装母鸡可视化操作的面板"></a>一键安装母鸡可视化操作的面板</h5><ul><li>(<em><strong>非必须</strong></em>，该面板只是为了方便可视化操作，没有也没问题)</li><li>原作者仓库：<a href="https://github.com/turtle0x1/LxdMosaic">跳转</a></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">lxc config set core.https_address [::]</span><br><span class="line">lxc config set core.trust_password some-secret-string</span><br><span class="line">snap install lxdmosaic</span><br></pre></td></tr></table></figure><p>安装完毕后打开母鸡IP地址，按照提示设置admin的密码，其他一路默认就能使用面板了</p><p><strong>原作者项目地址：<a href="https://github.com/spiritLHLS/lxc">点击跳转</a></strong></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> lxc </tag>
            
            <tag> 脚本 </tag>
            
            <tag> nat </tag>
            
            <tag> 小鸡 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一键梭哈脚本</title>
      <link href="/posts/88eb9716.html"/>
      <url>/posts/88eb9716.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="a118994f2f277f746d307f9c995c31495c3280e568716375b64880361bcb15ba">a1688f47cfccba90c0837639745f9a099244d5124bf2399cf0f5bf7c56fac6c07e3aa95f61d6d6fd5e89e0b0e86e5553ae4b5a1119f7b004be497644ac15e99968ac662313cd3be9f29dccb38c08c737b6167850a36ed1d1e1bd68341bbffec9227041c71eef47853e540d4d9386c424c03ff2d5f592c989d5f2224f6e987045d6e02a1c9f70d653ef2c68fe46704acfa7eef1c3413e66ed8d00257b4e7ff0b8cef65905b5737097a84bf561e9a1c7578dd02fbd625e87f0dccf04bf945bdce1dc7664ca19a88652f48de471a09899660a27303d15f967488950d744e2ea716fa9e1557fd102396088cc36bcefb2c6d22294cc68c6a00910ba0e9a524f638ab22e52fc98f22991fa18411745502775bbe3d6c97d9a473368f1e0361c745accdfaa1e2df414185825343d880ed4b9c05951264b75fa7b106a4b363f9978b13b791948b10e63f700bdf601e385a7a70b71ab07bbe26d61aef2f86a1bf8c0a0582b21af3a14e87813907d29b67440676e5fd3f2808550ffab9cab56b8cb5a4de4b5d42b71e29003e8b871d443a49922b0b029053f707a5865da699cdb3f4a2a18db8d4ee9a09d89b7ed5ad613b2b09351a328ee85c05aa1ac05e2b5f9ccac48f7956bc6e22e2c67fe935a89ee6984a00a688a1f59050693c628308da6e14208a39508a839103ed865f9b55cb94e44ab39a5f20f4a281271d7e78a4303a626ed5f869da7396c801ff350e9497f280d7ea3bbe9f3b7871d78d5d286de49046f3d33735f5671ea9242da2f6b2f6a1c12c028406b5288cfeaea394a9acfe2080eac349c17a2536dd5d1f0dc7f4976ed84d0441bb600bf6c9b687fdac89edf2547bbf0c97b3300d245f3ff77459ed19a7b2bae071341356eac618f49ce694d4ef854218e556b5f6738f98b87f0339bc2140a3a94b697055a58f90dae852d955a6eb634336c1789b63f1583c3055a153c96eefebaf1ed48df5bf0a38501b6b2fefce81c328552d8114849be603b2576b138cee6a8f436e4eee15467040a336b272a8eea1d60cb771ba9b1407a8e29f0a85b32c2c7979a9648159bfdfe6c295321cf490a8a4407eeef618fe9ea5e587f569d6024d4bde770b10a836432029d5fbabcec260db983f31007baec71a96df01dd621337d64137ede3d4633b9a3fde60d678806a7e0aa68015619a4e627924d78f6e6e986a62e67b8008c334977ae2a4ca84d0b3a1c23a642f32575033931c511735e2e2eb8ccafcf44b35f2fcc647115a5e2bef6999fdade714885c1763c2ef3fe73c8dbe2449a6483a218e12d2138fbb79b23b4fd2c589d46b7699933b5c31a4508d6eeef8eb71d5523c7e0fa58f8bc9c64f96bacf9a3cb9e2adcb6b8a5b2927d34e78cbf45cc43ec7e80ec517cff77f51c3761b2c6c357ae64551ff62987cf3d6b249551515cf2f3d9955bfcbb6828f6bd4a665dc8c87ba3be554d65873c14af0451c9f734502591c1352db14e91067518944a078b5b4fd68e0829591bdbff3fe0f91d310c0f5ace3cda22e167400524151b2280020ec0cb78dfdb395cbc6e9eaa8c9c97362b8fa2e60e4bf916c927ef25defa7fd0efdedf5e85e6cd68bacf5c119f5b444c0ad350af6be9b10072f460c17603c3de3dcd7a105c991da5b1c36676bb657d73df68dca70df3a69774a1bc1f3336</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">文章对外不可见，请加入https://t.me/liuyesblog获取密码！</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cf </tag>
            
            <tag> cloudflare </tag>
            
            <tag> alpine </tag>
            
            <tag> 脚本 </tag>
            
            <tag> v2ray </tag>
            
            <tag> 梭哈 </tag>
            
            <tag> private </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用docker架设NAT机器</title>
      <link href="/posts/63f131f8.html"/>
      <url>/posts/63f131f8.html</url>
      
        <content type="html"><![CDATA[<h1 id="docker"><a href="#docker" class="headerlink" title="docker"></a>docker</h1><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305311056458.jpeg" alt="img"></p><p>通过docker批量或单独开设NAT服务器(Bulk or individual NAT server provisioning via docker)</p><p>默认使用debian系统，每个容器自带1个外网ssh端口，25个内外网一致端口</p><p>默认创建的是非特权容器，且不挂载与宿主机的docker的守护进程之间的通信，所以宿主机创建的docker虚拟化的NAT服务器内无法再嵌套虚拟化docker</p><p>由于只是在宿主机进行了CPU和内存的限制未在容器内使用cgroup驱动，所以在容器内使用服务器测试脚本检测容器的可用资源是无效的，显示的会是宿主机的资源</p><p>由于大部分云服务器xfs文件系统不启用pquota选项，所以默认共享宿主机硬盘，无法限制每个容器的磁盘大小</p><p>原作者项目地址：<a href="https://github.com/spiritLHLS/docker">点击跳转</a></p><h2 id="配置要求"><a href="#配置要求" class="headerlink" title="配置要求"></a>配置要求</h2><p>系统可安装docker即可用，网络能连接Github的raw界面就能用，硬件配置只要不拉跨就行，空闲硬盘有3G就行</p><p>推荐在开设NAT服务器前先增加部分SWAP虚拟内存，避免突发的内存占用导致母鸡卡死 <a href="https://github.com/spiritLHLS/addswap">跳转</a></p><h2 id="环境预设"><a href="#环境预设" class="headerlink" title="环境预设"></a>环境预设</h2><ul><li>检测环境</li><li>安装docker</li><li>下载预制脚本</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -L https://raw.githubusercontent.com/spiritLHLS/docker/main/scripts/pre_build.sh -o pre_build.sh &amp;&amp; chmod +x pre_build.sh &amp;&amp; bash pre_build.sh</span><br></pre></td></tr></table></figure><h2 id="单独开设"><a href="#单独开设" class="headerlink" title="单独开设"></a>单独开设</h2><p>下载脚本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -L https://raw.githubusercontent.com/spiritLHLS/docker/main/scripts/onedocker.sh -o onedocker.sh &amp;&amp; chmod +x onedocker.sh</span><br></pre></td></tr></table></figure><p>运行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./onedocker.sh name cpu memory password sshport startport endport system</span><br></pre></td></tr></table></figure><p>目前system仅支持选择alpine或debian，默认是debian</p><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><p>将开设1核512MB内存，root的密码是123456，SSH端口映射至外网25000，批量映射的端口区间为34975到35000，此区间内外网端口一致，系统为debian</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./onedocker.sh test 1 512 123456 25000 34975 35000 debian</span><br></pre></td></tr></table></figure><p>删除示例</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker rm -f test</span><br><span class="line">rm -rf test</span><br><span class="line">ls</span><br></pre></td></tr></table></figure><p>进入示例</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it test /bin/bash</span><br></pre></td></tr></table></figure><h3 id="查询信息"><a href="#查询信息" class="headerlink" title="查询信息"></a>查询信息</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat 容器名字</span><br></pre></td></tr></table></figure><p>输出格式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">容器名字 SSH端口 登陆的root密码 核数 内存 外网端口起 外网端口止</span><br></pre></td></tr></table></figure><h2 id="批量开设"><a href="#批量开设" class="headerlink" title="批量开设"></a>批量开设</h2><ul><li>批量多次运行继承配置生成</li><li>生成多个时为避免SSH连接中断建议在screen中执行</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -L https://raw.githubusercontent.com/spiritLHLS/docker/main/scripts/dockers.sh -o dockers.sh &amp;&amp; chmod +x dockers.sh &amp;&amp; bash dockers.sh</span><br></pre></td></tr></table></figure><h2 id="卸载所有docker容器和镜像"><a href="#卸载所有docker容器和镜像" class="headerlink" title="卸载所有docker容器和镜像"></a>卸载所有docker容器和镜像</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker rm -f $(docker ps -aq); docker rmi $(docker images -aq)</span><br><span class="line">rm -rf dclog</span><br><span class="line">ls</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 脚本 </tag>
            
            <tag> docker </tag>
            
            <tag> nat </tag>
            
            <tag> 小鸡 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Alpine+V2Ray+Nginx+PHP探针+套CF</title>
      <link href="/posts/48c55392.html"/>
      <url>/posts/48c55392.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="f546d9c23196b591326e49d1ce2c468228370f1e0059de491d66c30608f8fbb3"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">文章对外不可见，请加入https://t.me/liuyesblog获取密码！</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cf </tag>
            
            <tag> cloudflare </tag>
            
            <tag> 探针 </tag>
            
            <tag> alpine </tag>
            
            <tag> v2ray </tag>
            
            <tag> private </tag>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Microsoft Learn 临时免费云电脑使用教程及评测</title>
      <link href="/posts/7975d21a.html"/>
      <url>/posts/7975d21a.html</url>
      
        <content type="html"><![CDATA[<p>在部分环境中，我们不太方便使用软件来访问外网资源。而我们可以使用外国的云电脑，来访问外网的资源。但是大部分的云电脑需要收费。在这里，我发现了微软提供的云电脑，每次可以使用2小时，并且可以无限次申请使用。在这篇文章中，我来和大家一起来申请微软的免费云电脑</p><h2 id="准备材料"><a href="#准备材料" class="headerlink" title="准备材料"></a>准备材料</h2><ul><li>微软账户</li></ul><h2 id="部署步骤"><a href="#部署步骤" class="headerlink" title="部署步骤"></a>部署步骤</h2><ol><li>打开这个网站：<a href="https://learn.microsoft.com/zh-cn/training/modules/implement-common-integration-features-finance-ops/10-exercise-1">https://learn.microsoft.com/zh-cn/training/modules/implement-common-integration-features-finance-ops/10-exercise-1</a> ，点击“登录并启用 VM 模式”</li></ol><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305301113410.png" alt="img"></p><ol start="2"><li>登录之后，云电脑会自动加载。进入“Resources”页面，点击“Password”前面的<code>T</code>按钮进行输入密码</li></ol><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305301109601.png" alt="img"></p><ol start="3"><li>进入云电脑成功</li></ol><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305301109294.png" alt="img"></p><ol start="4"><li>可以看下云电脑的配置还是挺好的</li></ol><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305301113179.png" alt="img"></p><ol start="5"><li>测试下网速，可以看到是限速100M了。不过对于一般用途来讲也够用了</li></ol><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305301109490.png" alt="img"></p><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><ul><li>请勿滥用本项目</li><li>云电脑网络配置有规则，部分网站访问不了</li></ul><blockquote><p>原文链接：<a href="https://blog.misaka.rest/2023/05/30/mslearn-temp-pc/">https://blog.misaka.rest/2023/05/30/mslearn-temp-pc/</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> 免费 </tag>
            
            <tag> microsoft </tag>
            
            <tag> learn </tag>
            
            <tag> 云电脑 </tag>
            
            <tag> 评测 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在CloudFlare Workers搭建VLESS节点</title>
      <link href="/posts/aa969a82.html"/>
      <url>/posts/aa969a82.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>本项目有封号风险，请谨慎部署</p></blockquote><h2 id="准备材料"><a href="#准备材料" class="headerlink" title="准备材料"></a>准备材料</h2><ul><li>CloudFlare 账号</li></ul><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><p>请勿滥用本项目！</p><h2 id="部署步骤"><a href="#部署步骤" class="headerlink" title="部署步骤"></a>部署步骤</h2><ol><li>打开CF的控制台，转到“Workers &amp; Pages”页面，点击“Create Application”按钮</li></ol><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305261024994.png" alt="img"></p><ol start="2"><li>点击“Create Worker”按钮</li></ol><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305261021516.png" alt="img"></p><ol start="3"><li>设置workers的名称，点击“Deploy”按钮</li></ol><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305261025563.png" alt="img"></p><ol start="4"><li>点击“Configure Worker”按钮</li></ol><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305261025546.png" alt="img"></p><ol start="5"><li>点击“Quick Edit”按钮，修改代码</li></ol><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305261028221.png" alt="img"></p><ol start="6"><li>将提供的代码的244行的UUID，修改为自己的UUID（可选），并复制到Workers中</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br></pre></td><td class="code"><pre><span class="line">JAVASCRIPT</span><br><span class="line">// ../node_modules/uuid/dist/esm-browser/regex.js</span><br><span class="line">var regex_default = /^(?:[0-9a-f]&#123;8&#125;-[0-9a-f]&#123;4&#125;-[1-5][0-9a-f]&#123;3&#125;-[89ab][0-9a-f]&#123;3&#125;-[0-9a-f]&#123;12&#125;|00000000-0000-0000-0000-000000000000)$/i;</span><br><span class="line"></span><br><span class="line">// ../node_modules/uuid/dist/esm-browser/validate.js</span><br><span class="line">function validate(uuid) &#123;</span><br><span class="line">  return typeof uuid === &quot;string&quot; &amp;&amp; regex_default.test(uuid);</span><br><span class="line">&#125;</span><br><span class="line">var validate_default = validate;</span><br><span class="line"></span><br><span class="line">// ../node_modules/uuid/dist/esm-browser/stringify.js</span><br><span class="line">var byteToHex = [];</span><br><span class="line">for (let i = 0; i &lt; 256; ++i) &#123;</span><br><span class="line">  byteToHex.push((i + 256).toString(16).slice(1));</span><br><span class="line">&#125;</span><br><span class="line">function unsafeStringify(arr, offset = 0) &#123;</span><br><span class="line">  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + &quot;-&quot; + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + &quot;-&quot; + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + &quot;-&quot; + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + &quot;-&quot; + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();</span><br><span class="line">&#125;</span><br><span class="line">function stringify(arr, offset = 0) &#123;</span><br><span class="line">  const uuid = unsafeStringify(arr, offset);</span><br><span class="line">  if (!validate_default(uuid)) &#123;</span><br><span class="line">    throw TypeError(&quot;Stringified UUID is invalid&quot;);</span><br><span class="line">  &#125;</span><br><span class="line">  return uuid;</span><br><span class="line">&#125;</span><br><span class="line">var stringify_default = stringify;</span><br><span class="line"></span><br><span class="line">// vless-js/lib/vless-js.ts</span><br><span class="line">var WS_READY_STATE_OPEN = 1;</span><br><span class="line">function makeReadableWebSocketStream(ws, earlyDataHeader, log) &#123;</span><br><span class="line">  let readableStreamCancel = false;</span><br><span class="line">  return new ReadableStream(&#123;</span><br><span class="line">    start(controller) &#123;</span><br><span class="line">      ws.addEventListener(&quot;message&quot;, async (e) =&gt; &#123;</span><br><span class="line">        if (readableStreamCancel) &#123;</span><br><span class="line">          return;</span><br><span class="line">        &#125;</span><br><span class="line">        const vlessBuffer = e.data;</span><br><span class="line">        controller.enqueue(vlessBuffer);</span><br><span class="line">      &#125;);</span><br><span class="line">      ws.addEventListener(&quot;error&quot;, (e) =&gt; &#123;</span><br><span class="line">        log(&quot;socket has error&quot;);</span><br><span class="line">        readableStreamCancel = true;</span><br><span class="line">        controller.error(e);</span><br><span class="line">      &#125;);</span><br><span class="line">      ws.addEventListener(&quot;close&quot;, () =&gt; &#123;</span><br><span class="line">        try &#123;</span><br><span class="line">          log(&quot;webSocket is close&quot;);</span><br><span class="line">          if (readableStreamCancel) &#123;</span><br><span class="line">            return;</span><br><span class="line">          &#125;</span><br><span class="line">          controller.close();</span><br><span class="line">        &#125; catch (error2) &#123;</span><br><span class="line">          log(`websocketStream can&#x27;t close DUE to `, error2);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">      const &#123; earlyData, error &#125; = base64ToArrayBuffer(earlyDataHeader);</span><br><span class="line">      if (error) &#123;</span><br><span class="line">        log(`earlyDataHeader has invaild base64`);</span><br><span class="line">        safeCloseWebSocket(ws);</span><br><span class="line">        return;</span><br><span class="line">      &#125;</span><br><span class="line">      if (earlyData) &#123;</span><br><span class="line">        controller.enqueue(earlyData);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    pull(controller) &#123;</span><br><span class="line">    &#125;,</span><br><span class="line">    cancel(reason) &#123;</span><br><span class="line">      log(`websocketStream is cancel DUE to `, reason);</span><br><span class="line">      if (readableStreamCancel) &#123;</span><br><span class="line">        return;</span><br><span class="line">      &#125;</span><br><span class="line">      readableStreamCancel = true;</span><br><span class="line">      safeCloseWebSocket(ws);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line">function base64ToArrayBuffer(base64Str) &#123;</span><br><span class="line">  if (!base64Str) &#123;</span><br><span class="line">    return &#123; error: null &#125;;</span><br><span class="line">  &#125;</span><br><span class="line">  try &#123;</span><br><span class="line">    base64Str = base64Str.replace(/-/g, &quot;+&quot;).replace(/_/g, &quot;/&quot;);</span><br><span class="line">    const decode = atob(base64Str);</span><br><span class="line">    const arryBuffer = Uint8Array.from(decode, (c) =&gt; c.charCodeAt(0));</span><br><span class="line">    return &#123; earlyData: arryBuffer.buffer, error: null &#125;;</span><br><span class="line">  &#125; catch (error) &#123;</span><br><span class="line">    return &#123; error &#125;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">function safeCloseWebSocket(socket) &#123;</span><br><span class="line">  try &#123;</span><br><span class="line">    if (socket.readyState === WS_READY_STATE_OPEN) &#123;</span><br><span class="line">      socket.close();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; catch (error) &#123;</span><br><span class="line">    console.error(&quot;safeCloseWebSocket error&quot;, error);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">function processVlessHeader(vlessBuffer, userID) &#123;</span><br><span class="line">  if (vlessBuffer.byteLength &lt; 24) &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      hasError: true,</span><br><span class="line">      message: &quot;invalid data&quot;</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line">  const version = new Uint8Array(vlessBuffer.slice(0, 1));</span><br><span class="line">  let isValidUser = false;</span><br><span class="line">  let isUDP = false;</span><br><span class="line">  if (stringify_default(new Uint8Array(vlessBuffer.slice(1, 17))) === userID) &#123;</span><br><span class="line">    isValidUser = true;</span><br><span class="line">  &#125;</span><br><span class="line">  if (!isValidUser) &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      hasError: true,</span><br><span class="line">      message: &quot;invalid user&quot;</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line">  const optLength = new Uint8Array(vlessBuffer.slice(17, 18))[0];</span><br><span class="line">  const command = new Uint8Array(</span><br><span class="line">    vlessBuffer.slice(18 + optLength, 18 + optLength + 1)</span><br><span class="line">  )[0];</span><br><span class="line">  if (command === 1) &#123;</span><br><span class="line">  &#125; else if (command === 2) &#123;</span><br><span class="line">    isUDP = true;</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      hasError: true,</span><br><span class="line">      message: `command $&#123;command&#125; is not support, command 01-tcp,02-udp,03-mux`</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line">  const portIndex = 18 + optLength + 1;</span><br><span class="line">  const portBuffer = vlessBuffer.slice(portIndex, portIndex + 2);</span><br><span class="line">  const portRemote = new DataView(portBuffer).getInt16(0);</span><br><span class="line">  let addressIndex = portIndex + 2;</span><br><span class="line">  const addressBuffer = new Uint8Array(</span><br><span class="line">    vlessBuffer.slice(addressIndex, addressIndex + 1)</span><br><span class="line">  );</span><br><span class="line">  const addressType = addressBuffer[0];</span><br><span class="line">  let addressLength = 0;</span><br><span class="line">  let addressValueIndex = addressIndex + 1;</span><br><span class="line">  let addressValue = &quot;&quot;;</span><br><span class="line">  switch (addressType) &#123;</span><br><span class="line">    case 1:</span><br><span class="line">      addressLength = 4;</span><br><span class="line">      addressValue = new Uint8Array(</span><br><span class="line">        vlessBuffer.slice(addressValueIndex, addressValueIndex + addressLength)</span><br><span class="line">      ).join(&quot;.&quot;);</span><br><span class="line">      break;</span><br><span class="line">    case 2:</span><br><span class="line">      addressLength = new Uint8Array(</span><br><span class="line">        vlessBuffer.slice(addressValueIndex, addressValueIndex + 1)</span><br><span class="line">      )[0];</span><br><span class="line">      addressValueIndex += 1;</span><br><span class="line">      addressValue = new TextDecoder().decode(</span><br><span class="line">        vlessBuffer.slice(addressValueIndex, addressValueIndex + addressLength)</span><br><span class="line">      );</span><br><span class="line">      break;</span><br><span class="line">    case 3:</span><br><span class="line">      addressLength = 16;</span><br><span class="line">      const dataView = new DataView(</span><br><span class="line">        vlessBuffer.slice(addressValueIndex, addressValueIndex + addressLength)</span><br><span class="line">      );</span><br><span class="line">      const ipv6 = [];</span><br><span class="line">      for (let i = 0; i &lt; 8; i++) &#123;</span><br><span class="line">        ipv6.push(dataView.getUint16(i * 2).toString(16));</span><br><span class="line">      &#125;</span><br><span class="line">      addressValue = ipv6.join(&quot;:&quot;);</span><br><span class="line">      break;</span><br><span class="line">    default:</span><br><span class="line">      console.log(`invild  addressType is $&#123;addressType&#125;`);</span><br><span class="line">  &#125;</span><br><span class="line">  if (!addressValue) &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      hasError: true,</span><br><span class="line">      message: `addressValue is empty, addressType is $&#123;addressType&#125;`</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line">  return &#123;</span><br><span class="line">    hasError: false,</span><br><span class="line">    addressType,</span><br><span class="line">    addressRemote: addressValue,</span><br><span class="line">    portRemote,</span><br><span class="line">    rawDataIndex: addressValueIndex + addressLength,</span><br><span class="line">    vlessVersion: version,</span><br><span class="line">    isUDP</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// index.ts</span><br><span class="line">import &#123; connect &#125; from &quot;cloudflare:sockets&quot;;</span><br><span class="line"></span><br><span class="line">// dns.ts</span><br><span class="line">var doh = &quot;https://cloudflare-dns.com/dns-query&quot;;</span><br><span class="line">var dns = async (domain) =&gt; &#123;</span><br><span class="line">  const response = await fetch(`$&#123;doh&#125;?name=$&#123;domain&#125;`, &#123;</span><br><span class="line">    method: &quot;GET&quot;,</span><br><span class="line">    headers: &#123;</span><br><span class="line">      &quot;Accept&quot;: &quot;application/dns-json&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">  const data = await response.json();</span><br><span class="line">  const ans = data?.Answer;</span><br><span class="line">  return ans?.find((record) =&gt; record.type === 1)?.data;</span><br><span class="line">&#125;;</span><br><span class="line">var isCloudFlareIP = (ip) =&gt; &#123;</span><br><span class="line">  const CFIP = [</span><br><span class="line">    [2918526976, -4096],</span><br><span class="line">    [1729491968, -1024],</span><br><span class="line">    [1729546240, -1024],</span><br><span class="line">    [1730085888, -1024],</span><br><span class="line">    [2372222976, -16384],</span><br><span class="line">    [1822605312, -16384],</span><br><span class="line">    [3193827328, -4096],</span><br><span class="line">    [3161612288, -4096],</span><br><span class="line">    [3320508416, -1024],</span><br><span class="line">    [3324608512, -32768],</span><br><span class="line">    [2728263680, -131072],</span><br><span class="line">    [1745879040, -524288],</span><br><span class="line">    [1746403328, -262144],</span><br><span class="line">    [2889875456, -524288],</span><br><span class="line">    [2197833728, -1024]</span><br><span class="line">  ];</span><br><span class="line">  const isIp4InCidr = (ip2, cidr) =&gt; &#123;</span><br><span class="line">    const [a, b, c, d] = ip2.split(&quot;.&quot;).map(Number);</span><br><span class="line">    ip2 = a &lt;&lt; 24 | b &lt;&lt; 16 | c &lt;&lt; 8 | d;</span><br><span class="line">    const [range, mask] = cidr;</span><br><span class="line">    return (ip2 &amp; mask) === range;</span><br><span class="line">  &#125;;</span><br><span class="line">  return CFIP.some((cidr) =&gt; isIp4InCidr(ip, cidr));</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">// index.ts</span><br><span class="line">var HTML404 = &quot;Script by zizifn, modified by MisakaNo&quot;;</span><br><span class="line">function delay2(ms) &#123;</span><br><span class="line">  return new Promise((resolve, rej) =&gt; &#123;</span><br><span class="line">    setTimeout(resolve, ms);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line">var workers_default = &#123;</span><br><span class="line">  async fetch(request, env, ctx) &#123;</span><br><span class="line">    let address = &quot;&quot;;</span><br><span class="line">    let portWithRandomLog = &quot;&quot;;</span><br><span class="line">    const userID = env.UUID || &quot;3e036e57-4d74-469a-b312-b97b59680ec3&quot;;</span><br><span class="line">    const log = (info, event) =&gt; &#123;</span><br><span class="line">      console.log(`[$&#123;address&#125;:$&#123;portWithRandomLog&#125;] $&#123;info&#125;`, event || &quot;&quot;);</span><br><span class="line">    &#125;;</span><br><span class="line">    const upgradeHeader = request.headers.get(&quot;Upgrade&quot;);</span><br><span class="line">    if (!upgradeHeader || upgradeHeader !== &quot;websocket&quot;) &#123;</span><br><span class="line">      return new Response(HTML404, &#123;</span><br><span class="line">        status: 404,</span><br><span class="line">        headers: new Headers(&#123; &quot;Content-Type&quot;: &quot;text/html&quot; &#125;)</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    const webSocketPair = new WebSocketPair();</span><br><span class="line">    const [client, webSocket] = Object.values(webSocketPair);</span><br><span class="line">    const earlyDataHeader = request.headers.get(&quot;sec-websocket-protocol&quot;) || &quot;&quot;;</span><br><span class="line">    let remoteSocket = null;</span><br><span class="line">    webSocket.accept();</span><br><span class="line">    const readableWebSocketStream = makeReadableWebSocketStream(</span><br><span class="line">      webSocket,</span><br><span class="line">      earlyDataHeader,</span><br><span class="line">      log</span><br><span class="line">    );</span><br><span class="line">    let vlessResponseHeader = new Uint8Array([0, 0]);</span><br><span class="line">    let remoteConnectionReadyResolve;</span><br><span class="line">    readableWebSocketStream.pipeTo(</span><br><span class="line">      new WritableStream(&#123;</span><br><span class="line">        async write(chunk, controller) &#123;</span><br><span class="line">          if (remoteSocket) &#123;</span><br><span class="line">            const writer2 = remoteSocket.writable.getWriter();</span><br><span class="line">            await writer2.write(chunk);</span><br><span class="line">            writer2.releaseLock();</span><br><span class="line">            return;</span><br><span class="line">          &#125;</span><br><span class="line">          const &#123;</span><br><span class="line">            hasError,</span><br><span class="line">            message,</span><br><span class="line">            portRemote,</span><br><span class="line">            addressType,</span><br><span class="line">            addressRemote,</span><br><span class="line">            rawDataIndex,</span><br><span class="line">            vlessVersion,</span><br><span class="line">            isUDP</span><br><span class="line">          &#125; = processVlessHeader(chunk, userID);</span><br><span class="line">          address = addressRemote || &quot;&quot;;</span><br><span class="line">          portWithRandomLog = `$&#123;portRemote&#125; -- $&#123;isUDP ? &quot;udp &quot; : &quot;tcp &quot;&#125; `;</span><br><span class="line">          if (isUDP &amp;&amp; portRemote != 53) &#123;</span><br><span class="line">            controller.error(&quot;UDP proxy only enable for DNS which is port 53&quot;);</span><br><span class="line">            webSocket.close();</span><br><span class="line">            return;</span><br><span class="line">          &#125;</span><br><span class="line">          if (hasError) &#123;</span><br><span class="line">            controller.error(message);</span><br><span class="line">            webSocket.close();</span><br><span class="line">            return;</span><br><span class="line">          &#125;</span><br><span class="line">          vlessResponseHeader = new Uint8Array([vlessVersion[0], 0]);</span><br><span class="line">          const rawClientData = chunk.slice(rawDataIndex);</span><br><span class="line">          let queryip = &quot;&quot;;</span><br><span class="line">          if (addressType === 2) &#123;</span><br><span class="line">            queryip = await dns(addressRemote);</span><br><span class="line">            if (queryip &amp;&amp; isCloudFlareIP(queryip)) &#123;</span><br><span class="line">              queryip = &quot;64.68.192.&quot; + Math.floor(Math.random() * 255);</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">          remoteSocket = connect(&#123;</span><br><span class="line">            hostname: queryip ? queryip : addressRemote,</span><br><span class="line">            port: portRemote</span><br><span class="line">          &#125;);</span><br><span class="line">          log(`connected`);</span><br><span class="line">          const writer = remoteSocket.writable.getWriter();</span><br><span class="line">          await writer.write(rawClientData);</span><br><span class="line">          writer.releaseLock();</span><br><span class="line">          remoteConnectionReadyResolve(remoteSocket);</span><br><span class="line">        &#125;,</span><br><span class="line">        close() &#123;</span><br><span class="line">          console.log(</span><br><span class="line">            `[$&#123;address&#125;:$&#123;portWithRandomLog&#125;] readableWebSocketStream is close`</span><br><span class="line">          );</span><br><span class="line">        &#125;,</span><br><span class="line">        abort(reason) &#123;</span><br><span class="line">          console.log(</span><br><span class="line">            `[$&#123;address&#125;:$&#123;portWithRandomLog&#125;] readableWebSocketStream is abort`,</span><br><span class="line">            JSON.stringify(reason)</span><br><span class="line">          );</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">    );</span><br><span class="line">    (async () =&gt; &#123;</span><br><span class="line">      await new Promise((resolve) =&gt; remoteConnectionReadyResolve = resolve);</span><br><span class="line">      let count = 0;</span><br><span class="line">      remoteSocket.readable.pipeTo(</span><br><span class="line">        new WritableStream(&#123;</span><br><span class="line">          start() &#123;</span><br><span class="line">            if (webSocket.readyState === WebSocket.READY_STATE_OPEN) &#123;</span><br><span class="line">              webSocket.send(vlessResponseHeader);</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;,</span><br><span class="line">          async write(chunk, controller) &#123;</span><br><span class="line">            if (webSocket.readyState === WebSocket.READY_STATE_OPEN) &#123;</span><br><span class="line">              if (count++ &gt; 2e4) &#123;</span><br><span class="line">                await delay2(1);</span><br><span class="line">              &#125;</span><br><span class="line">              webSocket.send(chunk);</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">              controller.error(</span><br><span class="line">                &quot;webSocket.readyState is not open, maybe close&quot;</span><br><span class="line">              );</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;,</span><br><span class="line">          close() &#123;</span><br><span class="line">            console.log(</span><br><span class="line">              `[$&#123;address&#125;:$&#123;portWithRandomLog&#125;] remoteConnection!.readable is close`</span><br><span class="line">            );</span><br><span class="line">          &#125;,</span><br><span class="line">          abort(reason) &#123;</span><br><span class="line">            console.error(</span><br><span class="line">              `[$&#123;address&#125;:$&#123;portWithRandomLog&#125;] remoteConnection!.readable abort`,</span><br><span class="line">              reason</span><br><span class="line">            );</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">      ).catch((error) =&gt; &#123;</span><br><span class="line">        console.error(</span><br><span class="line">          `[$&#123;address&#125;:$&#123;portWithRandomLog&#125;] processWebSocket has exception `,</span><br><span class="line">          error.stack || error</span><br><span class="line">        );</span><br><span class="line">        safeCloseWebSocket2(webSocket);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;)();</span><br><span class="line">    return new Response(null, &#123;</span><br><span class="line">      status: 101,</span><br><span class="line">      webSocket: client</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">function safeCloseWebSocket2(ws) &#123;</span><br><span class="line">  try &#123;</span><br><span class="line">    if (ws.readyState !== WebSocket.READY_STATE_CLOSED) &#123;</span><br><span class="line">      ws.close();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; catch (error) &#123;</span><br><span class="line">    console.error(&quot;safeCloseWebSocket error&quot;, error);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">export &#123;</span><br><span class="line">  workers_default as default</span><br><span class="line">&#125;;</span><br><span class="line">//# sourceMappingURL=index.js.map</span><br></pre></td></tr></table></figure><ol start="7"><li>点击“Save and deploy”按钮，保存代码。然后复制workers地址备用</li></ol><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305261021676.png" alt="img"></p><ol start="8"><li>节点配置如下</li></ol><ul><li>非TLS（可适用于无域名情况）</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">PLAINTEXT</span><br><span class="line">协议：Vless</span><br><span class="line">地址：CF优选IP / 域名</span><br><span class="line">端口：80 或 CF 支持的 HTTPS 端口</span><br><span class="line">UUID/密码：设置的UUID（如未设置则为 `3e036e57-4d74-469a-b312-b97b59680ec3`）</span><br><span class="line">传输协议：ws</span><br><span class="line">伪装域名：设置的 Workers 自定义域名</span><br><span class="line">路径：/</span><br></pre></td></tr></table></figure><ul><li>TLS（仅限自定义域名）</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">PLAINTEXT</span><br><span class="line">协议：Vless</span><br><span class="line">地址：CF优选IP / 域名</span><br><span class="line">端口：443 或 CF 支持的 HTTPS 端口</span><br><span class="line">UUID/密码：设置的UUID（如未设置则为 `3e036e57-4d74-469a-b312-b97b59680ec3`）</span><br><span class="line">传输协议：ws</span><br><span class="line">伪装域名：设置的 Workers 自定义域名</span><br><span class="line">路径：/</span><br><span class="line">传输安全：TLS</span><br><span class="line">跳过证书验证：true 或 false 都可以</span><br></pre></td></tr></table></figure><blockquote><p>原文链接：<a href="https://blog.misaka.rest/2023/05/26/cf-wkrs-vless/">https://blog.misaka.rest/2023/05/26/cf-wkrs-vless/</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> cf </tag>
            
            <tag> cloudflare </tag>
            
            <tag> vless </tag>
            
            <tag> workers </tag>
            
            <tag> 节点 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>甲骨文Oracle开区时间及AMD类型</title>
      <link href="/posts/cd3afdd8.html"/>
      <url>/posts/cd3afdd8.html</url>
      
        <content type="html"><![CDATA[<p>甲骨文是一家做数据库的巨头公司。后来亚马逊、微软谷歌等美国巨头公司推出了自己的云计算服务，甲骨文也做了云计算服务。其它巨头推出免费试用一年，甲骨文2019年9月推出永久免费服务。</p><p>本文介绍的是甲骨文Oracle开区时间及永久免费AMD类型。</p><blockquote><p>目前新加坡的AMD比较难开。</p></blockquote><h2 id="Asia-Pacific"><a href="#Asia-Pacific" class="headerlink" title="Asia-Pacific"></a>Asia-Pacific</h2><h4 id="海得拉巴"><a href="#海得拉巴" class="headerlink" title="海得拉巴"></a>海得拉巴</h4><p>2020年4月30日开区，永久免费的AMD是7551</p><h4 id="孟买"><a href="#孟买" class="headerlink" title="孟买"></a>孟买</h4><p>2019年7月26日开区，永久免费的AMD是7551</p><h4 id="墨尔本"><a href="#墨尔本" class="headerlink" title="墨尔本"></a>墨尔本</h4><p>2020年2月1日开区，永久免费的AMD是7551</p><h4 id="悉尼"><a href="#悉尼" class="headerlink" title="悉尼"></a>悉尼</h4><p>2019年8月30日开区，永久免费的AMD是7551</p><h4 id="新加坡"><a href="#新加坡" class="headerlink" title="新加坡"></a>新加坡</h4><p>2021年10月31日开区，永久免费的AMD是7742&#x2F;7j13</p><h4 id="大阪"><a href="#大阪" class="headerlink" title="大阪"></a>大阪</h4><p>2020年1月24日开区，永久免费的AMD是7551</p><h4 id="东京"><a href="#东京" class="headerlink" title="东京"></a>东京</h4><p>2019年4月30日开区，永久免费的AMD是7551</p><h4 id="春川"><a href="#春川" class="headerlink" title="春川"></a>春川</h4><p>2020年5月29日开区，永久免费的AMD是7751</p><h4 id="首尔"><a href="#首尔" class="headerlink" title="首尔"></a>首尔</h4><p>2019年5月13日开区，永久免费的AMD是7551</p><h2 id="Europe"><a href="#Europe" class="headerlink" title="Europe"></a>Europe</h2><h4 id="米兰"><a href="#米兰" class="headerlink" title="米兰"></a>米兰</h4><p>2021年11月30日开区，永久免费的AMD是7742</p><h4 id="苏黎世"><a href="#苏黎世" class="headerlink" title="苏黎世"></a>苏黎世</h4><p>2019年8月2日开区，永久免费的AMD是7551</p><h4 id="阿姆斯特丹"><a href="#阿姆斯特丹" class="headerlink" title="阿姆斯特丹"></a>阿姆斯特丹</h4><p>2020年2月1日开区，永久免费的AMD是7551</p><h4 id="耶路撒冷"><a href="#耶路撒冷" class="headerlink" title="耶路撒冷"></a>耶路撒冷</h4><p>2021年10月11日开区，永久免费的AMD是7742</p><h4 id="巴黎"><a href="#巴黎" class="headerlink" title="巴黎"></a>巴黎</h4><p>2022年6月1日开区，永久免费的AMD是7J13</p><h4 id="马赛"><a href="#马赛" class="headerlink" title="马赛"></a>马赛</h4><p>2021年10月31日开区，永久免费的AMD是7742</p><h4 id="法兰克福"><a href="#法兰克福" class="headerlink" title="法兰克福"></a>法兰克福</h4><p>2018年开区，永久免费的AMD是7551</p><h4 id="加的夫"><a href="#加的夫" class="headerlink" title="加的夫"></a>加的夫</h4><p>2018年开区，永久免费的AMD是7551</p><h4 id="伦敦"><a href="#伦敦" class="headerlink" title="伦敦"></a>伦敦</h4><p>2018年开区，永久免费的AMD是7551</p><h4 id="马德里"><a href="#马德里" class="headerlink" title="马德里"></a>马德里</h4><p>2022年9月13日开区，永久免费的AMD是7J13，暂无ARM</p><h4 id="斯德哥尔摩"><a href="#斯德哥尔摩" class="headerlink" title="斯德哥尔摩"></a>斯德哥尔摩</h4><p>2021年12月17日开区，永久免费的AMD是7742</p><h2 id="North-America"><a href="#North-America" class="headerlink" title="North America"></a>North America</h2><h4 id="蒙特利尔"><a href="#蒙特利尔" class="headerlink" title="蒙特利尔"></a>蒙特利尔</h4><p>2020年3月1日开区，永久免费的AMD是7551</p><h4 id="多伦多"><a href="#多伦多" class="headerlink" title="多伦多"></a>多伦多</h4><p>2019年1月17日开区，永久免费的AMD是7551</p><h4 id="阿什本"><a href="#阿什本" class="headerlink" title="阿什本"></a>阿什本</h4><p>2018年开区，永久免费的AMD是7551</p><h4 id="凤凰城"><a href="#凤凰城" class="headerlink" title="凤凰城"></a>凤凰城</h4><p>2018年开区，永久免费的AMD是7551</p><h4 id="圣何塞"><a href="#圣何塞" class="headerlink" title="圣何塞"></a>圣何塞</h4><p>2018年开区，永久免费的AMD是7551</p><h4 id="克雷塔罗"><a href="#克雷塔罗" class="headerlink" title="克雷塔罗"></a>克雷塔罗</h4><p>2022年7月17日开区，暂无永久免费的AMD&#x2F;ARM机器</p><h2 id="South-America"><a href="#South-America" class="headerlink" title="South America"></a>South America</h2><h4 id="圣保罗"><a href="#圣保罗" class="headerlink" title="圣保罗"></a>圣保罗</h4><p>2019年8月23日开区，永久免费的AMD是7551</p><h4 id="维涅杜"><a href="#维涅杜" class="headerlink" title="维涅杜"></a>维涅杜</h4><p>2021年5月28日开区，永久免费的AMD有7551</p><h4 id="圣地亚哥"><a href="#圣地亚哥" class="headerlink" title="圣地亚哥"></a>圣地亚哥</h4><p>2020年11月30日开区，永久免费AMD有7551&#x2F;7742&#x2F;7J13</p><h2 id="Middle-East-Afica"><a href="#Middle-East-Afica" class="headerlink" title="Middle East-Afica"></a>Middle East-Afica</h2><h4 id="约翰内斯堡"><a href="#约翰内斯堡" class="headerlink" title="约翰内斯堡"></a>约翰内斯堡</h4><p>2022年1月8日开区，永久免费的AMD是7J13</p><h4 id="吉达"><a href="#吉达" class="headerlink" title="吉达"></a>吉达</h4><p>2020年2月1日开区，永久免费的AMD是7551</p><h4 id="阿布扎比"><a href="#阿布扎比" class="headerlink" title="阿布扎比"></a>阿布扎比</h4><p>2021年11月19日开区，永久免费的AMD是7742</p><h4 id="迪拜"><a href="#迪拜" class="headerlink" title="迪拜"></a>迪拜</h4><p>2020年9月30日开区，永久免费的AMD是7551</p>]]></content>
      
      
      <categories>
          
          <category> VPS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vps </tag>
            
            <tag> 服务器 </tag>
            
            <tag> oracle </tag>
            
            <tag> 甲骨文 </tag>
            
            <tag> amd </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VPS/服务器常用脚本合集</title>
      <link href="/posts/cc0ad38f.html"/>
      <url>/posts/cc0ad38f.html</url>
      
        <content type="html"><![CDATA[<p>本帖所有脚本均来自互联网，本站仅对这些脚本进行收集，不对其可用性负责，也不对其安全性等任何方面负责。</p><h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><ul><li>查看CPU信息</li><li>查看当前内核信息</li><li>关键字查找进程</li><li>内核更改 [开启BBR、更换BBRplus等]</li><li>Linux修改主机名</li><li>一键开启&#x2F;关闭Swap</li><li>缝合怪测评</li><li>IP质量测试</li><li>Bench – 系统信息+I&#x2F;O+测速</li><li>SuperBench – 系统信息+I&#x2F;O+测速</li><li>HyperSpeed 一键测速</li><li>Besttrace 直接显示回程线路</li><li>Backtrace 三网回程路由测试</li><li>BestTrace 回程测试</li><li>回程测试 [Nanqinlang大佬作品]</li><li>UnixBench.sh [秋水逸冰大佬作品]</li><li>LemonBench.sh</li><li>Yabs.sh [Masonr大佬作品]</li><li>流媒体解锁测试 [Lmc999大佬作品]</li><li>流媒体解锁测试 [LovelyHaochi大佬作品]</li><li>推荐杜甫使用-本脚本支持查看I&#x2F;O bench以及system info</li><li>测试25端口是否开放</li></ul><h2 id="查看CPU信息"><a href="#查看CPU信息" class="headerlink" title="查看CPU信息"></a>查看CPU信息</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /proc/cpuinfo</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305181044175.jpeg" alt="img"></p><h2 id="查看当前内核信息"><a href="#查看当前内核信息" class="headerlink" title="查看当前内核信息"></a>查看当前内核信息</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname -a</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305181049853.jpeg" alt="img"></p><h2 id="关键字查找进程"><a href="#关键字查找进程" class="headerlink" title="关键字查找进程"></a>关键字查找进程</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -ef | grep &lt;进程关键字&gt;</span><br></pre></td></tr></table></figure><h2 id="内核更改-开启BBR、更换BBRplus等"><a href="#内核更改-开启BBR、更换BBRplus等" class="headerlink" title="内核更改 [开启BBR、更换BBRplus等]"></a>内核更改 [开启BBR、更换BBRplus等]</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Centos</span><br><span class="line">yum install ca-certificates wget -y &amp;&amp; update-ca-trust force-enable </span><br><span class="line">Debian/Ubuntu： </span><br><span class="line">apt-get install ca-certificates wget -y &amp;&amp; update-ca-certificates </span><br><span class="line"></span><br><span class="line">不卸载内核版本： </span><br><span class="line">wget -O tcpx.sh &quot;https://github.com/ylx2016/Linux-NetSpeed/raw/master/tcpx.sh&quot; &amp;&amp; chmod +x tcpx.sh &amp;&amp; ./tcpx.sh </span><br><span class="line"></span><br><span class="line">卸载内核版本： </span><br><span class="line">wget -O tcp.sh &quot;https://github.com/ylx2016/Linux-NetSpeed/raw/master/tcp.sh&quot; &amp;&amp; chmod +x tcp.sh &amp;&amp; ./tcp.sh</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305181049020.jpeg" alt="img"></p><h2 id="Linux修改主机名"><a href="#Linux修改主机名" class="headerlink" title="Linux修改主机名"></a>Linux修改主机名</h2><p>首先执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hostnamectl set-hostname &lt;newhostname&gt;</span><br></pre></td></tr></table></figure><p>然后执行下面的命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/hosts</span><br></pre></td></tr></table></figure><p>在第二行增加一个 <code>127.0.0.1 &lt;newhostname&gt;</code>，同时将文件中的原主机名修改为刚设置的新主机名</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305181044864.jpeg" alt="img"></p><h2 id="一键开启-x2F-关闭Swap"><a href="#一键开启-x2F-关闭Swap" class="headerlink" title="一键开启&#x2F;关闭Swap"></a>一键开启&#x2F;关闭Swap</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://www.moerats.com/usr/shell/swap.sh &amp;&amp; bash swap.sh</span><br></pre></td></tr></table></figure><h2 id="缝合怪测评"><a href="#缝合怪测评" class="headerlink" title="缝合怪测评"></a>缝合怪测评</h2><ul><li>自由组合测试方向和单项测试以及合集收录第三方脚本–原创</li><li>基础系统信息–感谢teddysun和superbench和yabs开源</li><li>CPU测试–感谢lemonbench开源</li><li>内存测试–感谢lemonbench开源</li><li>磁盘IO读写测试–感谢lemonbench开源</li><li>硬盘IO读写测试–感谢yabs开源</li><li>御三家流媒体解锁–感谢sjlleo的二进制文件</li><li>常用流媒体解锁–感谢RegionRestrictionCheck开源</li><li>Tiktok解锁–感谢lmc999的开源</li><li>三网回程以及路由延迟–感谢zhanghanyun&#x2F;backtrace开源</li><li>回程路由以及带宽类型检测(商宽&#x2F;家宽&#x2F;数据中心)–由fscarmen的PR以及本人的技术思路提供</li><li>端口检测(检测是否被墙)–由fscarmen的PR以及作者的技术思路提供 – 待修复</li><li>IP质量检测(检测IP白不白)(含IPV4和IPV6)–独创，感谢互联网提供的查询资源</li><li>speedtest测速–由teddysun和superspeed的开源以及整理</li><li>全国网络延迟测试–感谢IPASN开源</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">bash &lt;(wget -qO- --no-check-certificate https://gitlab.com/spiritysdx/za/-/raw/main/ecs.sh) </span><br><span class="line">或 </span><br><span class="line">bash &lt;(wget -qO- --no-check-certificate https://github.com/spiritLHLS/ecs/raw/main/ecs.sh)</span><br></pre></td></tr></table></figure><h2 id="IP质量测试"><a href="#IP质量测试" class="headerlink" title="IP质量测试"></a>IP质量测试</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">bash &lt;(wget -qO- --no-check-certificate https://gitlab.com/spiritysdx/za/-/raw/main/qzcheck.sh) </span><br><span class="line">或 </span><br><span class="line">bash &lt;(wget -qO- --no-check-certificate https://github.com/spiritLHLS/ecs/raw/main/qzcheck.sh)</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305181044180.jpeg" alt="img"></p><h2 id="Bench-–-系统信息-I-x2F-O-测速"><a href="#Bench-–-系统信息-I-x2F-O-测速" class="headerlink" title="Bench – 系统信息+I&#x2F;O+测速"></a>Bench – 系统信息+I&#x2F;O+测速</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -qO- bench.sh | bash</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305181048335.jpeg" alt="img"></p><h2 id="SuperBench-–-系统信息-I-x2F-O-测速"><a href="#SuperBench-–-系统信息-I-x2F-O-测速" class="headerlink" title="SuperBench – 系统信息+I&#x2F;O+测速"></a>SuperBench – 系统信息+I&#x2F;O+测速</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget -qO- git.io/superbench.sh | bash </span><br><span class="line">或 </span><br><span class="line">wget -qO- --no-check-certificate https://raw.githubusercontent.com/oooldking/script/master/superbench.sh | bash</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305181044569.jpeg" alt="img"></p><h2 id="HyperSpeed-一键测速"><a href="#HyperSpeed-一键测速" class="headerlink" title="HyperSpeed 一键测速"></a>HyperSpeed 一键测速</h2><ul><li>支持单线程、8线程测速，显示延迟与抖动</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">bash &lt;(curl -Lso- https://bench.im/hyperspeed) </span><br><span class="line">或 </span><br><span class="line">bash &lt;(wget -qO- https://bench.im/hyperspeed)</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305181044643.jpeg" alt="img"></p><h2 id="Besttrace-直接显示回程线路"><a href="#Besttrace-直接显示回程线路" class="headerlink" title="Besttrace 直接显示回程线路"></a>Besttrace 直接显示回程线路</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -qO- git.io/besttrace | bash</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305181044850.jpeg" alt="img"></p><p><strong>（</strong> * *<strong>部分截图* ）</strong></p><h2 id="Backtrace-三网回程路由测试"><a href="#Backtrace-三网回程路由测试" class="headerlink" title="Backtrace 三网回程路由测试"></a>Backtrace 三网回程路由测试</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl https://raw.githubusercontent.com/zhanghanyun/backtrace/main/install.sh -sSf | sh</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305181044948.jpeg" alt="img"></p><h2 id="BestTrace-回程测试"><a href="#BestTrace-回程测试" class="headerlink" title="BestTrace 回程测试"></a>BestTrace 回程测试</h2><ul><li>ipip.net 提供的手动输入IP测试回程线路工具</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">mkdir /root/besttrace </span><br><span class="line">cd /root/besttrace </span><br><span class="line">wget https://cdn.ipip.net/17mon/besttrace4linux.zip </span><br><span class="line">unzip besttrace4linux.zip </span><br><span class="line"></span><br><span class="line">解压之后会看到几个二进制文件,根据自己的系统选择对应文件。常用的： </span><br><span class="line"></span><br><span class="line">Linux X64系统： </span><br><span class="line">chmod +x besttrace </span><br><span class="line">./besttrace xxx.xxx.xxx.xxx   # 此处输入需测试IP </span><br><span class="line"></span><br><span class="line">Linux X32位系统： </span><br><span class="line">chmod +x besttrace32 </span><br><span class="line">./besttrace32 xxx.xxx.xxx.xxx   # 此处输入需测试IP </span><br><span class="line"></span><br><span class="line">ARM机型： </span><br><span class="line">chmod +x besttracearm </span><br><span class="line">./besttracearm xxx.xxx.xxx.xxx   # 此处输入需测试IP</span><br></pre></td></tr></table></figure><h2 id="回程测试-Nanqinlang大佬作品"><a href="#回程测试-Nanqinlang大佬作品" class="headerlink" title="回程测试 [Nanqinlang大佬作品]"></a>回程测试 [Nanqinlang大佬作品]</h2><ul><li>支持选择节点测试，四网快速测试，手动输入IP测试三种模式</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://raw.githubusercontent.com/nanqinlang-script/testrace/master/testrace.sh &amp;&amp; bash testrace.sh</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305181044653.jpeg" alt="img"></p><h2 id="UnixBench-sh-秋水逸冰大佬作品"><a href="#UnixBench-sh-秋水逸冰大佬作品" class="headerlink" title="UnixBench.sh [秋水逸冰大佬作品]"></a>UnixBench.sh [秋水逸冰大佬作品]</h2><ul><li>UnixBench是一个类unix系（Unix，BSD，Linux）统下的性能测试工具，一个开源工具，被广泛用与测试Linux系统主机的性能。Unixbench的主要测试项目有：系统调用、读写、进程、图形化测试、2D、3D、管道、运算、C库等系统基准性能提供测试数据。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget --no-check-certificate https://github.com/teddysun/across/raw/master/unixbench.sh &amp;&amp; chmod +x unixbench.sh &amp;&amp; ./unixbench.sh</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305181044518.jpeg" alt="img"></p><h2 id="LemonBench-sh"><a href="#LemonBench-sh" class="headerlink" title="LemonBench.sh"></a>LemonBench.sh</h2><ul><li>LemonBench工具(别名LBench、柠檬Bench)，是一款针对Linux服务器设计的服务器性能测试工具。通过综合测试，可以快速评估服务器的综合性能，为使用者提供服务器硬件配置信息。目前涵盖的测试有：服务器基础信息 (CPU信息&#x2F;内存信息&#x2F;Swap信息&#x2F;磁盘空间信息&#x2F;网络信息等)，流媒体解锁测试 (目前支持HBO Now&#x2F;动画疯&#x2F;B站港澳台&#x2F;B站台湾限定)，系统性能测试 (CPU&#x2F;内存&#x2F;磁盘)，Speedtest网速测试 (本地到最近源及国内各地域不同线路的网速)，路由追踪测试 (追踪到国内和海外不同线路的路由信息)。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">快速测试：</span><br><span class="line">curl -fsL https://ilemonra.in/LemonBenchIntl | bash -s fast </span><br><span class="line"></span><br><span class="line">完整测试： </span><br><span class="line">curl -fsL https://ilemonra.in/LemonBenchIntl | bash -s full</span><br></pre></td></tr></table></figure><h2 id="Yabs-sh-Masonr大佬作品"><a href="#Yabs-sh-Masonr大佬作品" class="headerlink" title="Yabs.sh [Masonr大佬作品]"></a>Yabs.sh [Masonr大佬作品]</h2><ul><li>又一个 Linux VPS 一键测评脚本，可以一键测试 VPS 硬盘的读写速度、网络带宽也就是下载速度、CPU 跑分（包括 Geekbench 4 和 Geekbench 5），以及各种性能测试等。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget -qO- yabs.sh | bash </span><br><span class="line">或 </span><br><span class="line">curl -sL yabs.sh | bash</span><br></pre></td></tr></table></figure><h2 id="流媒体解锁测试-Lmc999大佬作品"><a href="#流媒体解锁测试-Lmc999大佬作品" class="headerlink" title="流媒体解锁测试 [Lmc999大佬作品]"></a>流媒体解锁测试 [Lmc999大佬作品]</h2><ul><li>本脚本基于CoiaPrant&#x2F;MediaUnlock_Test代码进行修改，支持OS&#x2F;Platform：CentOS 6+, Ubuntu 14.04+, Debian 8+, MacOS, Android with Termux。</li><li>Github项目地址：<a href="https://github.com/lmc999/RegionRestrictionCheck">https://github.com/lmc999/RegionRestrictionCheck</a></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">bash &lt;(curl -L -s check.unlock.media) </span><br><span class="line"></span><br><span class="line">尾部添加参数的释义： </span><br><span class="line">-M 4      只检测IPv4结果 </span><br><span class="line">-M 6      只检测IPv6结果 </span><br><span class="line">-I eth0    指定检测的网卡名称（例：eth0） </span><br><span class="line">-E        选择脚本语言为英文</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305181048419.jpeg" alt="img"></p><h2 id="流媒体解锁测试-LovelyHaochi大佬作品"><a href="#流媒体解锁测试-LovelyHaochi大佬作品" class="headerlink" title="流媒体解锁测试 [LovelyHaochi大佬作品]"></a>流媒体解锁测试 [LovelyHaochi大佬作品]</h2><ul><li>支持多个流媒体的ipv4与ipv6解锁情况</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash &lt;(curl -sSL &quot;https://git.io/JswGm&quot;)</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305181044382.png" alt="img"></p><h2 id="推荐杜甫使用-本脚本支持查看I-x2F-O-bench以及system-info"><a href="#推荐杜甫使用-本脚本支持查看I-x2F-O-bench以及system-info" class="headerlink" title="推荐杜甫使用-本脚本支持查看I&#x2F;O bench以及system info"></a>推荐杜甫使用-本脚本支持查看I&#x2F;O bench以及system info</h2><ul><li>支持查看硬件信息，硬盘通电时间，io等脚本，适合独立服务器使用，vps也能用。</li><li>Github项目地址：<a href="https://github.com/Aniverse/A">https://github.com/Aniverse/A</a></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -q https://github.com/Aniverse/A/raw/i/a &amp;&amp; bash a</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305181047608.jpeg" alt="img"></p><h2 id="测试25端口是否开放"><a href="#测试25端口是否开放" class="headerlink" title="测试25端口是否开放"></a>测试25端口是否开放</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">telnet smtp.aol.com 25</span><br></pre></td></tr></table></figure><p>如果看到类似下面的回显，则说明端口是开放的：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Trying 74.6.141.50…</span><br><span class="line">Connected to smtp.aol.g03.yahoodns.net.</span><br><span class="line">Escape character is ‘^]’.</span><br><span class="line">220 smtp.mail.yahoo.com ESMTP ready</span><br></pre></td></tr></table></figure><p>如果显示 <code>Connection timed out</code> ，说明25端口不开放。需要注意的是：部分服务商或是系统，需要在控制后台开放25端口，或需要开放系统防火墙端口。</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vps </tag>
            
            <tag> 服务器 </tag>
            
            <tag> 脚本 </tag>
            
            <tag> 测速 </tag>
            
            <tag> 合集 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>将OpenVZ或LXC虚拟化架构的VPS系统重装至Alpine</title>
      <link href="/posts/ab77ae52.html"/>
      <url>/posts/ab77ae52.html</url>
      
        <content type="html"><![CDATA[<p>在我们使用OpenVZ或LXC虚拟化架构的VPS时，有时候我们需要重装系统。但是由于其架构的特殊性质，无法使用常规的DD脚本重装系统。在这篇文章中，我来和大家一起来在OpenVZ或LXC虚拟化架构的VPS系统重装至Alpine</p><h2 id="准备材料"><a href="#准备材料" class="headerlink" title="准备材料"></a>准备材料</h2><ul><li>OpenVZ或LXC虚拟化架构的VPS</li></ul><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><p>请将原系统安装成Debian，并关闭WGCF或WARP-GO的WARP，以提高成功率</p><h2 id="部署步骤"><a href="#部署步骤" class="headerlink" title="部署步骤"></a>部署步骤</h2><ol><li><p>SSH进入VPS，输入以下命令，在弹出的提示输入“Y”即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -N --no-check-certificate https://raw.githubusercontent.com/Misaka-blog/convert-ovzlxc-to-alpine/main/alpine.sh &amp;&amp; bash alpine.sh</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305161444230.png" alt="img"></p></li><li><p>等待脚本执行完成，如无意外的话看到如下图这三条消息之后自动重启VPS即可代表成功</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305161449893.png" alt="img"></p></li><li><p>使用原root账号及密码，登录VPS，如无意外的话登录出现Alpine Linux字样即为成功。</p></li></ol><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305161444741.png" alt="img"></p><blockquote><p>原文链接：<a href="https://blog.misaka.rest/2023/05/16/convert-ovzlxc-to-alpine/">https://blog.misaka.rest/2023/05/16/convert-ovzlxc-to-alpine/</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vps </tag>
            
            <tag> 教程 </tag>
            
            <tag> openvz </tag>
            
            <tag> lxc </tag>
            
            <tag> alpine </tag>
            
            <tag> 系统 </tag>
            
            <tag> 重装 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AZURE-CLI 开机教程 AZURE最安全稳定的开机方式</title>
      <link href="/posts/bb82f602.html"/>
      <url>/posts/bb82f602.html</url>
      
        <content type="html"><![CDATA[<p>一、 首先，我们去azure官方下载一个az-cli，各个操作系统的都有，官方文档讲得已经很详细了，这里就不做赘述。 azure cli <a href="https://learn.microsoft.com/zh-tw/cli/azure/install-azure-cli-linux?pivots=apt">官方安装网址</a></p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305131029688.png" alt="img"></p><p>这里以安装-linux为例，vps机器是ubuntu<br>找到ubuntu的安装命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash</span><br></pre></td></tr></table></figure><p>登录机器进入root模式，输入安装命令，完成安装。<br><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305131029056.png" alt="img"></p><p>二 ，登录AZ账户<br>机器VPS输入命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">az account clear # 清除以前账户</span><br><span class="line">az login --use-device-code</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305131037722.png" alt="img"></p><p>输入命令后机器给出了一个网址和代码，网址不变，代码每次不同</p><p>谷歌无痕浏览器打开网址 <a href="https://microsoft.com/devicelogin">https://microsoft.com/devicelogin</a></p><p>输入代码 FDVKBEGEE，再按提示输入AZ账号和密码</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305131029839.png" alt="img"><br><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305131029595.png" alt="img"></p><p>出现上图这样表明AZ账户登录成功了，可以关掉网页了，<br>这时的机器VPS也会变成下图这样，表明机器接管了AZ账户</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305131038731.png" alt="img"></p><p>三 ，创建虚拟机机器vps</p><p>1，接下来我们先创建资源组</p><p>输入命令 az group create -n 资源组名 -l 地区</p><p>示例:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">az group create -n mghk -l eastasia #香港</span><br></pre></td></tr></table></figure><p>注意此处的地区请填写az的代码 如香港是eastasia等，多个机器可以共用同一个资源组</p><p>AZ常用地区代码 (查询命令 az account list-locations -o table）<br>koreacentral 韩国<br>eastasia 香港<br>southeastasia 新加坡<br>japaneast 日本<br>eastus 美国西部</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305131029634.png" alt="img"></p><p>2， 创建机器：输入命令 （自行替换中文部分）</p><p>az vm create -g 资源组名（名字要对应上一步）-n 机器名 –image 系统 –admin-username 用户名(SSH登录用户名) –admin-password 密码(SSH登录密码，需要12位以上 大小写字母和数字) –size Standard_B1s(机器规格型号） –os-disk-size-gb 64(内存大小) -public-ip-address-dns-name 自定义dns标签名称(每次更换名称，不能重复)</p><p>注意：在同一个资源组名下创建多个机器时，机器名称不能相同</p><p>示例1–CentOS:7.5系统，7.5可换成其他版本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">az vm create -g mghk -n myvmzhu --image OpenLogic:CentOS:7.5:latest --admin-username azureuser --admin-password Azure1234567 --size Standard_F2s --os-disk-size-gb 64 --public-ip-address-dns-name zhutou1021rr</span><br></pre></td></tr></table></figure><p>示例2–默认ubuntu18.04,尝试换20.04或更高级没有成功</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">az vm create -g mghk-n myvmzhu002 --image ubuntults --admin-username azureuser --admin-password Azure1234567 --size Standard_B1s --os-disk-size-gb 64 --public-ip-address-dns-name zhutou1021hao</span><br></pre></td></tr></table></figure><p>示例3–Debian:debian-10:10:latest，可更换数字</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">az vm create -g mghk -n myvmzhu003 --image Debian:debian-10:10:latest --admin-username azureuser --admin-password Azure1234567 --size Standard_B1s --os-disk-size-gb 64 --public-ip-address-dns-name zhutou1022gg</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305131029031.png" alt="img"></p><p>四 ，登录SSH<br>创建机器成功后看上图，机器显示的”publicIpAddress”就是公网IP，填入主机那里<br>用户名和密码（根据前面自己创建机器时填写的数据）<br>用户名 azureuser<br>密码 Azure1234567<br>使用上面三个数据就可以登录SSH了</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305131039625.png" alt="img"></p><p>五，最后一步开放AZ端口</p><p>开放端口命令如下：az vm open-port -n 机器名 -g 资源组名 –port 端口或端口范围 如0-65535全开<br>示例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">az vm open-port -n myvmzhu -g mghk --port 0-65535</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305131029357.png" alt="img"></p><p>更换ip命令如下：az vm deallocate -n 机器名 -g 资源组名</p><p>示例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">az vm deallocate -n myvmzhu -g mghk</span><br></pre></td></tr></table></figure><p>等待1分钟过后输入下一个命令</p><p>az vm start -n 机器名 -g 资源组名</p><p>示例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">az vm start -n myvmzhu -g mghk</span><br></pre></td></tr></table></figure><p>接下来我们输入查看更换后的ip地址</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">az vm list-ip-addresses -o table</span><br></pre></td></tr></table></figure><blockquote><p>原文链接：<a href="https://help.azfa.me/2022/12/01/az-cli/">https://help.azfa.me/2022/12/01/az-cli/</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vps </tag>
            
            <tag> 教程 </tag>
            
            <tag> azure </tag>
            
            <tag> cli </tag>
            
            <tag> 开机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Hostmonit网站，在线优选CloudFlare IP</title>
      <link href="/posts/f1a88224.html"/>
      <url>/posts/f1a88224.html</url>
      
        <content type="html"><![CDATA[<p>使用Hostmonit在线优选CloudFlare IP</p><h2 id="准备材料"><a href="#准备材料" class="headerlink" title="准备材料"></a>准备材料</h2><ul><li>能上网的浏览器</li></ul><h2 id="部署步骤"><a href="#部署步骤" class="headerlink" title="部署步骤"></a>部署步骤</h2><ol><li>打开这个优选网页：<a href="https://stock.hostmonit.com/CloudFlareYes">https://stock.hostmonit.com/CloudFlareYes</a></li><li>可以在这里，选择适合自己运营商的优选IP</li></ol><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305120943743.png" alt="img"></p><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><p>由于在线测速的服务器和本地网络环境不一定相同，因此在线优选结果仅供参考</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> cf </tag>
            
            <tag> cloudflare </tag>
            
            <tag> 优选 </tag>
            
            <tag> ip </tag>
            
            <tag> hostmonit </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>零撸openai120刀教程 带土耳其入金方法.md</title>
      <link href="/posts/61903346.html"/>
      <url>/posts/61903346.html</url>
      
        <content type="html"><![CDATA[<p><strong>原理</strong>：土耳其钱包Oldubli注册后自动开通一张每月1250里拉限额的10年有效期万事达（master）虚拟卡，无需任何KYC。OpenAI绑定信用卡并扣除5美刀预授权额度后将提高账户消费额度为120美刀&#x2F;月，所以并不是真正的赠送120美刀余额，只是将账户升级为即用即付（Pay As You Go）且限制消费为120美刀的账户。</p><p>至于Oldubli如何入金，可以使用wise 或者万能淘宝<br><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305082213307.jpeg" alt="img"><br><strong>重点</strong>：OpenAI扣除的5美刀仅为预授权额度，得益于土耳其的落后系统以及虚拟信用卡的特性，在为此万事达（master）虚拟卡充值5美刀（考虑到汇损我一般入金115土耳其里拉按照2023.04.22汇率 115里拉为5.9美元)后，短时间内扣除5美刀预授权的操作不会秒级别的应用到此账户。 说人话：冲5刀进去 可以30min-1h内无限扣除5刀预授权，意思为你只要手速快，用这张只充值了115里拉的卡能绑起码2-4个OpenAI账户…..等30min-1h内土佬的系统把此额度应用了才会失效….so….</p><p><strong>重点中的重点</strong>：30min-1h后5刀额度被真正应用后就无法骚操作了，但是就算到这一步，你的5美刀（115里拉）依然没有消失，依然在你的万事达卡中，依然可以真实的花出去！！！所以撸完了OpenAI120美金后是用其继续开土耳其netflix还是充值这5美金到linode账户还是你继续撸aws等等….就都随你了</p><p><strong>注意事项</strong>：Oldubli在google 商店和apple商店（外区）均可下载，但需美国IP或土耳其IP访问，否则报错！<br>Oldubli目前仅乌克兰手机号、土耳其手机号、阿塞拜疆手机号可以正常收验证码注册。这里提供一个应用：SafeUM 同样可以在两个商店下载到，注册后获得一个拉脱维亚或阿塞拜疆虚拟号，这个号码完全属于你，看广告可以继续续期！<br>SO:获得到的阿塞拜疆手机号还能注册验证OpenAI账户，这下真连账号成本都没有了</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> openai </tag>
            
            <tag> chatGPT </tag>
            
            <tag> 零撸 </tag>
            
            <tag> 入金 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在Chrome使用New Bing聊天</title>
      <link href="/posts/bfd72768.html"/>
      <url>/posts/bfd72768.html</url>
      
        <content type="html"><![CDATA[<p>在之前New Bing公测的时候，博主就对其感兴趣了。不过由于微软的某些原因，我迟迟没有等到内测的名额。好在最近几天，New Bing向所有用户开放了，我才得以使用其进行聊天。而且流畅度比ChatGPT好多了。但是有个缺点就是只能在Edge浏览器上使用。在这期文章中，我来和大家一起突破微软的限制，在Chrome浏览器使用New Bing</p><h2 id="准备材料"><a href="#准备材料" class="headerlink" title="准备材料"></a>准备材料</h2><ul><li>Chrome 浏览器</li><li>微软账户（可选）</li></ul><h2 id="部署步骤"><a href="#部署步骤" class="headerlink" title="部署步骤"></a>部署步骤</h2><p>1.打开这个插件的下载链接：<br><a href="https://chrome.google.com/webstore/detail/user-agent-switcher-and-m/bhchdcejhohfmigjafbampogmaanbfkg">https://chrome.google.com/webstore/detail/user-agent-switcher-and-m/bhchdcejhohfmigjafbampogmaanbfkg</a><br>然后点击“添加至Chrome”按钮，进行插件安装</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305051639869.png" alt="img"></p><p>2.按照下图指示，设置UA</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305051639654.png" alt="img"></p><p>3.点击“Test UA”按钮，测试UA。当看到和插件设置的UA一样的时候即为成功</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305051639049.png" alt="img"></p><p>4.随意问一个问题，可以看到是和在Edge一样是正常使用的</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305051639827.png" alt="img"></p><blockquote><p>原文链接：<a href="https://blog.misaka.rest/2023/05/05/newbing-chrome/">https://blog.misaka.rest/2023/05/05/newbing-chrome/</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> edge </tag>
            
            <tag> chrome </tag>
            
            <tag> chatgpt </tag>
            
            <tag> bing </tag>
            
            <tag> new </tag>
            
            <tag> 必应 </tag>
            
            <tag> 聊天 </tag>
            
            <tag> 机器人 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>借助Cloudflare Argo Tunnel隧道，在PaaS容器云平台部署哪吒探针</title>
      <link href="/posts/61d5747e.html"/>
      <url>/posts/61d5747e.html</url>
      
        <content type="html"><![CDATA[<h2 id="准备材料"><a href="#准备材料" class="headerlink" title="准备材料"></a>准备材料</h2><ul><li>GitHub 账户</li><li>CloudFlare 账户，并准备一个域名</li><li>PaaS 容器云账户（以下使用Koyeb为演示平台）</li></ul><h2 id="部署步骤"><a href="#部署步骤" class="headerlink" title="部署步骤"></a>部署步骤</h2><p>1.打开F佬的CF Argo Tunnel生成网：<a href="https://fscarmen.cloudflare.now.cc/">https://fscarmen.cloudflare.now.cc</a> ，按照下图步骤获取隧道信息</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202304271337368.png" alt="img"></p><p>2.进入CloudFlare控制台，在相应的域名 DNS 记录里加上客户端上报数据(tcp)和 ssh（可选）的域名，打开小云朵以启用 CDN</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202304271341472.png" alt="img"><br><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202304271337405.png" alt="img"></p><p>3.转到 网络 选项，将 gRPC 开关打开</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202304271341157.png" alt="img"></p><p>4.设置新的OAuth授权应用，打开：<a href="https://github.com/settings/applications/new">https://github.com/settings/applications/new</a> ，设置应用程序。面板域名加上 <code>https://</code> 开头，回调地址再加上 <code>/oauth2/callback</code> 结尾</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202304271337360.png" alt="img"></p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202304271337006.png" alt="img"></p><p>5.获取 GitHub 的 PAT (Personal Access Token): <a href="https://github.com/settings/tokens/new">https://github.com/settings/tokens/new</a></p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202304271337808.png" alt="img"></p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202304271337879.png" alt="img"></p><p>6.创建 GitHub 用于备份的私库: <a href="https://github.com/new">https://github.com/new</a></p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202304271337015.png" alt="img"></p><p>7.打开Koyeb，创建一个新的APP。类型选择Docker</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202304271342115.png" alt="img"></p><p>8.输入镜像名称：<code>fscarmen/argo-nezha:latest</code></p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202304271342422.png" alt="img"></p><p>9.按照下图设置，下表为参考变量</p><table><thead><tr><th>变量名</th><th>是否必须</th><th>备注</th></tr></thead><tbody><tr><td>GH_USER</td><td>是</td><td>github 的用户名，用于面板管理授权</td></tr><tr><td>GH_CLIENTID</td><td>是</td><td>在 github 上申请</td></tr><tr><td>GH_CLIENTSECRET</td><td>是</td><td>在 github 上申请</td></tr><tr><td>GH_REPO</td><td>否</td><td>在 github 上备份哪吒服务端数据库文件的库</td></tr><tr><td>GH_EMAIL</td><td>否</td><td>github 的邮箱，用于备份的 git 推送到远程库</td></tr><tr><td>GH_PAT</td><td>否</td><td>github 的 PAT</td></tr><tr><td>ARGO_JSON</td><td>是</td><td>从 <a href="https://fscarmen.cloudflare.now.cc/">https://fscarmen.cloudflare.now.cc</a> 获取的 Argo Json</td></tr><tr><td>DATA_DOMAIN</td><td>是</td><td>客户端与服务端的通信 argo 域名</td></tr><tr><td>WEB_DOMAIN</td><td>是</td><td>面板 argo 域名</td></tr><tr><td>SSH_DOMAIN</td><td>否</td><td>ssh 用的 argo 域名</td></tr><tr><td>SSH_PASSWORD</td><td>否</td><td>ssh 的密码，只有在设置 SSH_JSON 后才生效，默认值 password</td></tr></tbody></table><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202304271342525.png" alt="img"></p><p>10.等待1-2分钟，待出现Healthy即为成功部署。这时可以使用Argo的域名或者是PaaS平台的域名访问探针面板</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202304271337598.png" alt="img"></p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202304271423291.png" alt="img"></p><h2 id="VPS-部署实例"><a href="#VPS-部署实例" class="headerlink" title="VPS 部署实例"></a>VPS 部署实例</h2><ul><li>注意: ARGO_JSON&#x3D; 后面需要有单引号，不能去掉</li><li>如果 VPS 是 IPv6 only 的，请先安装 WARP IPv4 或者双栈: <a href="https://github.com/fscarmen/warp">https://github.com/fscarmen/warp</a></li><li>备份目录为当前路径的 dashboard 文件夹</li></ul><h3 id="docker-部署"><a href="#docker-部署" class="headerlink" title="docker 部署"></a>docker 部署</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">docker run -dit \</span><br><span class="line">           --name nezha_dashboard \</span><br><span class="line">           --restart always \</span><br><span class="line">           -e GH_USER=&lt;填 github 用户名&gt; \</span><br><span class="line">           -e GH_EMAIL=&lt;填 github 邮箱&gt; \</span><br><span class="line">           -e GH_PAT=&lt;填获取的&gt; \</span><br><span class="line">           -e GH_REPO=&lt;填自定义的&gt; \</span><br><span class="line">           -e GH_CLIENTID=&lt;填获取的&gt;  \</span><br><span class="line">           -e GH_CLIENTSECRET=&lt;填获取的&gt; \</span><br><span class="line">           -e ARGO_JSON=&#x27;&lt;填获取的&gt;&#x27; \</span><br><span class="line">           -e WEB_DOMAIN=&lt;填自定义的&gt; \</span><br><span class="line">           -e DATA_DOMAIN=&lt;填自定义的&gt; \</span><br><span class="line">           -e SSH_DOMAIN=&lt;填自定义的&gt; \</span><br><span class="line">           -e SSH_PASSWORD=&lt;填自定义的&gt; \</span><br><span class="line">           fscarmen/argo-nezha</span><br></pre></td></tr></table></figure><h3 id="docker-compose-部署"><a href="#docker-compose-部署" class="headerlink" title="docker-compose 部署"></a>docker-compose 部署</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">version: &#x27;3.8&#x27;</span><br><span class="line">services:</span><br><span class="line">    argo-nezha:</span><br><span class="line">        image: fscarmen/argo-nezha</span><br><span class="line">        container_name: nezha_dashboard</span><br><span class="line">        restart: always</span><br><span class="line">        environment:</span><br><span class="line">            - GH_USER=&lt;填 github 用户名&gt;</span><br><span class="line">            - GH_EMAIL=&lt;&lt;填 github 邮箱&gt;</span><br><span class="line">            - GH_PAT=&lt;填获取的&gt;</span><br><span class="line">            - GH_REPO=&lt;填自定义的&gt;</span><br><span class="line">            - GH_CLIENTID=&lt;填获取的&gt;</span><br><span class="line">            - GH_CLIENTSECRET=&lt;填获取的&gt;</span><br><span class="line">            - ARGO_JSON=&#x27;&lt;填获取的&gt;&#x27;</span><br><span class="line">            - WEB_DOMAIN=&lt;填自定义的&gt;</span><br><span class="line">            - DATA_DOMAIN=&lt;填自定义的&gt;</span><br><span class="line">            - SSH_DOMAIN=&lt;填自定义的&gt;</span><br><span class="line">            - SSH_PASSWORD=&lt;填自定义的&gt;</span><br></pre></td></tr></table></figure><h2 id="客户端接入"><a href="#客户端接入" class="headerlink" title="客户端接入"></a>客户端接入</h2><p>通过gRPC传输，无需额外配置。使用面板给到的安装方式，举例</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -L https://raw.githubusercontent.com/naiba/nezha/master/script/install.sh -o nezha.sh &amp;&amp; chmod +x nezha.sh &amp;&amp; sudo ./nezha.sh install_agent data.seales.nom.za 443 eAxO9IF519fKFODlW0 --tls</span><br></pre></td></tr></table></figure><h2 id="SSH-接入"><a href="#SSH-接入" class="headerlink" title="SSH 接入"></a>SSH 接入</h2><ul><li>以 macOS + WindTerm 为例，其他根据使用的 SSH 工具，结合官方官方说明文档: <a href="https://developers.cloudflare.com/cloudflare-one/connections/connect-apps/use_cases/ssh/#2-connect-as-a-user">https://developers.cloudflare.com/cloudflare-one/connections/connect-apps/use_cases/ssh/#2-connect-as-a-user</a></li><li>官方 cloudflared 下载: <a href="https://github.com/cloudflare/cloudflared/releases">https://github.com/cloudflare/cloudflared/releases</a></li><li>以下输入命令举例</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;file path&gt;/cloudflared access ssh --hostname ssh.seales.nom.za</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202304271425791.png" alt="img"></p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202304271423316.png" alt="img"></p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202304271424294.png" alt="img"></p><h2 id="自动还原备份"><a href="#自动还原备份" class="headerlink" title="自动还原备份"></a>自动还原备份</h2><ul><li>把需要还原的文件名改到 github 备份库里的 <code>README.md</code>，定时服务会每分钟检测更新，并把上次同步的文件名记录在本地 <code>/dbfile</code> 处以与在线的文件内容作比对</li></ul><p>下图为以还原文件名为 <code>dashboard-2023-04-23-13:08:37.tar.gz</code> 作示例</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202304271423301.png" alt="img"></p><h2 id="手动还原备份"><a href="#手动还原备份" class="headerlink" title="手动还原备份"></a>手动还原备份</h2><ul><li>ssh 进入容器后运行，github 备份库里的 tar.gz 文件名，格式: dashboard-2023-04-22-21:42:10.tar.gz</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash /dashboard/restore.sh &lt;文件名&gt;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202304271424279.png" alt="img"></p><h2 id="完美搬家"><a href="#完美搬家" class="headerlink" title="完美搬家"></a>完美搬家</h2><ul><li>备份原哪吒的 <code>/dashboard</code> 文件夹，压缩备份为 <code>dashboard.tar.gz</code> 文件</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar czvf dashboard.tar.gz /dashboard</span><br></pre></td></tr></table></figure><ul><li>下载文件并放入私库，这个私库名要与新哪吒 <GH_REPO> 完全一致，并把该库的 README.md 的内容编辑为 <code>dashboard.tar.gz</code></li><li>部署本项目新哪吒，完整填入变量即可。部署完成后，自动还原脚本会每分钟作检测，发现有新的内容即会自动还原，全程约 3 分钟</li></ul><h2 id="主体目录文件及说明"><a href="#主体目录文件及说明" class="headerlink" title="主体目录文件及说明"></a>主体目录文件及说明</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">|-- dashboard</span><br><span class="line">|   |-- app                  # 哪吒面板主程序</span><br><span class="line">|   |-- argo.json            # Argo 隧道 json 文件，记录着使用隧道的信息</span><br><span class="line">|   |-- argo.yml             # Argo 隧道 yml 文件，用于在一同隧道下，根据不同域名来分流 web, gRPC 和 ssh 协议的作用</span><br><span class="line">|   |-- backup.sh            # 备份数据脚本</span><br><span class="line">|   |-- data</span><br><span class="line">|   |   |-- config.yaml      # 哪吒面板的配置，如 Github OAuth2 / gRPC 域名 / 端口 / 是否启用 TLS 等信息</span><br><span class="line">|   |   `-- sqlite.db        # SQLite 数据库文件，记录着面板设置的所有 severs 和 cron 等信息</span><br><span class="line">|   |-- entrypoint.sh        # 主脚本，容器运行后执行</span><br><span class="line">|   |-- nezha-agent          # 哪吒客户端，用于监控本地 localhost</span><br><span class="line">|   |-- nezha.csr            # SSL/TLS 证书签名请求</span><br><span class="line">|   |-- nezha.key            # SSL/TLS 证书的私钥信息</span><br><span class="line">|   |-- nezha.pem            # SSL/TLS 隐私增强邮件</span><br><span class="line">|   `-- restore.sh           # 还原备份脚本</span><br><span class="line">`-- dbfile                   # 记录最新的还原或备份文件名</span><br></pre></td></tr></table></figure><h2 id="鸣谢下列作者的文章和项目"><a href="#鸣谢下列作者的文章和项目" class="headerlink" title="鸣谢下列作者的文章和项目:"></a>鸣谢下列作者的文章和项目:</h2><ul><li>热心的朝阳群众 Robin，讨论哪吒服务端与客户端的关系，从而诞生了此项目</li><li>哪吒官网: <a href="https://nezha.wiki/">https://nezha.wiki/</a> , TG 群: <a href="https://t.me/nezhamonitoring">https://t.me/nezhamonitoring</a></li><li>共穷国际老中医: <a href="http://solitud.es/">http://solitud.es/</a></li><li>Akkia’s Blog: <a href="https://blog.akkia.moe/">https://blog.akkia.moe/</a></li><li>HiFeng’s Blog: <a href="https://www.hicairo.com/">https://www.hicairo.com/</a></li><li>用 Cloudflare Tunnel 进行内网穿透: <a href="https://blog.outv.im/2021/cloudflared-tunnel/">https://blog.outv.im/2021/cloudflared-tunnel/</a></li></ul><h2 id="免责声明"><a href="#免责声明" class="headerlink" title="免责声明:"></a>免责声明:</h2><ul><li>本程序仅供学习了解, 非盈利目的，请于下载后 24 小时内删除, 不得用作任何商业用途, 文字、数据及图片均有所属版权, 如转载须注明来源。</li><li>使用本程序必循遵守部署免责声明。使用本程序必循遵守部署服务器所在地、所在国家和用户所在国家的法律法规, 程序作者不对使用者任何不当行为负责。</li></ul><h2 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h2><blockquote><p><a href="https://github.com/fscarmen2/Argo-Nezha-Service-Container">https://github.com/fscarmen2/Argo-Nezha-Service-Container</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> cf </tag>
            
            <tag> cloudflare </tag>
            
            <tag> argo </tag>
            
            <tag> tunnel </tag>
            
            <tag> paas </tag>
            
            <tag> 容器 </tag>
            
            <tag> 容器云 </tag>
            
            <tag> 哪吒 </tag>
            
            <tag> 探针 </tag>
            
            <tag> 部署 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>美国各个地区Google Voice号段地图</title>
      <link href="/posts/7b32c8fe.html"/>
      <url>/posts/7b32c8fe.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202304260925649.png" alt="img"></p><p>各州包含号段介绍（号码前三位为所在州号段）</p><table><thead><tr><th><strong>美国州</strong></th><th><strong>包含电话号段（Google Voice 前三位）</strong></th></tr></thead><tbody><tr><td>Alabama (AL) 阿拉巴马州</td><td>205, 251, 256, 334, 938</td></tr><tr><td>Alaska (AK) 阿拉斯加州</td><td>907</td></tr><tr><td>Arizona (AZ) 亚利桑那州</td><td>480, 520, 602, 623, 928</td></tr><tr><td>Arkansas (AR) 阿肯色州</td><td>479, 501, 870</td></tr><tr><td>California (CA) 加利福尼亚州</td><td>209, 213, 279, 310, 323, 341, 408, 415, 424, 442, 510, 530, 559, 562, 619, 626, 628, 650, 657, 661, 669, 707, 714, 747, 760, 805, 818, 820, 831, 858, 909, 916, 925, 949, 951</td></tr><tr><td>Colorado (CO) 科罗拉多州</td><td>303, 719, 720, 970</td></tr><tr><td>Connecticut (CT) 康涅狄格州</td><td>203, 475, 860, 959</td></tr><tr><td>Delaware (DE) 特拉华州</td><td>302</td></tr><tr><td>Florida (FL) 佛罗里达州</td><td>239, 305, 321, 352, 386, 407, 561, 727, 754, 772, 786, 813, 850, 863, 904, 941, 954</td></tr><tr><td>Georgia (GA) 乔治亚州</td><td>229, 404, 470, 478, 678, 706, 762, 770, 912</td></tr><tr><td>Hawaii (HI) 夏威夷州</td><td>808</td></tr><tr><td>Idaho (ID) 爱华达州</td><td>208, 986</td></tr><tr><td>Illinois (IL) 伊利诺伊州</td><td>217, 224, 309, 312, 331, 618, 630, 708, 773, 779, 815, 847, 872</td></tr><tr><td>Indiana (IN) 印第安那州</td><td>219, 260, 317, 463, 574, 765, 812, 930</td></tr><tr><td>Iowa (IA) 爱荷华州</td><td>319, 515, 563, 641, 712</td></tr><tr><td>Kansas (KS) 堪萨斯州</td><td>316, 620, 785, 913</td></tr><tr><td>Kentucky (KY) 肯塔基州</td><td>270, 364, 502, 606, 859</td></tr><tr><td>Louisiana (LA) 路易斯安那州</td><td>225, 318, 337, 504, 985</td></tr><tr><td>Maine (ME) 缅因州</td><td>207</td></tr><tr><td>Maryland (MD) 马里兰州</td><td>240, 301, 410, 443, 667</td></tr><tr><td>Massachusetts (MA) 马萨诸塞州</td><td>339, 351, 413, 508, 617, 774, 781, 857, 978</td></tr><tr><td>Michigan (MI) 密歇根州</td><td>231, 248, 269, 313, 517, 586, 616, 734, 810, 906, 947, 989</td></tr><tr><td>Minnesota (MN) 明尼苏达州</td><td>218, 320, 507, 612, 651, 763, 952</td></tr><tr><td>Mississippi (MS) 密西西比州</td><td>228, 601, 662, 769</td></tr><tr><td>Missouri (MO) 密苏里州</td><td>314, 417, 573, 636, 660, 816</td></tr><tr><td>Montana (MT) 蒙大拿州</td><td>406</td></tr><tr><td>Nebraska (NE) 内布拉斯加州</td><td>308, 402, 531</td></tr><tr><td>Nevada (NV) 内华达州</td><td>702, 725, 775</td></tr><tr><td>New Hampshire (NH) 新罕布什尔州</td><td>603</td></tr><tr><td>New Jersey (NJ) 新泽西州</td><td>201, 551, 609, 640, 732, 848, 856, 862, 908, 973</td></tr><tr><td>New Mexico (NM) 新墨西哥州</td><td>505, 575</td></tr><tr><td>New York (NY) 纽约州</td><td>212, 315, 332, 347, 516, 518, 585, 607, 631, 646, 680, 716, 718, 838, 845, 914, 917, 929, 934</td></tr><tr><td>North Carolina (NC) 北卡罗来纳州</td><td>252, 336, 704, 743, 828, 910, 919, 980, 984</td></tr><tr><td>North Dakota (ND) 北达科他州</td><td>701</td></tr><tr><td>Ohio (OH) 俄亥俄州</td><td>216, 220, 234, 330, 380, 419, 440, 513, 567, 614, 740, 937</td></tr><tr><td>Oklahoma (OK) 奥克拉荷马州</td><td>405, 539, 580, 918</td></tr><tr><td>Oregon (OR) 俄勒冈州</td><td>458, 503, 541, 971</td></tr><tr><td>Pennsylvania (PA) 宾夕法尼亚州</td><td>215, 223, 267, 272, 412, 445, 484, 570, 610, 717, 724, 814, 878</td></tr><tr><td>Rhode Island (RI) 罗德岛州</td><td>401</td></tr><tr><td>South Carolina (SC) 南卡罗来纳州</td><td>803, 843, 854, 864</td></tr><tr><td>South Dakota (SD) 南达科他州</td><td>605</td></tr><tr><td>Tennessee (TN) 田纳西州</td><td>423, 615, 629, 731, 865, 901, 931</td></tr><tr><td>Texas (TX) 德克萨斯州</td><td>210, 214, 254, 281, 325, 346, 361, 409, 430, 432, 469, 512, 682, 713, 726, 737, 806, 817, 830, 832, 903, 915, 936, 940, 956, 972, 979</td></tr><tr><td>Utah (UT) 犹他州</td><td>385, 435, 801</td></tr><tr><td>Vermont (VT) 佛蒙特州</td><td>802</td></tr><tr><td>Virginia (VA) 弗吉尼亚州</td><td>276, 434, 540, 571, 703, 757, 804</td></tr><tr><td>Washington (WA) 华盛顿州</td><td>206, 253, 360, 425, 509, 564</td></tr><tr><td>Washington (DC) 华盛顿特区</td><td>202</td></tr><tr><td>West Virginia (WV) 西弗吉尼亚州</td><td>304, 681</td></tr><tr><td>Wisconsin (WI) 威斯康辛州</td><td>262, 414, 534, 608, 715, 920</td></tr><tr><td>Wyoming (WY) 怀俄明州</td><td>307</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 美国 </tag>
            
            <tag> 地图 </tag>
            
            <tag> 区号 </tag>
            
            <tag> google </tag>
            
            <tag> voice </tag>
            
            <tag> gv </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>美国五大免税州的邮编、电话区号</title>
      <link href="/posts/d7dfe87e.html"/>
      <url>/posts/d7dfe87e.html</url>
      
        <content type="html"><![CDATA[<p><strong>美国5大免税州是哪几个？</strong></p><blockquote><ol><li>阿拉斯加州（Alaska）首府：朱诺（Juneau）邮编：99850 电话区号：907</li><li>特拉华州（Delaware）邮编：19702 电话区号：302</li><li>蒙大拿州（Montana）城市：Marion邮编：26586  电话区号：406</li><li>新罕布什尔州（New Hampshire）城市：Fremont邮编：03044 电话区号：603</li><li>俄勒冈州（Oregon）城市：ANTELOPE 邮编：97001 电话区号：503 、 971</li></ol></blockquote><p>下面我们来盘点一下五大免税州的主要城市的邮编：</p><p><strong>一、阿拉斯加州（Alaska）主要城市的邮编</strong></p><p>1、朱诺（Juneau）</p><blockquote><p>邮编：99801,99802,99803,99811,99850</p></blockquote><p>2、安克雷奇邮编（Anchorage）：</p><blockquote><p>邮编：99501,99502,99503,99504,99507,99508,99509,99510,99511,99512,99513,99514,99515,99516,99517,99518,99519,99520,99521,99522,99523,99524,99525,99526,99527,99528,99529,99530,99531,99532,99533,99534,99535,99536,99537,99538,99539,9954099541,99542,99543,99544,99545,99546,99547,99548,99549,99550,99551,99552,99553,99554,99555,99556,99557,99558,99559,99560,99561,99562,99563,99564,99565,99566,99567,99568,99569,99570,99571,99572,99573,99574,99575,99576,99577,99578,99579,99580,99581,99582,99583,99584,99585,99586,99587,99588,99589,99590,99591,99592,99593,99594,99595,99596,99597,99598,99599,99695</p></blockquote><p>3、费尔班克斯（Fairbanks）</p><blockquote><p>邮编：99701,99706,99707,99708,99709,99710,99711,99712,99775,99790</p></blockquote><p><strong>二、特拉华州Delaware (DE)主要城市邮编</strong></p><p>1、多佛(Dover)</p><blockquote><p>邮编：19901,19903,19904-19906</p></blockquote><p>2、维明顿(Wilmington)</p><blockquote><p>邮编：19801-19810,19850,19880,19884-19887,19889-19899</p></blockquote><p>3、纽瓦克(Newark)</p><blockquote><p>邮编：19702,19711-19718,19725,19726</p></blockquote><p><strong>三、蒙大拿州（Montana）主要城市的邮编</strong></p><p>1、赫勒拿（Heldna）</p><blockquote><p>邮编：59601,59602,59604,59620,59623,59624,59625,59626</p></blockquote><p>2、比林斯（Billings）</p><blockquote><p>邮编：59101,59102,59103,59104,59105,59106,59107,59108,59111,59112,59114,59115,59116,59117</p></blockquote><p>3、密苏拉（Missoula）</p><blockquote><p>邮编：59801,59802,59803,59804,59806,59807,59808,59812</p></blockquote><p><strong>四、新罕不什尔州（New Hampshire）主要城市邮编</strong></p><p>1、曼彻斯特（Manchester）</p><blockquote><p>邮编：03101,03102,03103,03104,03105,03107,03108,03109,03111</p></blockquote><p>2、南雪（Nashua）</p><blockquote><p>邮编：03060,03061,03062,03063,03064</p></blockquote><p>3、朴茨茅斯（Portsmouth）</p><blockquote><p>邮编：03801,03802,03803,03804</p></blockquote><p><strong>五、俄勒冈州Oregon（OR）主要城市邮编</strong></p><p>1、沙连(Salem)</p><blockquote><p>邮编：97301,97302,97303,97304,97305,97306,97308,97309,97310,97311,97312,97313,97314</p></blockquote><p>2、波特兰(Portland)</p><blockquote><p>邮编：97201,97202,97203,97204,97205,97206,97207,97208,97209,97210,97211,97212,97213,97214,97215,97216,97217,97218,97219,97220,97221,97222,97223,97224,97225,97227,97228,97229,97230,97231,97232,97233,97236,97238,97239,97240,97242,97251,97253,97254,97255,97256,97258,97259,97266,97267,97268,97269,97271,97272,97280,97281,97282,97283,97286,97290,97291,97292,97293,97294,97296,97298,97299</p></blockquote><p>3、尤金(Eugene)</p><blockquote><p>邮编：97401,97402,97403,97404,97405,97408,97440</p></blockquote><p>4、科瓦利(Corvallis)</p><blockquote><p>邮编：97330,97331,97333,97339</p></blockquote><p><strong>附上一个免税州地址</strong></p><p>地址：11831 SW Riverwood Road, Portland OR 97219<br>城市：波特兰（Portland）<br>区号：503</p>]]></content>
      
      
      <categories>
          
          <category> 知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 美国 </tag>
            
            <tag> 区号 </tag>
            
            <tag> 免税 </tag>
            
            <tag> 邮编 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>甲骨文oracle修改邮箱，修改管理员账号</title>
      <link href="/posts/a4530c38.html"/>
      <url>/posts/a4530c38.html</url>
      
        <content type="html"><![CDATA[<p>买的账号要素：1.<strong>甲骨文</strong>登录账号+密码 2.登录的邮箱+邮箱密码（比如<a href="mailto:abc321@gamil.com">abc321@gamil.com</a>）<br><strong>提醒</strong>：1.拿到邮箱和邮箱密码第一时间修改密码。2.登录所用邮箱的前半段即Tenant(abc321)<strong>必须牢记</strong>！完全修改完成后，只有这一段是登录需要使用到的。<br>正式开始<br>1、按卖家给你的信息，登录甲骨文，选择-身份与安全-用户。<br><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202304260836390.png" alt="甲骨文oracle修改邮箱，新增修改管理员账号"></p><p>2、创建新用户，牢记设置的用户名，添加自己的邮箱（要收取邮件的），重置获取一次性密码，添加新增用户进入admin管理组。<br><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202304260836530.png" alt="甲骨文oracle修改邮箱，新增修改管理员账号"><br><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202304260835194.png" alt="甲骨文oracle修改邮箱，新增修改管理员账号"><br><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202304260835115.png" alt="甲骨文oracle修改邮箱，新增修改管理员账号"></p><p>3、查看邮箱，点链接。使用新建用户登录,重置密码。<br><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202304260835134.png" alt="甲骨文oracle修改邮箱，新增修改管理员账号"><br><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202304260836628.png" alt="甲骨文oracle修改邮箱，新增修改管理员账号"><br><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202304260835387.png" alt="甲骨文oracle修改邮箱，新增修改管理员账号"><br><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202304260835273.png" alt="甲骨文oracle修改邮箱，新增修改管理员账号"></p><p>4、<strong>关键</strong>新号登录后，先在<strong>管理组</strong>内先删除老管理员账号，再从用户中删除老管理员账号。<br><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202304260837863.png" alt="甲骨文oracle修改邮箱，新增修改管理员账号"><br><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202304260841198.png" alt="甲骨文oracle修改邮箱，新增修改管理员账号"></p><p>以上就完成了甲骨文账号修改替换，以后登录可以用每个分区的专属链接<br>比如：<br>首尔<br><a href="https://console.ap-seoul-1.oraclecloud.com/">https://console.ap-seoul-1.oraclecloud.com</a><br>春川<br><a href="https://console.ap-chuncheon-1.oraclecloud.com/">https://console.ap-chuncheon-1.oraclecloud.com</a><br>凤凰城<br><a href="https://console.us-phoenix-1.oraclecloud.com/">https://console.us-phoenix-1.oraclecloud.com</a><br>圣何塞<br><a href="https://console.us-sanjose-1.oraclecloud.com/">https://console.us-sanjose-1.oraclecloud.com</a><br>东京<br><a href="https://console.ap-tokyo-1.oraclecloud.com/">https://console.ap-tokyo-1.oraclecloud.com</a><br>或者统一登录地址<br><a href="https://cloud.oracle.com/">https://cloud.oracle.com</a><br>输入Tenant（原始邮箱@前半段）<br>然后输入你新建的用户名+密码就可以成功登录。</p><p>有楼层提到了租户里面改邮箱，那是以前的教程有一个叫“服务用户控制台”的选项，现在我的所有账号里都没有这个了，但是甲骨文的IDCS还是可以进入的，附上方法截图。主要用途就是改个邮箱，方便接收吓人的邮件。</p><p>建议不要关注邮件，都是同一套模板。<strong>一切以实际能不能ssh上机器为准！</strong></p><p>1.身份和安全-联盟-点进联盟号-点击链接进入DICS管理页面<br><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202304260841191.png" alt="甲骨文oracle修改邮箱，新增修改管理员账号"><br><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202304260835892.png" alt="甲骨文oracle修改邮箱，新增修改管理员账号"><br><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202304260835538.png" alt="甲骨文oracle修改邮箱，新增修改管理员账号"><br><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202304260835536.png" alt="甲骨文oracle修改邮箱，新增修改管理员账号"></p><p>2.三处修改，密码，邮箱，恢复邮箱。这里仅是用于IDCS<br><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202304260840614.png" alt="甲骨文oracle修改邮箱，新增修改管理员账号"><br><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202304260840800.png" alt="甲骨文oracle修改邮箱，新增修改管理员账号"></p><blockquote><p>原文链接：<a href="https://qssjx.com/?p=700">https://qssjx.com/?p=700</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vps </tag>
            
            <tag> 教程 </tag>
            
            <tag> 服务器 </tag>
            
            <tag> cloud </tag>
            
            <tag> oracle </tag>
            
            <tag> 甲骨文 </tag>
            
            <tag> 甲骨文云 </tag>
            
            <tag> 邮箱 </tag>
            
            <tag> 密码 </tag>
            
            <tag> 帐号 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Clash将默认的Clash Premium内核切换为Clash Meta内核</title>
      <link href="/posts/71157ecf.html"/>
      <url>/posts/71157ecf.html</url>
      
        <content type="html"><![CDATA[<p>在我们使用Clash For Windows（以下均使用CFW指代）时，有时候需要使用Clash Meta内核。对于习惯CFW的用户来说，切换客户端有时是一件忍痛割爱的事情。那在这篇教程中，我来和大家一起来在CFW中将默认的Clash Premium内核切换为Clash Meta内核。</p><h2 id="准备材料"><a href="#准备材料" class="headerlink" title="准备材料"></a>准备材料</h2><ul><li>Clash For Windows</li></ul><h2 id="部署步骤"><a href="#部署步骤" class="headerlink" title="部署步骤"></a>部署步骤</h2><ol><li>打开 Clash Meta 的项目下载地址：<a href="https://github.com/MetaCubeX/Clash.Meta/releases">https://github.com/MetaCubeX/Clash.Meta/releases</a> ，下载适合自己电脑的版本</li></ol><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202304201026040.png" alt="img"></p><ol><li>解压内核程序，备用</li></ol><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202304201025418.png" alt="img"></p><ol><li>进入CFW的安装目录中的<code>resources/static/files/win/x64</code>（如为32位系统的程序则为<code>x86</code>），将默认的<code>clash-win64.exe</code>更名备份，我这里就改为<code>clash-win642.exe</code></li><li>将第二步解压的内核程序复制进来，并改为<code>clash-win64.exe</code></li></ol><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202304201025239.png" alt="img"></p><ol><li>打开CFW，当此处出现“Unknown”即为切换成功</li></ol><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202304201025030.png" alt="img"></p><blockquote><p>原文链接：<a href="https://blog.misaka.rest/2023/04/19/cfw-change-meta/">https://blog.misaka.rest/2023/04/19/cfw-change-meta/</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> clash </tag>
            
            <tag> 内核 </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CloudFlare Argo Tunnel教程</title>
      <link href="/posts/32016df9.html"/>
      <url>/posts/32016df9.html</url>
      
        <content type="html"><![CDATA[<p>在我们使用NAT VPS的时候，或者是我们自己使用本地环境的时候，由于我们没有公网IP，只能使用内网穿透的法子。这时候，我们就可以使用CloudFlare Argo Tunnel来穿透我们需要使用公网IP的服务，并且可以自定义域名。</p><h2 id="准备材料"><a href="#准备材料" class="headerlink" title="准备材料"></a>准备材料</h2><ul><li>一枚域名，并DNS解析到CloudFlare</li></ul><h2 id="步骤方法"><a href="#步骤方法" class="headerlink" title="步骤方法"></a>步骤方法</h2><ol><li>打开Argo Tunnel的官网：<a href="https://developers.cloudflare.com/cloudflare-one/connections/connect-apps/install-and-setup/installation">https://developers.cloudflare.com/cloudflare-one/connections/connect-apps/install-and-setup/installation</a> ，然后选择自己的Linux版本下载对应的安装包。CentOS系系统选择rpm包下载，Debian系系统选择deb包下载</li></ol><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202304201019203.png" alt="img"></p><ol><li>使用<code>dpkg -i cloudflared-linux-amd64.deb</code>（CentOS：<code>rpm -i cloudflared-linux-amd64.rpm</code>）安装cloudflared客户端<br>PS: 本文中官网下载的文件名为cloudflared-linux-amd64.deb，请按照实际文件名安装</li><li>可以使用<code>cloudflared tunnel --url http://127.0.0.1:端口号</code>命令，测试HTTP隧道效果或使用<code>cloudflared tunnel --url tcp://127.0.0.1:端口号</code>命令，测试TCP隧道效果</li></ol><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202304201019082.png" alt="img"></p><ol><li>使用<code>cloudflared tunnel login</code>命令，登录你的CloudFlare账号。复制控制台出现的网址登录你的CloudFlare账号</li></ol><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202304201019759.png" alt="img"></p><ol><li>选择一个域名，授权给Argo Tunnel使用</li><li>下面是一些常用的命令</li></ol><p>创建隧道：<code>cloudflared tunnel create 隧道名</code><br>删除隧道：<code>cloudflared tunnel delete 隧道名</code><br>列出隧道：<code>cloudflared tunnel list</code><br>配置隧道：<code>cloudflared tunnel route dns 隧道名 [CNAME 记录名称].[接入 CLoudflare 的域名]</code><br>运行隧道：<code>cloudflared tunnel run --url http://127.0.0.1:http端口号 隧道名</code> 或 <code>cloudflared tunnel run --url tcp://127.0.0.1:tcp端口号 隧道名</code></p><ol><li>使用YML配置文件文件如下</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">YAML</span><br><span class="line">tunnel: [tunnel 的名称或 UUID]</span><br><span class="line">credentials-file: /root/.cloudflared/[tunnel 的 UUID].json</span><br><span class="line"></span><br><span class="line">ingress:</span><br><span class="line">  - hostname: [CNAME 记录名称].[接入 CLoudflare 的域名]</span><br><span class="line">    service: http://localhost:80</span><br><span class="line">  - service: http_status:404</span><br></pre></td></tr></table></figure><blockquote><p>配置文件使用 Ingress 规则，如果想配置 SSH、TCP 等其他协议，可以查看官网：<a href="https://developers.cloudflare.com/cloudflare-one/connections/connect-apps/configuration/ingress">https://developers.cloudflare.com/cloudflare-one/connections/connect-apps/configuration/ingress</a></p></blockquote><p>然后使用 <code>cloudflared tunnel --config [配置文件路径] run</code> 命令运行隧道</p><p>参考：<a href="https://www.blueskyxn.com/202102/4176.html">https://www.blueskyxn.com/202102/4176.html</a></p><blockquote><p>原文链接：<a href="https://blog.misaka.rest/2023/04/19/argo-tunnel/">https://blog.misaka.rest/2023/04/19/argo-tunnel/</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> VPS </tag>
            
            <tag> cloudflare </tag>
            
            <tag> argo </tag>
            
            <tag> tunnel </tag>
            
            <tag> cdn </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>独角数卡配置支付宝当面付</title>
      <link href="/posts/e76be41c.html"/>
      <url>/posts/e76be41c.html</url>
      
        <content type="html"><![CDATA[<h3 id="支付宝开通个体支付商户"><a href="#支付宝开通个体支付商户" class="headerlink" title="支付宝开通个体支付商户"></a>支付宝开通个体支付商户</h3><p>服务官网地址：<a href="https://b.alipay.com/signing/productDetailV2.htm?productId=I1011000290000001003">https://b.alipay.com/signing/productDetailV2.htm?productId=I1011000290000001003</a></p><p>打开后点击立即开通，扫码登录支付宝账号</p><p>填写开通资料</p><p>填写完成点击提交，审核会很快，一分钟左右。</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202304200956339.jpeg" alt="img">填写开通资料</p><h3 id="生成公钥"><a href="#生成公钥" class="headerlink" title="生成公钥"></a>生成公钥</h3><p>个体商户开通成功后，打开支付宝官网：<a href="https://b.alipay.com/page/home">https://b.alipay.com/page/home</a></p><ul><li>点击账号中心，点击签约管理</li></ul><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202304200956246.jpeg" alt="img">进入签约管理</p><ul><li>点击查看详情</li></ul><p><img src="https://pic.rmb.bdstatic.com/bjh/down/33813c0e1dc589d136d9b295fa24b3c3.jpeg?x-bce-process=image/watermark,bucket_baidu-rmb-video-cover-1,image_YmpoL25ld3MvNjUzZjZkMjRlMDJiNjdjZWU1NzEzODg0MDNhYTQ0YzQucG5n,type_RlpMYW5UaW5nSGVpU01HQg==,w_49,text_QOWkqei_ueS7peiTnQ==,size_49,x_38,y_38,interval_2,color_FFFFFF,effect_softoutline,shc_000000,blr_2,align_1" alt="img">进入查看详情</p><ul><li>点击自行研发接入</li></ul><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202304200956207.jpeg" alt="img">进入自行研发接入</p><ul><li>点击网页移动应用，进入详情</li></ul><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202304201002293.jpeg" alt="img">网页移动应用</p><ul><li>点击开发设置，点击设置</li></ul><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202304200956773.jpeg" alt="img">设置</p><ol><li>选择接口加签方式</li><li>点击设置</li><li>选择密钥（普通适用）</li><li>下载密钥工具 官网地址：<a href="https://opendocs.alipay.com/common/02kipk">https://opendocs.alipay.com/common/02kipk</a></li><li>选择与你系统对应的版本，安装支付宝开放平台密钥工具</li><li>运行支付宝开放平台密钥工具</li><li>点击生成密钥，可以看到应用公钥和应用私钥，保存下载这两个</li><li>复制支付宝开放平台密钥工具生成的应用公钥</li><li>回到支付宝，在对应位置粘贴应用公钥</li><li>点击确认上传</li><li>下载支付宝公钥</li></ol><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202304200956689.jpeg" alt="img">设置支付宝公钥</p><h3 id="独角卡后台"><a href="#独角卡后台" class="headerlink" title="独角卡后台"></a>独角卡后台</h3><p>进入独角卡后台，点击支付配置，选择支付宝当面付，编辑支付宝当面付</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202304201002558.jpeg" alt="img">编辑支付宝当面付</p><ul><li>支付名称填写网页移动应用页面的id（上面复制到记事本的）</li><li>商户key填写网页页面下载的支付宝公钥</li><li>商户密钥填写支付宝密钥工具生成的应用私钥</li></ul><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202304201002681.jpeg" alt="img">配置密钥</p><p>下载下来的应用公钥，应用私钥和支付宝公钥</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202304200956233.jpeg" alt="img"></p><blockquote><p>原文链接：<a href="https://baijiahao.baidu.com/s?id=1755777325644896267">https://baijiahao.baidu.com/s?id=1755777325644896267</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VPS </tag>
            
            <tag> 配置 </tag>
            
            <tag> 支付 </tag>
            
            <tag> 支付宝 </tag>
            
            <tag> 当面付 </tag>
            
            <tag> 发卡 </tag>
            
            <tag> 独角数卡 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在Replit部署subconverter（订阅转换）后端</title>
      <link href="/posts/8dd43e1c.html"/>
      <url>/posts/8dd43e1c.html</url>
      
        <content type="html"><![CDATA[<p>在使用Clash的时候，肯定知道Clash是基于yaml的节点配置文件工作的。我们如果去追求方便，去使用在线的订阅转换网页，那么你的节点会有被盗用的风险。这是因为订阅转换站的后端会记录你的个人节点订阅信息。因此，个人建议还是手写配置文件比较保险。但是，如果想确保节点订阅安全，又想追求懒人话使用订阅转换的话，可以考虑自建订阅转换服务。在这篇文章中，我来和大家一起在Replit上部署订阅转换服务</p><h2 id="准备材料"><a href="#准备材料" class="headerlink" title="准备材料"></a>准备材料</h2><ul><li>Replit 账号</li></ul><h2 id="部署步骤"><a href="#部署步骤" class="headerlink" title="部署步骤"></a>部署步骤</h2><ol><li>打开 Replit 项目链接：<a href="https://replit.com/@misaka-blog/subconverter">https://replit.com/@misaka-blog/subconverter</a> ，点击旁边蓝色的“Fork”按钮</li><li>点击顶上的“Run”按钮，待网页预览页面出现“File not found.”即可</li></ol><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202304191606443.png" alt="img"></p><ol><li>打开订阅转换网页（ <a href="https://acl4ssr-sub.github.io/">https://acl4ssr-sub.github.io/</a> ），后端地址选择本地</li></ol><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202304191600029.png" alt="img"></p><ol><li>复制出链接，将<code>http://localhost:25500</code>修改成自己的replit地址即可</li></ol><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202304191600165.png" alt="img"></p><blockquote><p>原文链接：<a href="https://blog.misaka.rest/2023/04/19/replit-subconverter/">https://blog.misaka.rest/2023/04/19/replit-subconverter/</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 订阅 </tag>
            
            <tag> replit </tag>
            
            <tag> subconverter </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql之mysqldump整库备份单表恢复还原</title>
      <link href="/posts/8bda40b2.html"/>
      <url>/posts/8bda40b2.html</url>
      
        <content type="html"><![CDATA[<h2 id="一、需求场景说明"><a href="#一、需求场景说明" class="headerlink" title="一、需求场景说明"></a>一、需求场景说明</h2><p>  日常运维中，我们往往都是整库备份，整库还原。实际工作中会存在需要还原部分表或者单表的情况。例如在开发或者测试环境中，开发人员因为误操作或者测试需要删除或者清空了某个表，我们需要还原这个被删除或者清空的表。为了恢复这个误删表，我们如果使用整库还原会存在2点问题：</p><p>一、直接还原到在用库，可能导致其他表已更新数据被覆盖；</p><p>二、使用临时库整库还原后copy单表会耗时费力（如下图所示，单库整库备份大小将近4G）。实际上我们只需要截取出单表数据，恢复单表即可。</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202304190955099.png" alt="在这里插入图片描述"></p><p>  如何实现整库备份，单表还原的需求场景呢？此博文就是针对此场景进行介绍说明。博文实验环境：</p><ul><li>操作系统：centos7.6</li><li>mysql版本：5.7</li></ul><h2 id="二、单表还原步骤"><a href="#二、单表还原步骤" class="headerlink" title="二、单表还原步骤"></a>二、单表还原步骤</h2><h3 id="1、查看数据库备份文件"><a href="#1、查看数据库备份文件" class="headerlink" title="1、查看数据库备份文件"></a>1、查看数据库备份文件</h3><p>  mysqldump备份的数据实际上就是sql数据导出方式。我们使用cat查看备份的sql文件，可以看到备份工具的版本，数据库版本，数据库名和参数信息等。查看具体内容可以发现导出的数据使用insert into语句存储，不过插入多少行数据，对于文本来说就是一行，而且都包含表名，这个是我们实现单表还原的关键。</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202304190956877.png" alt="在这里插入图片描述"></p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202304190956945.png" alt="在这里插入图片描述"></p><p>  为了对比验证单表恢复还原数据的可行性，我们先整库还原了备份数据，耗时1个多小时。其中personchangeinfo表总计9889行。</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202304190957548.png" alt="在这里插入图片描述"></p><h3 id="2、使用grep过滤单表数据"><a href="#2、使用grep过滤单表数据" class="headerlink" title="2、使用grep过滤单表数据"></a>2、使用grep过滤单表数据</h3><p>  使用grep过滤需要还原的表数据。</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202304190957279.png" alt="在这里插入图片描述"></p><blockquote><p>[wuhs@s152 tmp]$ cat testdb_all.sql |grep -E ‘INSERT INTO <code>personchangeinfo</code>’ &gt; personchangeinfo1.sql<br>[wuhs@s152 tmp]$ ll -lrt<br>总用量 3934600<br>…<br>-rw-rw-r–. 1 wuhs wuhs 1033114 11月 15 14:39 personchangeinfo1.sql</p></blockquote><h3 id="3、使用sed命令筛出单表数据"><a href="#3、使用sed命令筛出单表数据" class="headerlink" title="3、使用sed命令筛出单表数据"></a>3、使用sed命令筛出单表数据</h3><p>  使用sed -n从整库备份文件中筛查出需要恢复的表数据。</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202304190958876.png" alt="在这里插入图片描述"></p><blockquote><p>[wuhs@s152 tmp]$ sed -n ‘&#x2F;INSERT INTO <code>personchangeinfo</code>&#x2F;p’ testdb_all.sql &gt; personchangeinfo2.sql<br>[wuhs@s152 tmp]$ ll -lrt<br>总用量 3934600<br>…<br>-rw-rw-r–. 1 wuhs wuhs 1033114 11月 15 14:36 personchangeinfo2.sql3 11月 15 14:29 personchangeinfo2.sql</p></blockquote><h3 id="4、创建表结构"><a href="#4、创建表结构" class="headerlink" title="4、创建表结构"></a>4、创建表结构</h3><p>  在备份文件中找到创建表空间语句，并执行。</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202304190958981.png" alt="在这里插入图片描述"></p><h3 id="5、单表还原测试"><a href="#5、单表还原测试" class="headerlink" title="5、单表还原测试"></a>5、单表还原测试</h3><p>  我们分别使用grep和sed导出数据进行还原测试，还原结果与整库还原结果一致，说明此方式还原单表可行。</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202304190958149.png" alt="在这里插入图片描述"></p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202304190959098.png" alt="在这里插入图片描述"></p><h2 id="三、通过脚本实现单表还原"><a href="#三、通过脚本实现单表还原" class="headerlink" title="三、通过脚本实现单表还原"></a>三、通过脚本实现单表还原</h2><h3 id="1、脚本内容"><a href="#1、脚本内容" class="headerlink" title="1、脚本内容"></a>1、脚本内容</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">[wuhs@s152 tmp]$ cat onetableimport.sh </span><br><span class="line">#!/bin/bash</span><br><span class="line">#script name: onetableimport.sh</span><br><span class="line">#author: 524627027@qq.com</span><br><span class="line">#用途：此脚本用于从mysqldump整库备份文件中导出单表数据</span><br><span class="line">#使用方式：将整库备份文件重命名为testdb_all.sql,并与此脚本放置在同一个目录下</span><br><span class="line"></span><br><span class="line">#参数定义</span><br><span class="line">workPath=$(cd $(dirname $0); pwd)</span><br><span class="line">t1=&quot;&quot;</span><br><span class="line">tblist=&quot;&quot;</span><br><span class="line">outportfile=$workPath/outport.sh</span><br><span class="line"></span><br><span class="line">#获取数据库表清单</span><br><span class="line">cat testdb_all.sql |grep &quot;CREATE TABLE &quot; &gt; 1.txt</span><br><span class="line">tblist=`awk -F &quot; &quot; &#x27;&#123;print $3&#125;&#x27; 1.txt`</span><br><span class="line">echo &quot;$tblist&quot;</span><br><span class="line">#通过键盘输入需要导出的表</span><br><span class="line">read -p &quot;请输入需要还原的表名(请带符号复制并黏贴):&quot; t1</span><br><span class="line">read -p &quot;请输入导出后文件名：&quot; tname</span><br><span class="line"></span><br><span class="line">#创建单表导出脚本</span><br><span class="line">if [ ! -f $outportfile ]; then</span><br><span class="line">  cat &gt; $outportfile &lt;&lt;EOF</span><br><span class="line">sed -n &#x27;/CREATE TABLE $t1/,/Dumping data for table $t1/p&#x27; testdb_all.sql &gt; $tname.sql</span><br><span class="line">sed -n &#x27;/INSERT INTO $t1/p&#x27; testdb_all.sql &gt;&gt; $tname.sql</span><br><span class="line">EOF</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">#执行单表数据导出脚本</span><br><span class="line">chmod u+x $outportfile</span><br><span class="line">sh $outportfile</span><br><span class="line">#结束通知</span><br><span class="line">echo &quot;$tname 数据机构及数据导出完成&quot;</span><br><span class="line">#删除临时文件</span><br><span class="line">rm -rf 1.txt</span><br><span class="line">rm -rf $outportfile</span><br></pre></td></tr></table></figure><h3 id="2、脚本测试"><a href="#2、脚本测试" class="headerlink" title="2、脚本测试"></a>2、脚本测试</h3><blockquote><p>[wuhs@s152 tmp]$ sh onetableimport.sh<br><code>personchangeinfo</code><br>…<br>请输入需要还原的表名(请带符号复制并黏贴):<br>请输入导出后文件名：personchangeinfo<br>personchangeinfo 数据机构及数据导出完成</p></blockquote><h3 id="3、查看导出文件"><a href="#3、查看导出文件" class="headerlink" title="3、查看导出文件"></a>3、查看导出文件</h3><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202304191000843.png" alt="在这里插入图片描述"></p><h3 id="4、数据恢复测试"><a href="#4、数据恢复测试" class="headerlink" title="4、数据恢复测试"></a>4、数据恢复测试</h3><p>  导出后对比发现数据导出成功，脚本既截取了数据表结构创建sql，也导出了数据内容。</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202304191000078.png" alt="在这里插入图片描述"></p><blockquote><p>原文链接：<a href="https://blog.csdn.net/carefree2005/article/details/127851222">https://blog.csdn.net/carefree2005/article/details/127851222</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 脚本 </tag>
            
            <tag> mysql </tag>
            
            <tag> mysqldump </tag>
            
            <tag> 备份 </tag>
            
            <tag> 还原 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>启用cloudflare的ssl和二级域名</title>
      <link href="/posts/69e9b14c.html"/>
      <url>/posts/69e9b14c.html</url>
      
        <content type="html"><![CDATA[<h1 id="域名准备"><a href="#域名准备" class="headerlink" title="域名准备"></a>域名准备</h1><p>想要架上二级域名，首先，我们需要一个一级域名……自行在心仪的厂家选购。我比较常用的（价格比较实惠的）是国内的是万网，特价的时候一百多人民币买过十年的。国外的是NameSilo，首年特价很多，.com，.xyz比较实惠，但像.top之类的还是当年万网买得更便宜。（不过拿.top，.cyou之类的便宜域名发邮件比较容易被当成垃圾邮件屏蔽……）</p><p>提醒一下，Freenom的虽然免费，但在那个bug多端的网站申请其实还挺麻烦的，而且实测无法使用LetsEncrypt获取证书（不支持那几个顶级域名）。</p><h1 id="DNS准备"><a href="#DNS准备" class="headerlink" title="DNS准备"></a>DNS准备</h1><p>获得域名后，如果那家的DNS不尽如人意，可以转接其他服务商的DNS，比如Cloudflare。</p><p>在Cloudflare的话，可以这样配置域名：</p><table><thead><tr><th align="left">Type</th><th align="left">Name</th><th align="left">Content</th></tr></thead><tbody><tr><td align="left">A</td><td align="left">你弄到的那个域名，比如mydomain.com</td><td align="left">你的IP(IPv4)</td></tr><tr><td align="left">CNAME</td><td align="left">二级域名，比如blog</td><td align="left">你的主域名，如上面的mydomain.com</td></tr><tr><td align="left">CNAME</td><td align="left">另一个二级域名，如repo</td><td align="left">你的主域名</td></tr><tr><td align="left">CNAME</td><td align="left">其他想要配置的二级域名，如www</td><td align="left">你的主域名</td></tr></tbody></table><p>后面的proxy status显示橙色的云表示已经应用了Cloudflare的CDN，很好，不用管，除非设置的某个子域名是用来直接SSH、FTP服务器的。</p><p>然后，记得在SSL&#x2F;TLS里切换模式到Full（不然在下面的配置中，会让访问在http和https间反复横跳，too many redirections）。<br><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202304141001264.png" alt="记得改SSL/TLS模式设置"></p><h1 id="SSL准备"><a href="#SSL准备" class="headerlink" title="SSL准备"></a>SSL准备</h1><p>在有了一个域名的基础上，可以申请LetsEncrypt的域名证书。<br>可以使用<a href="https://github.com/acmesh-official/acme.sh">acme.sh</a></p><p>安装：<code>curl https://get.acme.sh | sh -s email=my@example.com</code><br>其中后面那个email不要用<a href="mailto:&#109;&#121;&#x40;&#101;&#x78;&#x61;&#x6d;&#x70;&#108;&#x65;&#46;&#x63;&#x6f;&#x6d;">&#109;&#121;&#x40;&#101;&#x78;&#x61;&#x6d;&#x70;&#108;&#x65;&#46;&#x63;&#x6f;&#x6d;</a>，会出错的。</p><p>其他就跟着GitHub的教程来吧，有中文的：<br><a href="https://github.com/acmesh-official/acme.sh/wiki/%E8%AF%B4%E6%98%8E">https://github.com/acmesh-official/acme.sh/wiki/说明</a></p><p>厂家DNS不给力的记得先换了其他厂家的DNS，不然可以这一步申请证书会超时。</p><blockquote><p>PS：也可以直接使用cloudflare的证书，15年</p></blockquote><h1 id="Nginx"><a href="#Nginx" class="headerlink" title="Nginx"></a>Nginx</h1><h2 id="基础的配置"><a href="#基础的配置" class="headerlink" title="基础的配置"></a>基础的配置</h2><p>&#x2F;etc&#x2F;nginx&#x2F;nginx.conf里，http花括号里确保有</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">include /etc/nginx/conf.d/*.conf;</span><br><span class="line">include /etc/nginx/sites-enabled/*.conf;</span><br></pre></td></tr></table></figure><p>这样conf.d和sites-enabled目录下.conf后缀名的文件都会被包含进设置。</p><p>sites-enabled目录下，可以每个站点单写一个.conf文件，方便管理。需要关闭某个站点的时候，直接<code>mv the_site_name.conf ../sites-available</code>把文件移走，然后<code>service nginx restart</code>。要开启某个站点就从sites-available移回来，再重启nginx。</p><h2 id="ssl-snippets"><a href="#ssl-snippets" class="headerlink" title="ssl snippets"></a>ssl snippets</h2><p>如果站点很多的话，给ssl配置部分写一个snippet会方便很多。这样，在每个站点的文件中就可以直接引用snippet，不用一遍一遍的重复证书路径、加密等等的设置了。</p><p>每份域名证书都需要一个对应的snippet，泛域名证书的话，可以多个子域名站点共用同一个snippet。</p><blockquote><p>例，申请了 <code>*.mysite.com</code>的证书，并为它写了ssl snippet<br>a.mysite.com<br>b.mysite.com<br>c.mysite.com<br>都可以共用这个snippet</p></blockquote><p>存放一份据说是安全的设置的模板：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"># /etc/nginx/snippets/ssl.conf</span><br><span class="line"># 就是个提醒自己的路径啦</span><br><span class="line"></span><br><span class="line">server_tokens   off;</span><br><span class="line">ssl_session_cache        shared:SSL:10m;</span><br><span class="line">ssl_session_timeout      60m;</span><br><span class="line">ssl_session_tickets      on;</span><br><span class="line"></span><br><span class="line"># OCSP stapling</span><br><span class="line"># 证书状态缓存</span><br><span class="line">ssl_stapling             on;</span><br><span class="line">ssl_stapling_verify      on;</span><br><span class="line">resolver                 8.8.4.4 8.8.8.8  valid=300s;</span><br><span class="line">resolver_timeout         10s;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ssl_prefer_server_ciphers on;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># Ephemeral Diffie-Hellman key exchange</span><br><span class="line">ssl_dhparam /your_path_to_cert/dhparam.pem;</span><br><span class="line">ssl_ecdh_curve secp384r1; # Requires nginx &gt;= 1.1.0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># path to ssl certificates</span><br><span class="line">ssl_certificate         /your_path_to_cert/fullchain.cer;</span><br><span class="line">ssl_certificate_key     /you_path_to_cert/&lt;domain&gt;.key;</span><br><span class="line"></span><br><span class="line"># disable TLSv1.0 &amp; TLSv1.1</span><br><span class="line"># 禁用安全性不好的 TLS1.0和1.1</span><br><span class="line">ssl_protocols           TLSv1.2 TLSv1.3;</span><br><span class="line"></span><br><span class="line">ssl_ciphers &quot;ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;&quot;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># headers</span><br><span class="line">add_header  Strict-Transport-Security &quot;max-age=31536000;includeSubDomains;preload&quot;;</span><br><span class="line">add_header  X-Frame-Options  sameorigin;</span><br><span class="line">add_header  Referrer-Policy  strict-origin-when-cross-origin;</span><br><span class="line"> </span><br><span class="line">add_header  X-Content-Type-Options  nosniff;</span><br><span class="line">add_header  x-xss-protection &quot;1; mode=block&quot;;</span><br><span class="line"></span><br><span class="line">add_header Content-Security-Policy &quot;default-src &#x27;self&#x27; *.your_domain.com other_sites.com; script-src &#x27;self&#x27; &#x27;unsafe-inline&#x27; &#x27;unsafe-eval&#x27; blob: https:; connect-src &#x27;self&#x27; https:; img-src &#x27;self&#x27; data: https: blob:; style-src &#x27;unsafe-inline&#x27; https:; font-src &#x27;self&#x27; https: data:&quot;;</span><br></pre></td></tr></table></figure><p>其中，your_path_to_cert（放证书、秘钥等的路径）和CSP请自行调整。</p><p>DF参数提高到至少2048位（乐意的话4096位也可以哦）：<br><code>openssl dhparam -out /your_path_to_cert/dhparam.pem 2048</code><br>openssl如果没有就apt-get安装</p><p>CSP（Content-Security-Policy）里加入你信任的、需要用到的网站和加载方式，浏览器会把没包含在内的加载内容全都截下来的（F12看network或者console里面）。如果配置完，从HTTPS访问时网站有部分内容不显示或表现不正常，优先查看是否因为CSP被浏览器拦截。</p><h2 id="站点设置"><a href="#站点设置" class="headerlink" title="站点设置"></a>站点设置</h2><p>站点的模板，每个站点要使用含有对应证书的ssl snippet哦：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">        listen 80;</span><br><span class="line">        listen [::]:80;</span><br><span class="line">        server_name &lt;your_secondary_domain&gt;.&lt;your_domain&gt;.com; # 不是.com的自己改啦</span><br><span class="line">        return 301 https://$server_name$request_uri; # 如果被以http访问了，转https</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">server &#123;</span><br><span class="line">        listen 443 ssl; # 这个ssl很重要，不写的话可能会有奇奇怪怪的悲剧发生。另外这行是ipv4</span><br><span class="line">        listen [::]:443 ssl; # 这行是ipv6</span><br><span class="line">        server_name &lt;your_secondary_domain&gt;.&lt;your_domain&gt;.com; # 同上</span><br><span class="line">        </span><br><span class="line">        include snippets/ssl.conf; # 上文中写好的对应snippet，或者自己的ssl设置</span><br><span class="line">        </span><br><span class="line">        client_max_body_size 20m;</span><br><span class="line">        </span><br><span class="line">        location / &#123;</span><br><span class="line">        proxy_pass http://127.0.0.1:&lt;port_number&gt;/&lt;app_name&gt;; #你要转到哪里</span><br><span class="line">        </span><br><span class="line">        proxy_set_header        Host             $host;</span><br><span class="line">        proxy_set_header        X-Forwarded-For  $proxy_add_x_forwarded_for;</span><br><span class="line">        proxy_http_version      1.1;</span><br><span class="line">        proxy_set_header        Upgrade          $http_upgrade;</span><br><span class="line">        proxy_set_header        Connection       $http_connection;</span><br><span class="line">        proxy_set_header        Origin           http://$host;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="后续步骤"><a href="#后续步骤" class="headerlink" title="后续步骤"></a>后续步骤</h2><p>配置好之后，<code>nginx -t</code>测试配置。测试通过的话<code>sudo service nginx restart</code>重启就可以看到效果了。不过要刷新ssl证书（比如更新过、或者吊销又重新申请了证书等情况）的话需要<code>sudo service nginx force-reload</code>哟。</p>]]></content>
      
      
      <categories>
          
          <category> VPS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vps </tag>
            
            <tag> cloudflare </tag>
            
            <tag> cdn </tag>
            
            <tag> ssl </tag>
            
            <tag> 域名 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Oracle Cloud（甲骨文云）的沙盒，体验其的云服务</title>
      <link href="/posts/22db22cf.html"/>
      <url>/posts/22db22cf.html</url>
      
        <content type="html"><![CDATA[<p>众所周知，甲骨文的服务器对中国大陆实行了严苛的注册制度，从而导致注册大概率失败。如果有人需要体验甲骨文的服务器而苦于注册不成功的话，那该咋办呢？在这期教程中，我来和大家一起使用甲骨文的沙盒，体验甲骨文云的服务。</p><h2 id="准备材料"><a href="#准备材料" class="headerlink" title="准备材料"></a>准备材料</h2><ul><li>Oracle 账户</li></ul><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><ol><li>打开这个网站：<a href="https://apexapps.oracle.com/pls/apex/r/dbpm/livelabs/view-workshop?wid=648">https://apexapps.oracle.com/pls/apex/r/dbpm/livelabs/view-workshop?wid=648</a> ，登录自己的Oracle账户。然后点击“Start”启动沙盒</li></ol><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202304132049408.png" alt="img"></p><ol start="2"><li>点击底下的绿色按钮，启动沙盒</li></ol><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202304132054265.png" alt="img"></p><ol start="3"><li>设置时区，同意协议。然后点击绿色按钮启动沙盒</li></ol><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202304132100047.png" alt="img"></p><ol start="4"><li>等待配置沙盒，大概需要2-5分钟的时间</li></ol><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202304132055085.png" alt="img"></p><ol start="5"><li>待配置完成后，点击“Launch Workshop”</li></ol><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202304132055879.png" alt="img"></p><ol start="6"><li>点击“View Login Info”，然后复制密码，点击“Launch OCI”按钮</li></ol><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202304132055780.png" alt="img"></p><ol start="7"><li>可以正常登录到云控制面板</li></ol><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202304132049132.png" alt="img"></p><ol start="8"><li>如需延长试用时间，可点击“Extend Workshop Reservation”字样续时。最高可以续到10小时</li></ol><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202304132049219.png" alt="img"></p>]]></content>
      
      
      <categories>
          
          <category> VPS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vps </tag>
            
            <tag> 教程 </tag>
            
            <tag> 服务器 </tag>
            
            <tag> cloud </tag>
            
            <tag> oracle </tag>
            
            <tag> 甲骨文 </tag>
            
            <tag> 甲骨文云 </tag>
            
            <tag> 沙盒 </tag>
            
            <tag> 体验 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>香港银行开户指南</title>
      <link href="/posts/c22df0be.html"/>
      <url>/posts/c22df0be.html</url>
      
        <content type="html"><![CDATA[<h2 id="中国银行香港"><a href="#中国银行香港" class="headerlink" title="中国银行香港"></a>中国银行香港</h2><p>难度：★<br>所需资料：港澳通行证、入境小白条、内地身份证<br>理财要求：无<br>存款要求：无<br>预约时间：无需预约<br>推荐路线：香港西九龙高铁站，中港城2楼 分行</p><h2 id="招商永隆"><a href="#招商永隆" class="headerlink" title="招商永隆"></a>招商永隆</h2><p>难度：★★<br>所需资料：港澳通行证、入境小白条、内地身份证、地址证明<br>理财要求：无<br>存款要求：存款10000<br>预约时间：提前在 招商永隆预约<br>地址证明：三个月有效地址证明<br>备注：三个月存款低于1万，每个月有100hkd管理费</p><h2 id="众安ZA-Bank（虚拟银行）"><a href="#众安ZA-Bank（虚拟银行）" class="headerlink" title="众安ZA Bank（虚拟银行）"></a>众安ZA Bank（虚拟银行）</h2><p>难度：无<br>所需资料：港澳通行证、内地身份证<br>理财要求：无<br>存款要求：无<br>预约时间：无<br>备注：人在香港，下载ZA Bank的app直接申请</p><blockquote><p>待更新</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 经验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> 香港 </tag>
            
            <tag> 银行 </tag>
            
            <tag> 开启 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WindowsServer2022激活</title>
      <link href="/posts/e96d05a4.html"/>
      <url>/posts/e96d05a4.html</url>
      
        <content type="html"><![CDATA[<h1 id="Windows-Server-2022-Datacenter"><a href="#Windows-Server-2022-Datacenter" class="headerlink" title="Windows Server 2022 Datacenter"></a>Windows Server 2022 Datacenter</h1><p>slmgr -ipk WX4NM-KYWYW-QJJR4-XV3QB-6VM33<br>slmgr &#x2F;skms kms.03k.org<br>slmgr -ato<br>slmgr -dlv</p><h1 id="Windows-Server-2022-Standard"><a href="#Windows-Server-2022-Standard" class="headerlink" title="Windows Server 2022 Standard"></a>Windows Server 2022 Standard</h1><p>slmgr -ipk VDYBN-27WPP-V4HQT-9VMD4-VMK7H<br>slmgr &#x2F;skms kms.03k.org<br>slmgr -ato<br>slmgr -dlv</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> windows </tag>
            
            <tag> 激活 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>这是一篇示例文章</title>
      <link href="/posts/a6626f42.html"/>
      <url>/posts/a6626f42.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202304130811174.jpeg" alt="main1"></p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202304130810895.jpeg" alt="top_img1"></p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202304130810343.jpeg" alt="General 3000x2092 women camera hands"></p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202304130823798.jpeg" alt="General 3840x2160 Star Trek Star Trek: TOS spaceship vehicle"></p>]]></content>
      
      
      <categories>
          
          <category> VPS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vps </tag>
            
            <tag> 示例 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
