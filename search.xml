<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>启用cloudflare的ssl和二级域名</title>
      <link href="/posts/69e9b14c.html"/>
      <url>/posts/69e9b14c.html</url>
      
        <content type="html"><![CDATA[<h1 id="域名准备"><a href="#域名准备" class="headerlink" title="域名准备"></a>域名准备</h1><p>想要架上二级域名，首先，我们需要一个一级域名……自行在心仪的厂家选购。我比较常用的（价格比较实惠的）是国内的是万网，特价的时候一百多人民币买过十年的。国外的是NameSilo，首年特价很多，.com，.xyz比较实惠，但像.top之类的还是当年万网买得更便宜。（不过拿.top，.cyou之类的便宜域名发邮件比较容易被当成垃圾邮件屏蔽……）</p><p>提醒一下，Freenom的虽然免费，但在那个bug多端的网站申请其实还挺麻烦的，而且实测无法使用LetsEncrypt获取证书（不支持那几个顶级域名）。</p><h1 id="DNS准备"><a href="#DNS准备" class="headerlink" title="DNS准备"></a>DNS准备</h1><p>获得域名后，如果那家的DNS不尽如人意，可以转接其他服务商的DNS，比如Cloudflare。</p><p>在Cloudflare的话，可以这样配置域名：</p><table><thead><tr><th align="left">Type</th><th align="left">Name</th><th align="left">Content</th></tr></thead><tbody><tr><td align="left">A</td><td align="left">你弄到的那个域名，比如mydomain.com</td><td align="left">你的IP(IPv4)</td></tr><tr><td align="left">CNAME</td><td align="left">二级域名，比如blog</td><td align="left">你的主域名，如上面的mydomain.com</td></tr><tr><td align="left">CNAME</td><td align="left">另一个二级域名，如repo</td><td align="left">你的主域名</td></tr><tr><td align="left">CNAME</td><td align="left">其他想要配置的二级域名，如www</td><td align="left">你的主域名</td></tr></tbody></table><p>后面的proxy status显示橙色的云表示已经应用了Cloudflare的CDN，很好，不用管，除非设置的某个子域名是用来直接SSH、FTP服务器的。</p><p>然后，记得在SSL&#x2F;TLS里切换模式到Full（不然在下面的配置中，会让访问在http和https间反复横跳，too many redirections）。<br><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202304141001264.png" alt="记得改SSL/TLS模式设置"></p><h1 id="SSL准备"><a href="#SSL准备" class="headerlink" title="SSL准备"></a>SSL准备</h1><p>在有了一个域名的基础上，可以申请LetsEncrypt的域名证书。<br>可以使用<a href="https://github.com/acmesh-official/acme.sh">acme.sh</a></p><p>安装：<code>curl https://get.acme.sh | sh -s email=my@example.com</code><br>其中后面那个email不要用<a href="mailto:&#109;&#x79;&#64;&#101;&#x78;&#x61;&#109;&#x70;&#x6c;&#x65;&#x2e;&#x63;&#x6f;&#109;">&#109;&#x79;&#64;&#101;&#x78;&#x61;&#109;&#x70;&#x6c;&#x65;&#x2e;&#x63;&#x6f;&#109;</a>，会出错的。</p><p>其他就跟着GitHub的教程来吧，有中文的：<br><a href="https://github.com/acmesh-official/acme.sh/wiki/%E8%AF%B4%E6%98%8E">https://github.com/acmesh-official/acme.sh/wiki/说明</a></p><p>厂家DNS不给力的记得先换了其他厂家的DNS，不然可以这一步申请证书会超时。</p><blockquote><p>PS：也可以直接使用cloudflare的域名，15年</p></blockquote><h1 id="Nginx"><a href="#Nginx" class="headerlink" title="Nginx"></a>Nginx</h1><h2 id="基础的配置"><a href="#基础的配置" class="headerlink" title="基础的配置"></a>基础的配置</h2><p>&#x2F;etc&#x2F;nginx&#x2F;nginx.conf里，http花括号里确保有</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">include /etc/nginx/conf.d/*.conf;</span><br><span class="line">include /etc/nginx/sites-enabled/*.conf;</span><br></pre></td></tr></table></figure><p>这样conf.d和sites-enabled目录下.conf后缀名的文件都会被包含进设置。</p><p>sites-enabled目录下，可以每个站点单写一个.conf文件，方便管理。需要关闭某个站点的时候，直接<code>mv the_site_name.conf ../sites-available</code>把文件移走，然后<code>service nginx restart</code>。要开启某个站点就从sites-available移回来，再重启nginx。</p><h2 id="ssl-snippets"><a href="#ssl-snippets" class="headerlink" title="ssl snippets"></a>ssl snippets</h2><p>如果站点很多的话，给ssl配置部分写一个snippet会方便很多。这样，在每个站点的文件中就可以直接引用snippet，不用一遍一遍的重复证书路径、加密等等的设置了。</p><p>每份域名证书都需要一个对应的snippet，泛域名证书的话，可以多个子域名站点共用同一个snippet。</p><blockquote><p>例，申请了 <code>*.mysite.com</code>的证书，并为它写了ssl snippet<br>a.mysite.com<br>b.mysite.com<br>c.mysite.com<br>都可以共用这个snippet</p></blockquote><p>存放一份据说是安全的设置的模板：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"># /etc/nginx/snippets/ssl.conf</span><br><span class="line"># 就是个提醒自己的路径啦</span><br><span class="line"></span><br><span class="line">server_tokens   off;</span><br><span class="line">ssl_session_cache        shared:SSL:10m;</span><br><span class="line">ssl_session_timeout      60m;</span><br><span class="line">ssl_session_tickets      on;</span><br><span class="line"></span><br><span class="line"># OCSP stapling</span><br><span class="line"># 证书状态缓存</span><br><span class="line">ssl_stapling             on;</span><br><span class="line">ssl_stapling_verify      on;</span><br><span class="line">resolver                 8.8.4.4 8.8.8.8  valid=300s;</span><br><span class="line">resolver_timeout         10s;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ssl_prefer_server_ciphers on;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># Ephemeral Diffie-Hellman key exchange</span><br><span class="line">ssl_dhparam /your_path_to_cert/dhparam.pem;</span><br><span class="line">ssl_ecdh_curve secp384r1; # Requires nginx &gt;= 1.1.0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># path to ssl certificates</span><br><span class="line">ssl_certificate         /your_path_to_cert/fullchain.cer;</span><br><span class="line">ssl_certificate_key     /you_path_to_cert/&lt;domain&gt;.key;</span><br><span class="line"></span><br><span class="line"># disable TLSv1.0 &amp; TLSv1.1</span><br><span class="line"># 禁用安全性不好的 TLS1.0和1.1</span><br><span class="line">ssl_protocols           TLSv1.2 TLSv1.3;</span><br><span class="line"></span><br><span class="line">ssl_ciphers &quot;ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;&quot;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># headers</span><br><span class="line">add_header  Strict-Transport-Security &quot;max-age=31536000;includeSubDomains;preload&quot;;</span><br><span class="line">add_header  X-Frame-Options  sameorigin;</span><br><span class="line">add_header  Referrer-Policy  strict-origin-when-cross-origin;</span><br><span class="line"> </span><br><span class="line">add_header  X-Content-Type-Options  nosniff;</span><br><span class="line">add_header  x-xss-protection &quot;1; mode=block&quot;;</span><br><span class="line"></span><br><span class="line">add_header Content-Security-Policy &quot;default-src &#x27;self&#x27; *.your_domain.com other_sites.com; script-src &#x27;self&#x27; &#x27;unsafe-inline&#x27; &#x27;unsafe-eval&#x27; blob: https:; connect-src &#x27;self&#x27; https:; img-src &#x27;self&#x27; data: https: blob:; style-src &#x27;unsafe-inline&#x27; https:; font-src &#x27;self&#x27; https: data:&quot;;</span><br></pre></td></tr></table></figure><p>其中，your_path_to_cert（放证书、秘钥等的路径）和CSP请自行调整。</p><p>DF参数提高到至少2048位（乐意的话4096位也可以哦）：<br><code>openssl dhparam -out /your_path_to_cert/dhparam.pem 2048</code><br>openssl如果没有就apt-get安装</p><p>CSP（Content-Security-Policy）里加入你信任的、需要用到的网站和加载方式，浏览器会把没包含在内的加载内容全都截下来的（F12看network或者console里面）。如果配置完，从HTTPS访问时网站有部分内容不显示或表现不正常，优先查看是否因为CSP被浏览器拦截。</p><h2 id="站点设置"><a href="#站点设置" class="headerlink" title="站点设置"></a>站点设置</h2><p>站点的模板，每个站点要使用含有对应证书的ssl snippet哦：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">        listen 80;</span><br><span class="line">        listen [::]:80;</span><br><span class="line">        server_name &lt;your_secondary_domain&gt;.&lt;your_domain&gt;.com; # 不是.com的自己改啦</span><br><span class="line">        return 301 https://$server_name$request_uri; # 如果被以http访问了，转https</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">server &#123;</span><br><span class="line">        listen 443 ssl; # 这个ssl很重要，不写的话可能会有奇奇怪怪的悲剧发生。另外这行是ipv4</span><br><span class="line">        listen [::]:443 ssl; # 这行是ipv6</span><br><span class="line">        server_name &lt;your_secondary_domain&gt;.&lt;your_domain&gt;.com; # 同上</span><br><span class="line">        </span><br><span class="line">        include snippets/ssl.conf; # 上文中写好的对应snippet，或者自己的ssl设置</span><br><span class="line">        </span><br><span class="line">        client_max_body_size 20m;</span><br><span class="line">        </span><br><span class="line">        location / &#123;</span><br><span class="line">        proxy_pass http://127.0.0.1:&lt;port_number&gt;/&lt;app_name&gt;; #你要转到哪里</span><br><span class="line">        </span><br><span class="line">        proxy_set_header        Host             $host;</span><br><span class="line">        proxy_set_header        X-Forwarded-For  $proxy_add_x_forwarded_for;</span><br><span class="line">        proxy_http_version      1.1;</span><br><span class="line">        proxy_set_header        Upgrade          $http_upgrade;</span><br><span class="line">        proxy_set_header        Connection       $http_connection;</span><br><span class="line">        proxy_set_header        Origin           http://$host;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="后续步骤"><a href="#后续步骤" class="headerlink" title="后续步骤"></a>后续步骤</h2><p>配置好之后，<code>nginx -t</code>测试配置。测试通过的话<code>sudo service nginx restart</code>重启就可以看到效果了。不过要刷新ssl证书（比如更新过、或者吊销又重新申请了证书等情况）的话需要<code>sudo service nginx force-reload</code>哟。</p>]]></content>
      
      
      <categories>
          
          <category> VPS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cloudflare </tag>
            
            <tag> cdn </tag>
            
            <tag> ssl </tag>
            
            <tag> 域名 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Oracle Cloud（甲骨文云）的沙盒，体验其的云服务</title>
      <link href="/posts/22db22cf.html"/>
      <url>/posts/22db22cf.html</url>
      
        <content type="html"><![CDATA[<p>众所周知，甲骨文的服务器对中国大陆实行了严苛的注册制度，从而导致注册大概率失败。如果有人需要体验甲骨文的服务器而苦于注册不成功的话，那该咋办呢？在这期教程中，我来和大家一起使用甲骨文的沙盒，体验甲骨文云的服务。</p><h2 id="准备材料"><a href="#准备材料" class="headerlink" title="准备材料"></a>准备材料</h2><ul><li>Oracle 账户</li></ul><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><ol><li>打开这个网站：<a href="https://apexapps.oracle.com/pls/apex/r/dbpm/livelabs/view-workshop?wid=648">https://apexapps.oracle.com/pls/apex/r/dbpm/livelabs/view-workshop?wid=648</a> ，登录自己的Oracle账户。然后点击“Start”启动沙盒</li></ol><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202304132049408.png" alt="img"></p><ol start="2"><li>点击底下的绿色按钮，启动沙盒</li></ol><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202304132054265.png" alt="img"></p><ol start="3"><li>设置时区，同意协议。然后点击绿色按钮启动沙盒</li></ol><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202304132100047.png" alt="img"></p><ol start="4"><li>等待配置沙盒，大概需要2-5分钟的时间</li></ol><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202304132055085.png" alt="img"></p><ol start="5"><li>待配置完成后，点击“Launch Workshop”</li></ol><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202304132055879.png" alt="img"></p><ol start="6"><li>点击“View Login Info”，然后复制密码，点击“Launch OCI”按钮</li></ol><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202304132055780.png" alt="img"></p><ol start="7"><li>可以正常登录到云控制面板</li></ol><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202304132049132.png" alt="img"></p><ol start="8"><li>如需延长试用时间，可点击“Extend Workshop Reservation”字样续时。最高可以续到10小时</li></ol><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202304132049219.png" alt="img"></p>]]></content>
      
      
      <categories>
          
          <category> VPS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vps </tag>
            
            <tag> 服务器 </tag>
            
            <tag> 教程 </tag>
            
            <tag> cloud </tag>
            
            <tag> oracle </tag>
            
            <tag> 甲骨文 </tag>
            
            <tag> 甲骨文云 </tag>
            
            <tag> 沙盒 </tag>
            
            <tag> 体验 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WindowsServer2022激活</title>
      <link href="/posts/e96d05a4.html"/>
      <url>/posts/e96d05a4.html</url>
      
        <content type="html"><![CDATA[<h1 id="Windows-Server-2022-Datacenter"><a href="#Windows-Server-2022-Datacenter" class="headerlink" title="Windows Server 2022 Datacenter"></a>Windows Server 2022 Datacenter</h1><p>slmgr -ipk WX4NM-KYWYW-QJJR4-XV3QB-6VM33<br>slmgr &#x2F;skms kms.03k.org<br>slmgr -ato<br>slmgr -dlv</p><h1 id="Windows-Server-2022-Standard"><a href="#Windows-Server-2022-Standard" class="headerlink" title="Windows Server 2022 Standard"></a>Windows Server 2022 Standard</h1><p>slmgr -ipk VDYBN-27WPP-V4HQT-9VMD4-VMK7H<br>slmgr &#x2F;skms kms.03k.org<br>slmgr -ato<br>slmgr -dlv</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> windows </tag>
            
            <tag> 激活 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>这是一篇示例文章</title>
      <link href="/posts/a6626f42.html"/>
      <url>/posts/a6626f42.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202304130811174.jpeg" alt="main1"></p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202304130810895.jpeg" alt="top_img1"></p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202304130810343.jpeg" alt="General 3000x2092 women camera hands"></p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202304130823798.jpeg" alt="General 3840x2160 Star Trek Star Trek: TOS spaceship vehicle"></p>]]></content>
      
      
      <categories>
          
          <category> VPS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vps </tag>
            
            <tag> 示例 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
