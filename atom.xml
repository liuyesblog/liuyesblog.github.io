<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>六爺的博客</title>
  
  <subtitle>小荷才露尖尖角，早有蜻蜓立上頭。</subtitle>
  <link href="https://blog.ssopay.com/atom.xml" rel="self"/>
  
  <link href="https://blog.ssopay.com/"/>
  <updated>2023-06-14T08:15:25.558Z</updated>
  <id>https://blog.ssopay.com/</id>
  
  <author>
    <name>liuyes</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>甲骨文云(Oracle Cloud)升级付费账户</title>
    <link href="https://blog.ssopay.com/posts/dc6473d4.html"/>
    <id>https://blog.ssopay.com/posts/dc6473d4.html</id>
    <published>2023-06-14T08:06:00.000Z</published>
    <updated>2023-06-14T08:15:25.558Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202306141614795.png" alt="img"></p><p>23年2月份甲骨文终于正式公布清理闲置资源，当时博客介绍了官方相关限制。并且提供了一些保活的教程。</p><p>后来不少童鞋反馈，保活脚本运行着呢？服务器还是被停了？？难道保活失败了？？</p><p><strong>其实真实的原因是，在23年4月20日左右，官方叒调整了清理闲置资源的规则了！</strong></p><p><strong>23年1月30日</strong> 空闲计算实例的回收</p><blockquote><p>Idle Always Free计算实例可能会被 Oracle 回收。如果在 7 天内满足以下条件，则 Oracle 会将虚拟机和裸机计算实例视为空闲：</p><ul><li>95%时间CPU利用率低于10%</li><li>网络利用率低于10%</li><li>内存利用率低于 10% （仅适用于A1 形状）（ARM实例）</li></ul></blockquote><p><strong>23年4月20日</strong> 空闲计算实例的回收</p><blockquote><p>Idle Always Free计算实例可能会被 Oracle 回收。如果在 7 天内满足以下条件，则 Oracle 会将虚拟机和裸机计算实例视为空闲：</p><ul><li>95%时间CPU利用率低于15%</li><li>网络利用率低于15%</li><li>内存利用率低于 15% （仅适用于A1 形状）（ARM实例）</li></ul></blockquote><p>想继续愉快的白嫖？把保活脚本占有资源调整的高一点！或者把账户升级一下！</p><p>好嘞，本文就是记录一下升级账户的过程！</p><h2 id="升级目的"><a href="#升级目的" class="headerlink" title="升级目的"></a>升级目的</h2><p>1，更好的使用甲骨文的服务，从19年一直白嫖到现在。甲骨文云已经算非常良心了！</p><p>2，升级后不再会被清理闲置资源！</p><p>3，可以开通其他区域的服务器（比如韩国，日本等等），需要联系客服开通（第一批注册用户可以自己开通）！</p><p>参考文章：<a href="https://51.ruyo.net/14138.html">申请Oracle Cloud永久免费服务+300美元试用额度</a></p><p>4，可以使用甲骨文云的付费服务！</p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>1，邮箱（最好是注册邮箱）</p><p>2，信誉卡一张（我使用招商VISA卡，能支付100多刀的额度）</p><p>3，已注册甲骨文账户</p><h2 id="省流步骤"><a href="#省流步骤" class="headerlink" title="省流步骤"></a>省流步骤</h2><p>1，登陆账户</p><p>2，绑定支付方式（扣100刀验证，会立马返还，保证额度够）</p><p>3，确认升级账户</p><p>4，等官方审核</p><p>5，<strong>封号或者升级成功</strong></p><h2 id="详细步骤"><a href="#详细步骤" class="headerlink" title="详细步骤"></a>详细步骤</h2><h3 id="账号情况说明"><a href="#账号情况说明" class="headerlink" title="账号情况说明"></a>账号情况说明</h3><p>这次升级的账号为 2020年注册的账号！</p><p>注册信息均填写中国信息（国家，地址等）！</p><p>注册时使用的招行VISA卡！</p><p>注册开通的区域是韩国！</p><p>账号已开通了2台始终免费的服务器！</p><h3 id="绑定支付方式"><a href="#绑定支付方式" class="headerlink" title="绑定支付方式"></a>绑定支付方式</h3><p>1，登陆账户，网页头部 点击 【升级】</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202306141610045.jpeg" alt="img"></p><p>2，添加付款方式。填写电子邮箱！</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202306141610657.jpeg" alt="img"></p><p>3，填写信誉卡信息</p><p>支持，万事达 &#x2F; VISA &#x2F; 美国运通卡</p><p><strong>博主亲测，招商VISA双币卡！地址信息，全部都是国内信息（因为我注册的时候就是用的国内信息）</strong></p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202306141610383.jpeg" alt="img"></p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202306141610890.jpeg" alt="img"></p><p>4，绑卡验证信用卡。</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202306141607991.jpeg" alt="img"></p><h3 id="升级付费账户"><a href="#升级付费账户" class="headerlink" title="升级付费账户"></a>升级付费账户</h3><p>1，付款方式绑定成功后！可以勾选升级账户！！</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202306141611495.jpeg" alt="img"></p><p>2，二次确认是否升级！确认升级后。会再次进入审核！审核过程中可能会扣费验证信誉卡（我的卡并未再次验证）。</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202306141611316.jpeg" alt="img"></p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202306141611135.jpeg" alt="img"></p><p>3，大概经过5个小时后。来邮件提示升级成功。登陆查看情况！</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202306141611562.jpeg" alt="img"></p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202306141607065.jpeg" alt="img"></p><h2 id="最后总结"><a href="#最后总结" class="headerlink" title="最后总结"></a>最后总结</h2><p>升级过程比较简单！以上仅为个人情况说明！不一定适合大家所有人！</p><p>不少童鞋因为升级账号导致封号，酌情操作！后果自负！</p><p>升级账号后，一定要注意免费额度使用情况！避免产生费用！</p><p>如果你还不太懂甲骨文云永久免费服务器？建议翻翻博客的历史文章吧！</p><p>升级成功和失败的童鞋可以积极留言！分享经验！避免其他童鞋踩坑！</p><blockquote><p>原文链接：<a href="https://51.ruyo.net/18403.html">https://51.ruyo.net/18403.html</a></p></blockquote>]]></content>
    
    
    <summary type="html">甲骨文云(Oracle Cloud)升级付费账户</summary>
    
    
    
    <category term="教程" scheme="https://blog.ssopay.com/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="cloud" scheme="https://blog.ssopay.com/tags/cloud/"/>
    
    <category term="oracle" scheme="https://blog.ssopay.com/tags/oracle/"/>
    
    <category term="甲骨文" scheme="https://blog.ssopay.com/tags/%E7%94%B2%E9%AA%A8%E6%96%87/"/>
    
    <category term="升级" scheme="https://blog.ssopay.com/tags/%E5%8D%87%E7%BA%A7/"/>
    
    <category term="付费" scheme="https://blog.ssopay.com/tags/%E4%BB%98%E8%B4%B9/"/>
    
  </entry>
  
  <entry>
    <title>教育邮箱认证方式注册Azure详细步骤</title>
    <link href="https://blog.ssopay.com/posts/bec2c9cc.html"/>
    <id>https://blog.ssopay.com/posts/bec2c9cc.html</id>
    <published>2023-06-12T08:10:00.000Z</published>
    <updated>2023-06-13T05:33:56.099Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、介绍"><a href="#一、介绍" class="headerlink" title="一、介绍"></a>一、介绍</h3><p>前面介绍的方法，适用于有全局管理员的edu邮箱：<a href="https://www.nodeseek.com/post-7935-1">https://www.nodeseek.com/post-7935-1</a><br>如果没有全局管理员，注册Azure会提示你没有资格。那么可以通过edu邮箱验证的方式来注册azure，适用于大多数edu邮箱。</p><h3 id="二、需要准备的"><a href="#二、需要准备的" class="headerlink" title="二、需要准备的"></a>二、需要准备的</h3><p>1、Azure注册地址：<a href="https://portal.azure.com/">https://portal.azure.com/</a><br>2、你的edu邮箱<br>3、一个干净的手机号（最好是自用的没撸过az的），一个干净的ip（最好是家宽，不要挂代理）</p><h3 id="三、具体步骤"><a href="#三、具体步骤" class="headerlink" title="三、具体步骤"></a>三、具体步骤</h3><p>1、使用其他邮箱注册Azure账号：<a href="https://portal.azure.com/">https://portal.azure.com/</a><br>我用的outlook邮箱：<a href="mailto:&#x6e;&#x6f;&#x64;&#101;&#115;&#101;&#x65;&#x6b;&#x30;&#x30;&#49;&#64;&#x6f;&#x75;&#116;&#x6c;&#x6f;&#111;&#107;&#46;&#99;&#111;&#109;">&#x6e;&#x6f;&#x64;&#101;&#115;&#101;&#x65;&#x6b;&#x30;&#x30;&#49;&#64;&#x6f;&#x75;&#116;&#x6c;&#x6f;&#111;&#107;&#46;&#99;&#111;&#109;</a><br><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202306121611074.png" alt="img"><br>2、注册完成后，认证教育资格：<a href="https://azure.microsoft.com/zh-cn/free/students/">https://azure.microsoft.com/zh-cn/free/students/</a><br>这里需要手机号码认证，<br><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202306121611885.png" alt="img"><br>认证通过后，填写你的edu邮箱验证，<br><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202306121611491.png" alt="img"><br>此时查看你的邮箱，会受到验证链接，打开链接后确认你的身份<br><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202306121611503.png" alt="img"></p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202306121614182.png" alt="img"><br><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202306121615145.png" alt="img"><br>到这个页面填写个人信息，填写信息尽量真实，可以编一个真实地址，提交注册后等待确认<br><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202306121611819.png" alt="img"><br><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202306121611686.png" alt="img"><br>如果申请成功了会提示：正在重定向…<br><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202306121615915.png" alt="img"><br>ok了<br><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202306121611969.png" alt="img"></p><h3 id="四、创建虚拟机"><a href="#四、创建虚拟机" class="headerlink" title="四、创建虚拟机"></a>四、创建虚拟机</h3><p>Az香港的线路延迟只有40左右，是真的香，这里记录一些知识点。</p><p>AZ100刀是学生账户，使用特定机型是可以免费一年的。</p><p>AZ200刀是普通账户，赠送200刀免费用一个月，升级版200到听说是可以欠费使用，欠费一年，具体不清楚。</p><p>AZ香港可以拿来做中转，中转一些垃圾节点，虽然没有光移牛逼，但是也能上垃圾节点跑起来。</p><p>AZ100刀如果在开虚拟机的时候，订阅加载不出来，导致开机失败，如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202306122045509.png" alt="img"></p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202306122050440.png" alt="img"></p><p>这种问题是使用ip不行，更换ip就好了。</p><p>AZ香港是East Asia</p><p>1、AZ100刀免费只能使用B1s也就是如下所示套餐：B1s(1vcpu,1GiB内存)</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202306122045270.png" alt="img"></p><p>2、AZ100刀如果免费使用只能使用动态ip，不可以固定ip，否则会收费</p><p>动态ip，只要不通过AZ面板重启，基本ip就不会变</p><p>3、AZ默认的30G硬盘是收费的。所以linux需要修改硬盘为：P6-240 64G</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202306122048655.png" alt="img"></p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202306122048162.png" alt="img"></p><p>4、放行端口，后台–网络–入站和出站都添加 端口范围* 优先级100</p><p>5、AZ切换root，ssh进去后执行sudo -i</p>]]></content>
    
    
    <summary type="html">教育邮箱认证方式注册Azure详细步骤</summary>
    
    
    
    <category term="教程" scheme="https://blog.ssopay.com/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="azure" scheme="https://blog.ssopay.com/tags/azure/"/>
    
    <category term="az100" scheme="https://blog.ssopay.com/tags/az100/"/>
    
    <category term="edu" scheme="https://blog.ssopay.com/tags/edu/"/>
    
    <category term="教育" scheme="https://blog.ssopay.com/tags/%E6%95%99%E8%82%B2/"/>
    
    <category term="邮箱" scheme="https://blog.ssopay.com/tags/%E9%82%AE%E7%AE%B1/"/>
    
  </entry>
  
  <entry>
    <title>FRP一键安装脚本</title>
    <link href="https://blog.ssopay.com/posts/c3f5490d.html"/>
    <id>https://blog.ssopay.com/posts/c3f5490d.html</id>
    <published>2023-06-09T06:10:00.000Z</published>
    <updated>2023-06-09T06:20:11.452Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本文分享我自己写的FRP一键安装脚本, 同时支持 FRPS (服务端) 和 FRPC (客户端)</p><h2 id="脚本分享"><a href="#脚本分享" class="headerlink" title="脚本分享"></a>脚本分享</h2><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202306091411196.png" alt="img"></p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202306091411282.webp" alt="img"></p><h3 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash &lt;(curl -fsSL https://raw.githubusercontent.com/Slotheve/Shells/main/frp.sh)</span><br></pre></td></tr></table></figure><blockquote><p>原文链接：<a href="https://www.slotheve.com/frp/">https://www.slotheve.com/frp/</a></p></blockquote>]]></content>
    
    
    <summary type="html">FRP一键安装脚本</summary>
    
    
    
    <category term="教程" scheme="https://blog.ssopay.com/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="脚本" scheme="https://blog.ssopay.com/tags/%E8%84%9A%E6%9C%AC/"/>
    
    <category term="一键" scheme="https://blog.ssopay.com/tags/%E4%B8%80%E9%94%AE/"/>
    
    <category term="frp" scheme="https://blog.ssopay.com/tags/frp/"/>
    
  </entry>
  
  <entry>
    <title>使用CertBot申请证书+自动续期</title>
    <link href="https://blog.ssopay.com/posts/b4fedc42.html"/>
    <id>https://blog.ssopay.com/posts/b4fedc42.html</id>
    <published>2023-06-09T02:51:00.000Z</published>
    <updated>2023-06-09T02:58:24.897Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>毕竟acme.sh是较新的证书申请方式, 但毕竟较新, 兼容性和适配范围不如certbot, 所以本文介绍如何使用certbot申请证书并自动续期</p><h2 id="一键脚本"><a href="#一键脚本" class="headerlink" title="一键脚本"></a>一键脚本</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 一键脚本仅支持CloudFlare</span><br><span class="line">bash &lt;(curl -fsSL https://raw.githubusercontent.com/Slotheve/Shells/main/certbot.sh)</span><br></pre></td></tr></table></figure><h2 id="手动安装"><a href="#手动安装" class="headerlink" title="手动安装"></a>手动安装</h2><ul><li><strong>准备工作</strong></li></ul><p>安装certbot本体</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># APT系  </span><br><span class="line">apt install -y certbot</span><br><span class="line"># YUM系</span><br><span class="line">yum install -y certbot</span><br></pre></td></tr></table></figure><ul><li><strong>安装插件</strong></li></ul><p># cloudflare (软件包自带)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python*-certbot-dns-cloudflare</span><br></pre></td></tr></table></figure><p># dnspod (需先安装pip)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install certbot-dns-dnspod</span><br></pre></td></tr></table></figure><p># aliyun (需先安装pip)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install certbot-dns-aliyun</span><br></pre></td></tr></table></figure><ul><li><strong>创建配置文件并赋予权限</strong></li></ul><p># cloudflare</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">touch /etc/letsencrypt/cloudflare.ini</span><br><span class="line">cat &gt; /etc/letsencrypt/cloudflare.ini &lt;&lt; EOF</span><br><span class="line">dns_cloudflare_email = # 你的cf邮箱</span><br><span class="line">dns_cloudflare_api_key = # 你的cf global api</span><br><span class="line">EOF</span><br><span class="line">chmod 600 /etc/letsencrypt/cloudflare.ini</span><br></pre></td></tr></table></figure><p># dnspod</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">touch /etc/letsencrypt/dnspod.ini</span><br><span class="line">cat &gt; /etc/letsencrypt/dnspod.ini &lt;&lt; EOF</span><br><span class="line">dns_dnspod_email = # 你的dnspod邮箱</span><br><span class="line">dns_dnspod_api_token = # 你的dnspod api token</span><br><span class="line">EOF</span><br><span class="line">chmod 600 /etc/letsencrypt/dnspod.ini</span><br></pre></td></tr></table></figure><p># aliyun</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">touch /etc/letsencrypt/credentials.ini</span><br><span class="line">cat &gt; /etc/letsencrypt/credentials.ini &lt;&lt; EOF</span><br><span class="line">certbot_dns_aliyun:dns_aliyun_access_key = # 你的aliyun密钥</span><br><span class="line">certbot_dns_aliyun:dns_aliyun_access_key_secret = # 你的密钥密码</span><br><span class="line">EOF</span><br><span class="line">chmod 600 /etc/letsencrypt/credentials.ini</span><br></pre></td></tr></table></figure><ul><li><strong>申请证书</strong></li></ul><p># cloudflare</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">certbot certonly --dns-cloudflare \</span><br><span class="line">    --dns-cloudflare-credentials /etc/letsencrypt/cloudflare.ini \</span><br><span class="line">    -d # 你的域名,多个域名使用 &#x27;,&#x27; 分隔</span><br></pre></td></tr></table></figure><p># dnspod</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">certbot certonly -a dns-dnspod \</span><br><span class="line">    --dns-dnspod-credentials /etc/letsencrypt/dnspod.ini \</span><br><span class="line">    -d # 你的域名,多个域名使用 &#x27;,&#x27; 分隔</span><br></pre></td></tr></table></figure><p># aliyun</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">certbot certonly -a certbot-dns-aliyun:dns-aliyun \</span><br><span class="line">    --certbot-dns-aliyun:dns-aliyun-credentials /etc/letsencrypt/credentials.ini \</span><br><span class="line">    -d # 你的域名,多个域名使用 &#x27;,&#x27; 分隔</span><br></pre></td></tr></table></figure><p>第一次申请填写几个参数（邮箱、是否同意条款、是否接收资讯邮件）就行。</p><ul><li><strong>安装证书</strong></li></ul><p>证书申请后保存在 <code>/etc/letsencrypt/live/</code> 域名&#x2F;目录下。</p><ul><li><strong>自动续期</strong></li></ul><p>使用crontab任务计划来实现自动续期</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0 3 */8 * * certbot renew</span><br></pre></td></tr></table></figure><p>保存后重启crond服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart crond/crontab/cron</span><br></pre></td></tr></table></figure><p>每隔8天凌晨3点整执行证书续签指令</p>]]></content>
    
    
    <summary type="html">使用CertBot申请证书+自动续期</summary>
    
    
    
    <category term="教程" scheme="https://blog.ssopay.com/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="脚本" scheme="https://blog.ssopay.com/tags/%E8%84%9A%E6%9C%AC/"/>
    
    <category term="CertBot" scheme="https://blog.ssopay.com/tags/CertBot/"/>
    
    <category term="证书" scheme="https://blog.ssopay.com/tags/%E8%AF%81%E4%B9%A6/"/>
    
    <category term="自动" scheme="https://blog.ssopay.com/tags/%E8%87%AA%E5%8A%A8/"/>
    
    <category term="续期" scheme="https://blog.ssopay.com/tags/%E7%BB%AD%E6%9C%9F/"/>
    
  </entry>
  
  <entry>
    <title>在Alpine上使用Nezha一键脚本</title>
    <link href="https://blog.ssopay.com/posts/7f349c0f.html"/>
    <id>https://blog.ssopay.com/posts/7f349c0f.html</id>
    <published>2023-06-09T02:43:00.000Z</published>
    <updated>2023-06-09T02:58:24.892Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>因为每个人的技术参差不齐, 就算是保姆级的手动安装教程, 有时候也有人搞不懂, 所以<code>官方</code>一键脚本是最适合小白的。</p><h2 id="一、确定Alpine版本"><a href="#一、确定Alpine版本" class="headerlink" title="一、确定Alpine版本"></a>一、确定Alpine版本</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/os-release</span><br></pre></td></tr></table></figure><p>请先升级Alpine到<code>3.17及以上</code> (反正Alpine占用巨低,升级不影响)</p><h2 id="二、安装依赖"><a href="#二、安装依赖" class="headerlink" title="二、安装依赖"></a>二、安装依赖</h2><p>先取消Alpine源文件里的<code>#</code>号 (若有<code>#</code>号)</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202306091045887.png" alt="img"></p><p>安装 <code>bash curl</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apk update &amp;&amp; apk add bash curl</span><br></pre></td></tr></table></figure><h2 id="三、运行一键脚本"><a href="#三、运行一键脚本" class="headerlink" title="三、运行一键脚本"></a>三、运行一键脚本</h2><p>复制脚本</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202306091046614.png" alt="img"></p><p>运行脚本</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202306091046786.png" alt="img"></p><p>提示: 注意脚本命令的<code>sudo</code>, 不是所有系统都带<code>sudo</code>, 自行删除</p><p><strong>OK !</strong> 此时, 你的Alpine探针小鸡已上线了</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202306091046878.png" alt="img"></p>]]></content>
    
    
    <summary type="html">在Alpine上使用Nezha一键脚本</summary>
    
    
    
    <category term="教程" scheme="https://blog.ssopay.com/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="alpine" scheme="https://blog.ssopay.com/tags/alpine/"/>
    
    <category term="脚本" scheme="https://blog.ssopay.com/tags/%E8%84%9A%E6%9C%AC/"/>
    
    <category term="一键" scheme="https://blog.ssopay.com/tags/%E4%B8%80%E9%94%AE/"/>
    
    <category term="nezha" scheme="https://blog.ssopay.com/tags/nezha/"/>
    
    <category term="监控" scheme="https://blog.ssopay.com/tags/%E7%9B%91%E6%8E%A7/"/>
    
  </entry>
  
  <entry>
    <title>alpine系统一键脚本装X-UI面板创建vmess节点套CF一条龙搞定</title>
    <link href="https://blog.ssopay.com/posts/a983f08a.html"/>
    <id>https://blog.ssopay.com/posts/a983f08a.html</id>
    <published>2023-06-06T03:13:00.000Z</published>
    <updated>2023-06-25T07:19:25.280Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="2c4c3f9059ad3a4745b87ef912252eea3c3c5322534be6ccdf2c50e5fb1f55a6">cf0dbd7fcf0d8736ac3453d13feb1c2e342eb5270b6dfdfcbb34ec102e5359f87d59624a10a28eeca4e7e3558773b6d4fc85bf1b391702b8c9edf01ca75844db94018b1eac4471b292eeb9d9994b41f4a7d68390157ec6f68c10f539112d5527407605ec2ab81ca1a036f84c33d12c7b0feb2597b97032faf47a826a16db2fbd98cefd80215afea5858e8a24b019d835f93ad4d5d1750d69abcbc6b67ff468a45ffda7e21fef27e24d92f0f19c3aeeeea536a218aff87b932e6140263e41c6761daf83292e7cac775903c794abe5246215451afe660db6796a8c2f0e3521ef3754393432b8775fccf98677626e9e2baa7943586afdb31bc118adf1e5753ff924712f6c946187c6f1c7a2e469f480c4af33c2cc0f0f866de89f15b9e2a76a3f95e3448649febb2f6b2aa254c37a4f88bb47db36ccc02cc0fe48188415d9a1d0f01ec8c4799cdcae3ebe755e3b17056d347218f1b1045ee7bb9750491738adcd597742f9aa44a1ab3b0a4423cf2b3f20c6a0cf091042920e98d1a0209a3d241a4ff371463b5ca5791567aff84ec7891d7b55c45459397349599579f0ebd3b00c5a42c1149c209e6aea0c5ed75c6192e2e2959b6357580a3b3dcebec6e7004c22befcffe1723e1f3589df1de345f206dc128dd23b5cfee7c90d8542cdfe4be890a4cf0c10dcf5006ac7bb97cfb3d995524cfcbd0e263dd0826748f929c86df87cef338a101647055ed89279749515c20461759cf2a2384d99f0bc9641560c5d535221ea58563112a062ccc5a99dec9cf7e4c112bf762baf2d9f7c7d85d9d2f9c95c406572e40b82f81ef05edc8e6e36359bc73df1a28350b78cb06ece506d8f8a6fdbdf4808ca8ea233933ebd7de798ceb89e5f8a1006ff9e5af0cd3f575d1bf0df4992c3063fe3882c4f546f9aa33f882b06523577b248ddeb1e6ac5dc0ed54ff90289872438e60bf7b0bc3bf1b412cf142c45bd2191f783648d90e17023279cb053e524d86a89d7bbe0bf83697fca34ef0f763a3da3bc45f16854de8e2464dfe70f18857925a8ae3f16800f2c8be9334880d0703d018c9d0d59128872a67f14f00c9237b56a319c259176b99c7e540e5888f43141f19bd010d4ed052c1c62bf33b6a26bf3f9de3ad958c8c6d6a9f74718a22623e7e213b67a7ba50fa7ba8aaf70b90402caf8599c91da5fccd7fe9cb9c4dd4c42a32e5cd850ddc42cb1583430a0e4f3a192c898b35201520d1d9f1e234a913f6045e1f7ac706da3635b4065ed26fa2cee4c73f5c544462545c3b86f3cc6d7911fcf2086d3c57bd1c137c0e1e1b2a68d3424356000369f8a273f4348d55357f6b3383215ceb87a20ecfec0844d39b2a45d8e7acfc9f2f77e754073f6fd1bacf54193e22e657e5f7ef36c9fe03154c73ff1d4e042654ce1dfae57bde3c9d4e474a13c3276787b9237440f6a772e73fb9bd19b6a7d6f128cfa8ed4e1598eaf489280cc80ef022fb442f82072fb68aef32c0bfc26a439f77773b671c80f68c8c8c2c99129a8a0f291840576f3c6efd89e121ebbb29659e8b65aef8e46bb4f774955020754c4112ea40a3d95812d74ce665e45510846d428f602ccf14b3a8c9c12e069352c876c8359afa495b3e62b1c1620dda7d61bd84c3daba98b0cefb116e652cbb2fec22c9ba3248e08a122870e66af0ff952201b1db02303b0f0ca1751c43982901229983b18da1cedfedaec8a4ad44ab6e7123b2323463f8fc44ac4fcef7dbb7bdd96d9ee1f4bfa00c3e9e393faec237df8fdfeeb4e2620c2490eb85da7acde290cd1b10bbfe67b074180a4241d079707a2f17673df8c8ebaab934938d6350dab05b261f34ff50adb097d1655d3e1dd5a0dd8b5a162160953f8b54140e36cfab78e3e5d560f8b1bb838d4b2e9f190cf42343fa18c88217ee1fc27bc88e9d9950afa0217f1e2110d3cee1521eb07e0bb986edc185ecc3676df4dd6e3472d743093e6a726043c36c1d7c8cc14d190abefcb4ecfbacda3832c8cdaa979c1ecda24afd4e7f4af3eb8fa2e2f9de1133c167122a81be112d83463cda0d700ee1e95e9bef09176887d1f826e2fa272a72d83a89e7e10d86f97c5ef6ee83839d7f9ace147d1cffc0ed86cff96b7bbbbde461fc4261c651526d54cf25bf1ebec999c2b9c47670ba24397ca4ba477f5257427b9819ff98fbe883bc9df7d748ed54429b59235a99edb50eed901660884c95b91f68d654cc8e131c1a7c5cdef74d1dff4ad6b22539bd9dc76a9fa455576ea77b09d7e621d4d5ef6b4d4b0c8d91e164875131e9507d3552e731472b482754b9ad0c5708e811199a2d67de32d06a18cbad8850b2d673f727ac909c8fa61358ba6d33ebff234a4b46e330aa859f057dd4d0ea9d19a00cf3871bd321005beb496c2872742a1ed96fd35a21c8c06bd1d1352064a6e3304b6de9a51623e1876a06954f2bf0d21cbcbaeccabdcbdb6a63117e975f104d719761ca8f697e212fd97cbc655639e991732189bc1a1aaa94cee3bd5003058e120c796b506780d912ba4136a2abf76004b48a767abc90e28aeeecaf1538934acbbd7ee281aba520945469c95f19b0bc437d03d4bdeb03a6a6e6c7559b544e22aa5fa2e7c0a90e234c7d3a452aa970dc9ce95409d83e0099dd22cd0eb3eddad2465d7396f44b5eab4fa8ee498084c951280f761cc04eab30c293fafa60616b65ec3da73b7e2da8402a09370b82a6eb4bf4e3c9fd29cd03822b2c7d5e3a6374ba0390b797786759ef3c76c960f1d33ae93442b37456c6db85f6eb66724</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">当前文章暂不对外可见，请输入访问密码后查看！</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">alpine系统一键脚本装X-UI面板创建vmess节点套CF一条龙搞定</summary>
    
    
    
    <category term="教程" scheme="https://blog.ssopay.com/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="cf" scheme="https://blog.ssopay.com/tags/cf/"/>
    
    <category term="alpine" scheme="https://blog.ssopay.com/tags/alpine/"/>
    
    <category term="脚本" scheme="https://blog.ssopay.com/tags/%E8%84%9A%E6%9C%AC/"/>
    
    <category term="private" scheme="https://blog.ssopay.com/tags/private/"/>
    
    <category term="一键" scheme="https://blog.ssopay.com/tags/%E4%B8%80%E9%94%AE/"/>
    
    <category term="x-ui" scheme="https://blog.ssopay.com/tags/x-ui/"/>
    
  </entry>
  
  <entry>
    <title>alpine系统手动安装v2ray服务</title>
    <link href="https://blog.ssopay.com/posts/9794bd71.html"/>
    <id>https://blog.ssopay.com/posts/9794bd71.html</id>
    <published>2023-05-31T03:45:00.000Z</published>
    <updated>2023-06-25T07:19:34.491Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="867bbc93b370d1df3e7110e201147e8c608f161353fa9d83645305c760eb9e08"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">当前文章暂不对外可见，请输入访问密码后查看！</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">alpine系统手动安装v2ray服务</summary>
    
    
    
    <category term="教程" scheme="https://blog.ssopay.com/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="alpine" scheme="https://blog.ssopay.com/tags/alpine/"/>
    
    <category term="v2ray" scheme="https://blog.ssopay.com/tags/v2ray/"/>
    
    <category term="private" scheme="https://blog.ssopay.com/tags/private/"/>
    
    <category term="手动" scheme="https://blog.ssopay.com/tags/%E6%89%8B%E5%8A%A8/"/>
    
  </entry>
  
  <entry>
    <title>Linux网络优化加速一键脚本</title>
    <link href="https://blog.ssopay.com/posts/6d4bb709.html"/>
    <id>https://blog.ssopay.com/posts/6d4bb709.html</id>
    <published>2023-05-31T03:25:00.000Z</published>
    <updated>2023-05-31T03:30:49.558Z</updated>
    
    <content type="html"><![CDATA[<ul><li><h3 id="小白不要使用"><a href="#小白不要使用" class="headerlink" title="小白不要使用"></a>小白不要使用</h3><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305311126017.png" alt="qianyingbbr(1).png"></p><p>Bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget -N --no-check-certificate <span class="string">&quot;https://raw.githubusercontent.com/chiakge/Linux-NetSpeed/master/tcp.sh&quot;</span></span><br><span class="line"><span class="built_in">chmod</span> +x tcp.sh</span><br><span class="line">./tcp.sh</span><br></pre></td></tr></table></figure><h2 id="脚本说明"><a href="#脚本说明" class="headerlink" title="脚本说明"></a>脚本说明</h2><blockquote><p>支持系统<br>Centos 6+ &#x2F; Debian 7+ &#x2F; Ubuntu 14+<br>BBR魔改版不支持Debian 8</p></blockquote><p>如果在删除内核环节出现这样一张图<br><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305311126202.png" alt="3363374172.png"><br><strong>注意选择NO</strong></p><p>根据自己需求操作，重启后再使用<code>./tcp.sh</code>命令接着操作</p><p>脚本会自动检测安装的情况，请注意脚本菜单下的<strong>状态检测</strong>即可。</p></li></ul><blockquote><p>原文链接：<a href="https://xd0.me/?id=10">https://xd0.me/?id=10</a></p></blockquote>]]></content>
    
    
    <summary type="html">Linux网络优化加速一键脚本</summary>
    
    
    
    <category term="教程" scheme="https://blog.ssopay.com/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="脚本" scheme="https://blog.ssopay.com/tags/%E8%84%9A%E6%9C%AC/"/>
    
    <category term="linux" scheme="https://blog.ssopay.com/tags/linux/"/>
    
    <category term="网络" scheme="https://blog.ssopay.com/tags/%E7%BD%91%E7%BB%9C/"/>
    
    <category term="优化" scheme="https://blog.ssopay.com/tags/%E4%BC%98%E5%8C%96/"/>
    
    <category term="加速" scheme="https://blog.ssopay.com/tags/%E5%8A%A0%E9%80%9F/"/>
    
    <category term="一键" scheme="https://blog.ssopay.com/tags/%E4%B8%80%E9%94%AE/"/>
    
  </entry>
  
  <entry>
    <title>lxc母鸡批量开小鸡</title>
    <link href="https://blog.ssopay.com/posts/85890b5e.html"/>
    <id>https://blog.ssopay.com/posts/85890b5e.html</id>
    <published>2023-05-31T02:59:00.000Z</published>
    <updated>2023-05-31T03:17:26.595Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>如果脚本有任何问题或者任何修复系统的需求，可在issues中提出，有空会解决或者回答</p><h1 id="lxc-一键母鸡开小鸡"><a href="#lxc-一键母鸡开小鸡" class="headerlink" title="lxc 一键母鸡开小鸡"></a>lxc 一键母鸡开小鸡</h1><p>更新：</p><p>2023.05.28 修复部分宿主机原生的DNS和IPV4网络优先级的问题</p><p><a href="CHANGELOG.md">更新日志</a></p><h2 id="待解决的问题"><a href="#待解决的问题" class="headerlink" title="待解决的问题"></a>待解决的问题</h2><p>使得母鸡支持更多的系统版本，使小鸡支持更多的系统版本</p><h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><ul><li><a href="#%E9%85%8D%E7%BD%AE%E8%A6%81%E6%B1%82">配置要求</a><ul><li><a href="#%E8%84%9A%E6%9C%AC%E6%A3%80%E6%B5%8B">脚本检测</a></li></ul></li><li><a href="#%E6%89%8B%E5%8A%A8%E5%AE%89%E8%A3%85">手动安装</a><ul><li><a href="#%E6%99%AE%E9%80%9A%E7%89%88%E6%9C%AC">普通版本</a><ul><li><a href="#%E5%85%B3%E9%97%AD%E9%98%B2%E7%81%AB%E5%A2%99">关闭防火墙</a></li><li><a href="#%E5%BC%80%E8%AE%BE%E8%99%9A%E6%8B%9F%E5%86%85%E5%AD%98SWAP">开设虚拟内存SWAP</a></li><li><a href="#%E5%AE%89%E8%A3%85LXD">安装LXD</a></li><li><a href="#%E5%A4%9A%E6%AC%A1%E6%89%B9%E9%87%8F%E7%94%9F%E6%88%90LXC%E8%99%9A%E6%8B%9F%E5%8C%96%E7%9A%84%E5%B0%8F%E9%B8%A1">多次批量生成LXC虚拟化的小鸡</a></li></ul></li><li><a href="#%E7%BA%AF%E6%8E%A2%E9%92%88%E7%89%88%E6%9C%AC">纯探针版本</a></li><li><a href="#%E6%9F%A5%E7%9C%8Blog%E6%96%87%E4%BB%B6">查看log文件</a></li><li><a href="#%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9">注意事项</a></li></ul></li><li><a href="#%E4%B8%80%E9%94%AE%E8%84%9A%E6%9C%AC%E8%80%81%E6%89%8B%E6%8E%A8%E8%8D%90%E6%96%B9%E4%BE%BF%E5%BF%AB%E6%8D%B7">一键脚本老手推荐方便快捷</a><ul><li><a href="#%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85lxd%E7%8E%AF%E5%A2%83">一键安装lxd环境</a></li><li><a href="#%E5%8F%AA%E5%BC%80%E4%B8%80%E4%B8%AANAT%E6%9C%8D%E5%8A%A1%E5%99%A8">只开一个NAT服务器</a></li><li><a href="#%E5%85%B6%E4%BB%96%E9%85%8D%E7%BD%AE">其他配置</a></li></ul></li><li><a href="#%E8%87%B4%E8%B0%A2">致谢</a></li><li><a href="#%E5%8F%8B%E9%93%BE">友链</a></li></ul><h2 id="配置要求"><a href="#配置要求" class="headerlink" title="配置要求"></a>配置要求</h2><p>硬件要求:</p><ul><li>系统：Debian 8+, Ubuntu 18+(推荐)，系统越新越好</li><li>架构：推荐KVM、VMWARE虚拟化</li><li>内存：内存至少512MB</li><li>硬盘：硬盘(系统盘)至少10G</li><li>网络：独立的IPV4地址，IPV6可有可无，带宽能下载脚本就行，网络能连接Github的raw页面就行</li></ul><p>PS: 如果硬件非常好资源很多，可使用PVE批量开KVM虚拟化的虚拟机 <a href="https://github.com/spiritLHLS/pve">跳转</a></p><p>PS: 如果硬件资源更烂，虚拟化不支持，可使用docker版本的，适配面更广 <a href="https://github.com/spiritLHLS/docker">跳转</a></p><h3 id="脚本检测"><a href="#脚本检测" class="headerlink" title="脚本检测"></a>脚本检测</h3><p><strong>使用后续脚本的务必执行本命令检测母鸡是否符合要求</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash &lt;(wget -qO- --no-check-certificate https://raw.githubusercontent.com/spiritLHLS/lxc/main/scripts/pre_check.sh)</span><br></pre></td></tr></table></figure><h4 id="项目特点"><a href="#项目特点" class="headerlink" title="项目特点"></a>项目特点</h4><ul><li><p>本套脚本开发使用的Ubuntu20，Ubuntu别的长期维护版本应该也没问题，Debian无法使用zfs时自动切换别的存储类型</p></li><li><p>已设置同时进行TCP和UDP转发，除了SSH端口其他的映射内网外网端口一致</p></li><li><p>已设置支持开出的LXC容器进行docker嵌套虚拟，默认普通版本和纯探针版本使用debian11系统</p></li><li><p>已屏蔽容器内可能用于滥用的工具包和IPV4网络的TCP&#x2F;UDP协议的端口( 3389 8888 54321 65432 )，以防止容器被用于扫描和爆破，且可外置进程检查有问题自动停机</p></li><li><p>已支持一键为LXC容器配置IPV6地址(前提是母鸡有IPV6子网，无IPV6地址则不配置)</p></li><li><p>一定要在 <code>/root</code> 的路径下运行本仓库脚本，且使用<code>一键脚本</code>的<strong>不要删除</strong>路径下的<code>ssh.sh</code>和<code>config.sh</code>文件</p></li><li><p>保证你要开的盘为默认的系统盘(sda或者sda1)而不是挂载的盘(sdb之类的)，不确定的使用<code>fdisk -l</code>和<code>df</code>查看</p></li><li><p>挂载其他盘的详看 <a href="https://github.com/spiritLHLS/lxc/blob/main/README_other.md">其他说明</a></p></li><li><p>一键脚本支持自定义限制所有内容，普通版本支持多次运行批量生成不覆盖先前生成的配置</p></li></ul><h2 id="手动安装"><a href="#手动安装" class="headerlink" title="手动安装"></a>手动安装</h2><p>新手推荐，避免有bug不知道怎么修</p><ul><li>批量生成NAT服务器</li><li>支持批量重复生成(多次批量开NAT服务器，且不覆盖原配置)</li><li>批量重复生成仅限于普通版本的配置，不支持纯探针版本</li></ul><h3 id="普通版本"><a href="#普通版本" class="headerlink" title="普通版本"></a>普通版本</h3><p>(带1个SSH端口，25个外网端口)</p><p>开出的小鸡配置：1核256MB内存1GB硬盘限速250Mbps带宽</p><h4 id="关闭防火墙"><a href="#关闭防火墙" class="headerlink" title="关闭防火墙"></a>关闭防火墙</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">apt update</span><br><span class="line">apt install curl wget sudo dos2unix ufw -y</span><br><span class="line">ufw <span class="built_in">disable</span></span><br></pre></td></tr></table></figure><h4 id="开设虚拟内存SWAP"><a href="#开设虚拟内存SWAP" class="headerlink" title="开设虚拟内存SWAP"></a>开设虚拟内存SWAP</h4><p>内存看你开多少小鸡，这里如果要开8个，换算需要2G内存，实际内存如果是512MB内存，还需要开1.5G，保守点开2G虚拟内存即可</p><p>执行下面命令，输入1，再输入2048，代表开2G虚拟内存</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -L https://raw.githubusercontent.com/spiritLHLS/lxc/main/scripts/swap.sh -o swap.sh &amp;&amp; chmod +x swap.sh &amp;&amp; bash swap.sh</span><br></pre></td></tr></table></figure><h4 id="安装LXD"><a href="#安装LXD" class="headerlink" title="安装LXD"></a>安装LXD</h4><p>实际swap开的虚拟内存应该是实际内存的2倍，也就是开1G是合理的，上面我描述的情况属于超开了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">apt install snapd -y</span><br><span class="line">snap install lxd</span><br><span class="line">/snap/bin/lxd init</span><br></pre></td></tr></table></figure><p>如果上面的命令中出现下面的错误</p><p>(snap “lxd” assumes unsupported features: snapd2.39 (try to update snapd and refresh the core snap))</p><p>使用命令修补后再进行lxd的安装</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">snap install core</span><br></pre></td></tr></table></figure><p>如果无异常，上面三行命令执行结果如下</p><p><img src="https://user-images.githubusercontent.com/103393591/233270028-5a43d0f7-45f5-4175-969e-d4d182cb877a.png" alt="图片"></p><p>一般的选项回车默认即可</p><p>选择配置物理盘大小(提示默认最小1GB那个选项)，一般我填空闲磁盘大小减去内存大小后乘以0.95并向下取整，这里我填了10GB</p><p>提示带auto的更新image的选项记得选no，避免更新占用系统</p><p>测试lxc有没有软连接上</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lxc -h</span><br></pre></td></tr></table></figure><p>如果报错则执行以下命令软连接lxc命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">! lxc -h &gt;/dev/null 2&gt;&amp;1 &amp;&amp; <span class="built_in">echo</span> <span class="string">&#x27;alias lxc=&quot;/snap/bin/lxc&quot;&#x27;</span> &gt;&gt; /root/.bashrc &amp;&amp; <span class="built_in">source</span> /root/.bashrc</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:/snap/bin</span><br></pre></td></tr></table></figure><p>连接后再测试lxc命令是否有报错找不到</p><h4 id="手动批量生成LXC虚拟化的小鸡"><a href="#手动批量生成LXC虚拟化的小鸡" class="headerlink" title="手动批量生成LXC虚拟化的小鸡"></a>手动批量生成LXC虚拟化的小鸡</h4><p>(默认内存和硬盘大小)</p><p>lxc若命令无问题，执行初始化开小鸡，这一步最好放<code>screen</code>中后台挂起执行，开小鸡时长与你开几个和母鸡配置相关</p><p>执行下面命令加载开机脚本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">rm -rf init.sh</span><br><span class="line">wget https://github.com/spiritLHLS/lxc/raw/main/scripts/init.sh</span><br><span class="line">chmod 777 init.sh</span><br><span class="line">apt install dos2unix -y</span><br><span class="line">dos2unix init.sh</span><br></pre></td></tr></table></figure><p>下面命令为开小鸡名字前缀为<strong>tj</strong>的<strong>10</strong>个小鸡</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./init.sh tj 10</span><br></pre></td></tr></table></figure><p>有时候init.sh的运行路径有问题，此时建议前面加上sudo强制根目录执行</p><h4 id="多次批量生成LXC虚拟化的小鸡"><a href="#多次批量生成LXC虚拟化的小鸡" class="headerlink" title="多次批量生成LXC虚拟化的小鸡"></a>多次批量生成LXC虚拟化的小鸡</h4><p>可自定义内存和硬盘大小</p><p>有执行过上面的手动批量生成过也没问题，配置是继承的不覆盖</p><p>如果需要多次批量生成小鸡，可使用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -L https://github.com/spiritLHLS/lxc/raw/main/scripts/add_more.sh -o add_more.sh &amp;&amp; chmod +x add_more.sh &amp;&amp; bash add_more.sh</span><br></pre></td></tr></table></figure><p>可多次运行批量生成小鸡，且继承前面已生成的部分在后面添加，可自定义内存和硬盘大小</p><h3 id="纯探针版本"><a href="#纯探针版本" class="headerlink" title="纯探针版本"></a>纯探针版本</h3><p>(只有一个SSH端口)</p><p>开出的小鸡配置：1核128MB内存300MB硬盘限速200Mbps带宽</p><p>关闭防火墙</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">apt update</span><br><span class="line">apt install curl wget sudo dos2unix ufw -y</span><br><span class="line">ufw <span class="built_in">disable</span></span><br></pre></td></tr></table></figure><p>开设虚拟内存</p><p>内存看你开多少小鸡，这里如果要开10个，换算需要1G内存，实际内存如果是512MB内存，还需要开0.5G，保守点开1G虚拟内存即可</p><p>执行下面命令，输入1，再输入1024，代表开1G虚拟内存</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -L https://raw.githubusercontent.com/spiritLHLS/lxc/main/scripts/swap.sh -o swap.sh &amp;&amp; <span class="built_in">chmod</span> +x swap.sh &amp;&amp; bash swap.sh</span><br></pre></td></tr></table></figure><p>实际swap开的虚拟内存应该是实际内存的2倍，也就是开1G是合理的，再多就超开了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">apt install snapd -y</span><br><span class="line">snap install lxd</span><br><span class="line">/snap/bin/lxd init</span><br></pre></td></tr></table></figure><p>如果上面的命令中出现下面的错误</p><p>(snap “lxd” assumes unsupported features: snapd2.39 (try to update snapd and refresh the core snap))</p><p>使用命令修补后再进行lxd的安装</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">snap install core</span><br></pre></td></tr></table></figure><p>如果无异常，上面三行命令执行结果如下</p><p><img src="https://user-images.githubusercontent.com/103393591/233270028-5a43d0f7-45f5-4175-969e-d4d182cb877a.png" alt="图片"></p><p>一般的选项回车默认即可</p><p>选择配置物理盘大小(提示默认最小1GB那行)，一般我填空闲磁盘大小减去内存大小后乘以0.95并向下取整</p><p>提示带auto的更新image的选项记得选no，避免更新占用</p><p>软连接lxc命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">! lxc -h &gt;/dev/null 2&gt;&amp;1 &amp;&amp; <span class="built_in">echo</span> <span class="string">&#x27;alias lxc=&quot;/snap/bin/lxc&quot;&#x27;</span> &gt;&gt; /root/.bashrc &amp;&amp; <span class="built_in">source</span> /root/.bashrc</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:/snap/bin</span><br></pre></td></tr></table></figure><p>测试lxc有没有软连接上</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lxc -h</span><br></pre></td></tr></table></figure><p>lxc命令无问题，执行初始化开小鸡，这一步最好放screen中后台挂起执行，开小鸡时长与你开几个和母鸡配置相关</p><p>加载开机脚本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">rm -rf least.sh</span><br><span class="line">wget https://github.com/spiritLHLS/lxc/raw/main/scripts/least.sh</span><br><span class="line">chmod 777 least.sh</span><br><span class="line">apt install dos2unix -y</span><br><span class="line">dos2unix least.sh</span><br></pre></td></tr></table></figure><p>下列命令最后一行为开小鸡名字前缀为<strong>tj</strong>的<strong>10</strong>个小鸡</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./least.sh tj 10</span><br></pre></td></tr></table></figure><p>有时候least.sh的运行路径有问题，此时建议前面加上sudo强制根目录执行</p><h3 id="查看log文件"><a href="#查看log文件" class="headerlink" title="查看log文件"></a>查看log文件</h3><h4 id="开完小鸡后，具体信息会生成在当前目录下的log文件中，格式如下"><a href="#开完小鸡后，具体信息会生成在当前目录下的log文件中，格式如下" class="headerlink" title="开完小鸡后，具体信息会生成在当前目录下的log文件中，格式如下"></a>开完小鸡后，具体信息会生成在当前目录下的log文件中，格式如下</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1号服务器名称 密码 ssh端口 外网端口起始 外网端口终止</span><br><span class="line">2号服务器名称 密码 ssh端口 外网端口起始 外网端口终止</span><br></pre></td></tr></table></figure><p>如果想要查看，只需在当前目录执行以下命令打印log文件即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> <span class="built_in">log</span></span><br></pre></td></tr></table></figure><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><h4 id="不要拿该脚本开出的小鸡当生产环境，lxc虚拟化不支持换内核，dd，开启bbr，纯探针版本-普通版本无问题-挂载warp等操作"><a href="#不要拿该脚本开出的小鸡当生产环境，lxc虚拟化不支持换内核，dd，开启bbr，纯探针版本-普通版本无问题-挂载warp等操作" class="headerlink" title="不要拿该脚本开出的小鸡当生产环境，lxc虚拟化不支持换内核，dd，开启bbr，纯探针版本(普通版本无问题)挂载warp等操作"></a>不要拿该脚本开出的小鸡当生产环境，lxc虚拟化不支持换内核，dd，开启bbr，<strong>纯探针版本</strong>(普通版本无问题)挂载warp等操作</h4><p>本仓库不提供lxc虚拟化使用的其他问题的解答，非脚本相关问题请自行解决</p><p>虚拟小鸡想要查看是否在线</p><p>查看所有</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lxc list</span><br></pre></td></tr></table></figure><p>查看个例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lxc info 服务器名字</span><br></pre></td></tr></table></figure><p>启动个例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lxc start 服务器名字</span><br></pre></td></tr></table></figure><p>停止个例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lxc stop 服务器名字</span><br></pre></td></tr></table></figure><p>删除个例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lxc delete -f 服务器名字</span><br></pre></td></tr></table></figure><p>进入内部</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lxc <span class="built_in">exec</span> 服务器名字 /bin/bash</span><br></pre></td></tr></table></figure><p>退出则输入<code>exit</code>回车即可</p><p>删除所有LXC容器</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lxc list | awk &#x27;&#123;print $2&#125;&#x27; | grep -v &quot;^$&quot; | xargs -I &#123;&#125; lxc delete -f &#123;&#125;</span><br></pre></td></tr></table></figure><p>在容器内执行删除无用日志</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get autoremove</span><br><span class="line">sudo apt-get clean</span><br><span class="line">sudo find /var/log -type f -delete</span><br><span class="line">sudo find /var/tmp -type f -delete</span><br><span class="line">sudo find /tmp -type f -delete</span><br><span class="line">sudo find /var/cache/apt/archives -type f -delete</span><br></pre></td></tr></table></figure><h2 id="一键脚本老手推荐方便快捷"><a href="#一键脚本老手推荐方便快捷" class="headerlink" title="一键脚本老手推荐方便快捷"></a>一键脚本老手推荐方便快捷</h2><ul><li>环境要求：Ubuntu 18+(推荐)，Debian 8+(仅限x86_64架构)</li><li>只生成一个NAT服务器，可自定义限制所有内容</li></ul><h4 id="一键安装lxd环境"><a href="#一键安装lxd环境" class="headerlink" title="一键安装lxd环境"></a>一键安装lxd环境</h4><h5 id="初始化LXC环境"><a href="#初始化LXC环境" class="headerlink" title="初始化LXC环境"></a>初始化LXC环境</h5><p><strong>如果是全新的服务器，务必保证apt update和apt install curl都无问题再执行本脚本</strong></p><p><strong>且自开机起最好等待5分钟后再执行以下命令，避免系统默认设置中就执行了本脚本导致apt源卡死</strong></p><p>这里的虚拟内存是说要开的SWAP大小，存储池则是你所有要开的小鸡占的盘的大小的总和</p><p><strong>如果是Debian系统的母鸡，务必在screen中执行本脚本，避免长期运行时SSH中断导致ZFS编译安装失败</strong></p><p>环境安装过程中可能需要重启服务器再次执行以加载含zfs的内核</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -L https://raw.githubusercontent.com/spiritLHLS/lxc/main/scripts/lxdinstall.sh -o lxdinstall.sh &amp;&amp; <span class="built_in">chmod</span> +x lxdinstall.sh &amp;&amp; bash lxdinstall.sh</span><br></pre></td></tr></table></figure><p>例子：</p><p>如果系统盘除去已占用空间还有18G硬盘空余，想开2G虚拟内存(2048MB的SWAP)，15G的存储池，则依次输入<code>2048</code>和<code>15</code></p><h4 id="只开一个NAT服务器"><a href="#只开一个NAT服务器" class="headerlink" title="只开一个NAT服务器"></a>只开一个NAT服务器</h4><h5 id="下载开机脚本"><a href="#下载开机脚本" class="headerlink" title="下载开机脚本"></a>下载开机脚本</h5><ul><li>(<em><strong>非必须</strong></em>，如果你使用过一键安装LXD的命令，自动已下载对应的开机脚本，请忽略下面的命令)</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">rm -rf buildone.sh</span><br><span class="line">wget https://raw.githubusercontent.com/spiritLHLS/lxc/main/scripts/buildone.sh</span><br><span class="line">chmod 777 buildone.sh</span><br><span class="line">apt install dos2unix -y</span><br><span class="line">dos2unix buildone.sh</span><br></pre></td></tr></table></figure><h5 id="开NAT服务器"><a href="#开NAT服务器" class="headerlink" title="开NAT服务器"></a>开NAT服务器</h5><p>内存大小以MB计算，硬盘大小以GB计算，下载速度上传速度以Mbit计算，是否启用IPV6不一定要填Y或者N，没有这个参数也行</p><p>如果<code>外网起端口</code>和<code>外网止端口</code>都设置为0则不做区间外网端口映射了，只映射基础的SSH端口，注意<code>不能为空</code>，不进行映射需要设置为0</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./buildone.sh 小鸡名称 内存大小 硬盘大小 SSH端口 外网起端口 外网止端口 下载速度 上传速度 是否启用IPV6(Y or N)</span><br></pre></td></tr></table></figure><p>示例</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./buildone.sh test 256 2 20001 20002 20025 300 300 N</span><br></pre></td></tr></table></figure><p>这样就是创建一个名为test的小鸡，内存256MB，硬盘2G，SSH端口20001，内外网起止端口20002~20025，下载和上传速度都设置为300Mbit，且不自动设置外网IPV6地址</p><p>如果已通过以上方法生成过小鸡，还需要批量生成小鸡，可使用手动安装部分的脚本</p><p>但注意先删除测试小鸡再进行批量生成小鸡</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">lxc delete -f test</span><br><span class="line">rm -rf test</span><br><span class="line">ls</span><br></pre></td></tr></table></figure><p>需要查看信息则执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat 小鸡名字</span><br></pre></td></tr></table></figure><h3 id="其他配置"><a href="#其他配置" class="headerlink" title="其他配置"></a>其他配置</h3><ul><li><strong>以下的配置安装会加重母鸡的负担，非必要不要安装</strong></li></ul><h5 id="自动配置IPV6地址"><a href="#自动配置IPV6地址" class="headerlink" title="自动配置IPV6地址"></a>自动配置IPV6地址</h5><ul><li>(<em><strong>非必须</strong></em>，不使用的也没问题)</li><li><strong>该脚本仅适用于母鸡有给<code>IPV6</code>子网且是<code>/64</code>的，且母鸡绑定了子网的<code>第一个IP</code>做<code>母鸡的IPV6地址或IPV6的gateway</code></strong></li><li>自动为LXD创建的LXC容器配置<code>IPV6</code>地址</li><li>已集成到<code>buildone.sh</code>中可使用变量控制且无需事先下载，该脚本可不手动使用，在使用<code>buildone.sh</code>时配置Y开启即可</li></ul><p>下载脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -L https://raw.githubusercontent.com/spiritLHLS/lxc/main/scripts/build_ipv6_network.sh -o build_ipv6_network.sh &amp;&amp; <span class="built_in">chmod</span> +x build_ipv6_network.sh</span><br></pre></td></tr></table></figure><p>自动为容器配置IPV6映射地址</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash build_ipv6_network.sh 容器名称</span><br></pre></td></tr></table></figure><p>映射完毕会打印信息</p><p>示例(给test容器自动配置IPV6地址，配置完成会写入一个test_v6的文件信息)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash build_ipv6_network.sh <span class="built_in">test</span></span><br></pre></td></tr></table></figure><p>删除所有IPV6已映射的规则</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip6tables -t nat -F PREROUTING</span><br></pre></td></tr></table></figure><h5 id="屏蔽容易被滥用的端口的出入流量以屏蔽端口和屏蔽滥用工具包"><a href="#屏蔽容易被滥用的端口的出入流量以屏蔽端口和屏蔽滥用工具包" class="headerlink" title="屏蔽容易被滥用的端口的出入流量以屏蔽端口和屏蔽滥用工具包"></a>屏蔽容易被滥用的端口的出入流量以屏蔽端口和屏蔽滥用工具包</h5><ul><li>(<em><strong>非必须</strong></em>，该脚本仅仅是为了防止容器滥用方便，不装的也没问题)</li><li>事前预防</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -L https://github.com/spiritLHLS/lxc/raw/main/scripts/rules.sh -o rules.sh &amp;&amp; chmod +x rules.sh &amp;&amp; bash rules.sh</span><br></pre></td></tr></table></figure><h5 id="使用screen配置监控屏蔽某些进程的执行，遇到某些进程的出现直接关闭容器"><a href="#使用screen配置监控屏蔽某些进程的执行，遇到某些进程的出现直接关闭容器" class="headerlink" title="使用screen配置监控屏蔽某些进程的执行，遇到某些进程的出现直接关闭容器"></a>使用screen配置监控屏蔽某些进程的执行，遇到某些进程的出现直接关闭容器</h5><ul><li>如需停止监控可使用<code>screen</code>命令停止<code>lxc_moniter</code>这个名字的窗口并删除</li><li>(<em><strong>非必须</strong></em>，该脚本仅仅是为了防止容器滥用方便，不装的也没问题)</li><li>事后停机</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -L https://github.com/spiritLHLS/lxc/raw/main/scripts/build_monitor.sh -o build_monitor.sh &amp;&amp; chmod +x build_monitor.sh &amp;&amp; bash build_monitor.sh</span><br></pre></td></tr></table></figure><h5 id="一键安装开lxd母鸡所需要的带vnstat环境的常用预配置环境"><a href="#一键安装开lxd母鸡所需要的带vnstat环境的常用预配置环境" class="headerlink" title="一键安装开lxd母鸡所需要的带vnstat环境的常用预配置环境"></a>一键安装开lxd母鸡所需要的带vnstat环境的常用预配置环境</h5><ul><li>(<em><strong>非必须</strong></em>，该脚本仅仅是为了站点对接监控方便，不装的也没问题)</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -L https://raw.githubusercontent.com/spiritLHLS/lxc/main/scripts/backend.sh -o backend.sh &amp;&amp; chmod +x backend.sh &amp;&amp; bash backend.sh</span><br></pre></td></tr></table></figure><h5 id="一键安装母鸡可视化操作的面板"><a href="#一键安装母鸡可视化操作的面板" class="headerlink" title="一键安装母鸡可视化操作的面板"></a>一键安装母鸡可视化操作的面板</h5><ul><li>(<em><strong>非必须</strong></em>，该面板只是为了方便可视化操作，没有也没问题)</li><li>原作者仓库：<a href="https://github.com/turtle0x1/LxdMosaic">跳转</a></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">lxc config set core.https_address [::]</span><br><span class="line">lxc config set core.trust_password some-secret-string</span><br><span class="line">snap install lxdmosaic</span><br></pre></td></tr></table></figure><p>安装完毕后打开母鸡IP地址，按照提示设置admin的密码，其他一路默认就能使用面板了</p><p><strong>原作者项目地址：<a href="https://github.com/spiritLHLS/lxc">点击跳转</a></strong></p>]]></content>
    
    
    <summary type="html">lxc母鸡批量开小鸡</summary>
    
    
    
    <category term="教程" scheme="https://blog.ssopay.com/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="lxc" scheme="https://blog.ssopay.com/tags/lxc/"/>
    
    <category term="脚本" scheme="https://blog.ssopay.com/tags/%E8%84%9A%E6%9C%AC/"/>
    
    <category term="nat" scheme="https://blog.ssopay.com/tags/nat/"/>
    
    <category term="小鸡" scheme="https://blog.ssopay.com/tags/%E5%B0%8F%E9%B8%A1/"/>
    
  </entry>
  
  <entry>
    <title>一键梭哈脚本</title>
    <link href="https://blog.ssopay.com/posts/88eb9716.html"/>
    <id>https://blog.ssopay.com/posts/88eb9716.html</id>
    <published>2023-05-31T02:55:00.000Z</published>
    <updated>2023-05-31T03:12:19.171Z</updated>
    
    <content type="html"><![CDATA[<p><strong>安装脚本：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl https://raw.githubusercontent.com/w854155226/Install-libpcap/main/suoha.sh -o suoha.sh &amp;&amp; bash suoha.sh</span><br></pre></td></tr></table></figure><p><strong>开始安装</strong></p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305310825025.png" alt="img"></p><p><strong>选择：1</strong></p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305310826009.png" alt="img"></p><p><strong>根据你的喜好选择1或者是2，(这里我选择1)</strong></p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305310825362.png" alt="img"></p><p>选择IPV4或者IPV6(如果是IPV6机器选择IPV6)</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305310827202.png" alt="img"></p><p><strong>安装完成后会自动显示节点信息</strong></p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305310825537.png" alt="img"></p>]]></content>
    
    
    <summary type="html">一键梭哈脚本</summary>
    
    
    
    <category term="教程" scheme="https://blog.ssopay.com/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="cf" scheme="https://blog.ssopay.com/tags/cf/"/>
    
    <category term="cloudflare" scheme="https://blog.ssopay.com/tags/cloudflare/"/>
    
    <category term="alpine" scheme="https://blog.ssopay.com/tags/alpine/"/>
    
    <category term="脚本" scheme="https://blog.ssopay.com/tags/%E8%84%9A%E6%9C%AC/"/>
    
    <category term="v2ray" scheme="https://blog.ssopay.com/tags/v2ray/"/>
    
    <category term="梭哈" scheme="https://blog.ssopay.com/tags/%E6%A2%AD%E5%93%88/"/>
    
  </entry>
  
  <entry>
    <title>使用docker架设NAT机器</title>
    <link href="https://blog.ssopay.com/posts/63f131f8.html"/>
    <id>https://blog.ssopay.com/posts/63f131f8.html</id>
    <published>2023-05-31T02:55:00.000Z</published>
    <updated>2023-05-31T03:22:46.649Z</updated>
    
    <content type="html"><![CDATA[<h1 id="docker"><a href="#docker" class="headerlink" title="docker"></a>docker</h1><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305311056458.jpeg" alt="img"></p><p>通过docker批量或单独开设NAT服务器(Bulk or individual NAT server provisioning via docker)</p><p>默认使用debian系统，每个容器自带1个外网ssh端口，25个内外网一致端口</p><p>默认创建的是非特权容器，且不挂载与宿主机的docker的守护进程之间的通信，所以宿主机创建的docker虚拟化的NAT服务器内无法再嵌套虚拟化docker</p><p>由于只是在宿主机进行了CPU和内存的限制未在容器内使用cgroup驱动，所以在容器内使用服务器测试脚本检测容器的可用资源是无效的，显示的会是宿主机的资源</p><p>由于大部分云服务器xfs文件系统不启用pquota选项，所以默认共享宿主机硬盘，无法限制每个容器的磁盘大小</p><p>原作者项目地址：<a href="https://github.com/spiritLHLS/docker">点击跳转</a></p><h2 id="配置要求"><a href="#配置要求" class="headerlink" title="配置要求"></a>配置要求</h2><p>系统可安装docker即可用，网络能连接Github的raw界面就能用，硬件配置只要不拉跨就行，空闲硬盘有3G就行</p><p>推荐在开设NAT服务器前先增加部分SWAP虚拟内存，避免突发的内存占用导致母鸡卡死 <a href="https://github.com/spiritLHLS/addswap">跳转</a></p><h2 id="环境预设"><a href="#环境预设" class="headerlink" title="环境预设"></a>环境预设</h2><ul><li>检测环境</li><li>安装docker</li><li>下载预制脚本</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -L https://raw.githubusercontent.com/spiritLHLS/docker/main/scripts/pre_build.sh -o pre_build.sh &amp;&amp; chmod +x pre_build.sh &amp;&amp; bash pre_build.sh</span><br></pre></td></tr></table></figure><h2 id="单独开设"><a href="#单独开设" class="headerlink" title="单独开设"></a>单独开设</h2><p>下载脚本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -L https://raw.githubusercontent.com/spiritLHLS/docker/main/scripts/onedocker.sh -o onedocker.sh &amp;&amp; chmod +x onedocker.sh</span><br></pre></td></tr></table></figure><p>运行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./onedocker.sh name cpu memory password sshport startport endport system</span><br></pre></td></tr></table></figure><p>目前system仅支持选择alpine或debian，默认是debian</p><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><p>将开设1核512MB内存，root的密码是123456，SSH端口映射至外网25000，批量映射的端口区间为34975到35000，此区间内外网端口一致，系统为debian</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./onedocker.sh test 1 512 123456 25000 34975 35000 debian</span><br></pre></td></tr></table></figure><p>删除示例</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker rm -f test</span><br><span class="line">rm -rf test</span><br><span class="line">ls</span><br></pre></td></tr></table></figure><p>进入示例</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it test /bin/bash</span><br></pre></td></tr></table></figure><h3 id="查询信息"><a href="#查询信息" class="headerlink" title="查询信息"></a>查询信息</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat 容器名字</span><br></pre></td></tr></table></figure><p>输出格式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">容器名字 SSH端口 登陆的root密码 核数 内存 外网端口起 外网端口止</span><br></pre></td></tr></table></figure><h2 id="批量开设"><a href="#批量开设" class="headerlink" title="批量开设"></a>批量开设</h2><ul><li>批量多次运行继承配置生成</li><li>生成多个时为避免SSH连接中断建议在screen中执行</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -L https://raw.githubusercontent.com/spiritLHLS/docker/main/scripts/dockers.sh -o dockers.sh &amp;&amp; chmod +x dockers.sh &amp;&amp; bash dockers.sh</span><br></pre></td></tr></table></figure><h2 id="卸载所有docker容器和镜像"><a href="#卸载所有docker容器和镜像" class="headerlink" title="卸载所有docker容器和镜像"></a>卸载所有docker容器和镜像</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker rm -f $(docker ps -aq); docker rmi $(docker images -aq)</span><br><span class="line">rm -rf dclog</span><br><span class="line">ls</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">使用docker架设NAT机器</summary>
    
    
    
    <category term="教程" scheme="https://blog.ssopay.com/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="脚本" scheme="https://blog.ssopay.com/tags/%E8%84%9A%E6%9C%AC/"/>
    
    <category term="docker" scheme="https://blog.ssopay.com/tags/docker/"/>
    
    <category term="nat" scheme="https://blog.ssopay.com/tags/nat/"/>
    
    <category term="小鸡" scheme="https://blog.ssopay.com/tags/%E5%B0%8F%E9%B8%A1/"/>
    
  </entry>
  
  <entry>
    <title>Alpine+V2Ray+Nginx+PHP探针+套CF</title>
    <link href="https://blog.ssopay.com/posts/48c55392.html"/>
    <id>https://blog.ssopay.com/posts/48c55392.html</id>
    <published>2023-05-30T03:36:00.000Z</published>
    <updated>2023-06-25T07:19:50.691Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="3d400b756de16bb828f5cd665e1b9612803cf0751a12618d7d7c74e9dfae1d12"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">当前文章暂不对外可见，请输入访问密码后查看！</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Alpine+V2Ray+Nginx+PHP探针+套CF</summary>
    
    
    
    <category term="教程" scheme="https://blog.ssopay.com/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="cf" scheme="https://blog.ssopay.com/tags/cf/"/>
    
    <category term="cloudflare" scheme="https://blog.ssopay.com/tags/cloudflare/"/>
    
    <category term="探针" scheme="https://blog.ssopay.com/tags/%E6%8E%A2%E9%92%88/"/>
    
    <category term="alpine" scheme="https://blog.ssopay.com/tags/alpine/"/>
    
    <category term="v2ray" scheme="https://blog.ssopay.com/tags/v2ray/"/>
    
    <category term="nginx" scheme="https://blog.ssopay.com/tags/nginx/"/>
    
    <category term="private" scheme="https://blog.ssopay.com/tags/private/"/>
    
  </entry>
  
  <entry>
    <title>Microsoft Learn 临时免费云电脑使用教程及评测</title>
    <link href="https://blog.ssopay.com/posts/7975d21a.html"/>
    <id>https://blog.ssopay.com/posts/7975d21a.html</id>
    <published>2023-05-30T03:11:00.000Z</published>
    <updated>2023-05-30T03:41:52.014Z</updated>
    
    <content type="html"><![CDATA[<p>在部分环境中，我们不太方便使用软件来访问外网资源。而我们可以使用外国的云电脑，来访问外网的资源。但是大部分的云电脑需要收费。在这里，我发现了微软提供的云电脑，每次可以使用2小时，并且可以无限次申请使用。在这篇文章中，我来和大家一起来申请微软的免费云电脑</p><h2 id="准备材料"><a href="#准备材料" class="headerlink" title="准备材料"></a>准备材料</h2><ul><li>微软账户</li></ul><h2 id="部署步骤"><a href="#部署步骤" class="headerlink" title="部署步骤"></a>部署步骤</h2><ol><li>打开这个网站：<a href="https://learn.microsoft.com/zh-cn/training/modules/implement-common-integration-features-finance-ops/10-exercise-1">https://learn.microsoft.com/zh-cn/training/modules/implement-common-integration-features-finance-ops/10-exercise-1</a> ，点击“登录并启用 VM 模式”</li></ol><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305301113410.png" alt="img"></p><ol start="2"><li>登录之后，云电脑会自动加载。进入“Resources”页面，点击“Password”前面的<code>T</code>按钮进行输入密码</li></ol><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305301109601.png" alt="img"></p><ol start="3"><li>进入云电脑成功</li></ol><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305301109294.png" alt="img"></p><ol start="4"><li>可以看下云电脑的配置还是挺好的</li></ol><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305301113179.png" alt="img"></p><ol start="5"><li>测试下网速，可以看到是限速100M了。不过对于一般用途来讲也够用了</li></ol><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305301109490.png" alt="img"></p><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><ul><li>请勿滥用本项目</li><li>云电脑网络配置有规则，部分网站访问不了</li></ul><blockquote><p>原文链接：<a href="https://blog.misaka.rest/2023/05/30/mslearn-temp-pc/">https://blog.misaka.rest/2023/05/30/mslearn-temp-pc/</a></p></blockquote>]]></content>
    
    
    <summary type="html">Microsoft Learn 临时免费云电脑使用教程及评测</summary>
    
    
    
    <category term="教程" scheme="https://blog.ssopay.com/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="教程" scheme="https://blog.ssopay.com/tags/%E6%95%99%E7%A8%8B/"/>
    
    <category term="免费" scheme="https://blog.ssopay.com/tags/%E5%85%8D%E8%B4%B9/"/>
    
    <category term="microsoft" scheme="https://blog.ssopay.com/tags/microsoft/"/>
    
    <category term="learn" scheme="https://blog.ssopay.com/tags/learn/"/>
    
    <category term="云电脑" scheme="https://blog.ssopay.com/tags/%E4%BA%91%E7%94%B5%E8%84%91/"/>
    
    <category term="评测" scheme="https://blog.ssopay.com/tags/%E8%AF%84%E6%B5%8B/"/>
    
  </entry>
  
  <entry>
    <title>在CloudFlare Workers搭建VLESS节点</title>
    <link href="https://blog.ssopay.com/posts/aa969a82.html"/>
    <id>https://blog.ssopay.com/posts/aa969a82.html</id>
    <published>2023-05-26T02:22:00.000Z</published>
    <updated>2023-05-26T02:29:11.800Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本项目有封号风险，请谨慎部署</p></blockquote><h2 id="准备材料"><a href="#准备材料" class="headerlink" title="准备材料"></a>准备材料</h2><ul><li>CloudFlare 账号</li></ul><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><p>请勿滥用本项目！</p><h2 id="部署步骤"><a href="#部署步骤" class="headerlink" title="部署步骤"></a>部署步骤</h2><ol><li>打开CF的控制台，转到“Workers &amp; Pages”页面，点击“Create Application”按钮</li></ol><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305261024994.png" alt="img"></p><ol start="2"><li>点击“Create Worker”按钮</li></ol><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305261021516.png" alt="img"></p><ol start="3"><li>设置workers的名称，点击“Deploy”按钮</li></ol><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305261025563.png" alt="img"></p><ol start="4"><li>点击“Configure Worker”按钮</li></ol><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305261025546.png" alt="img"></p><ol start="5"><li>点击“Quick Edit”按钮，修改代码</li></ol><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305261028221.png" alt="img"></p><ol start="6"><li>将提供的代码的244行的UUID，修改为自己的UUID（可选），并复制到Workers中</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br></pre></td><td class="code"><pre><span class="line">JAVASCRIPT</span><br><span class="line">// ../node_modules/uuid/dist/esm-browser/regex.js</span><br><span class="line">var regex_default = /^(?:[0-9a-f]&#123;8&#125;-[0-9a-f]&#123;4&#125;-[1-5][0-9a-f]&#123;3&#125;-[89ab][0-9a-f]&#123;3&#125;-[0-9a-f]&#123;12&#125;|00000000-0000-0000-0000-000000000000)$/i;</span><br><span class="line"></span><br><span class="line">// ../node_modules/uuid/dist/esm-browser/validate.js</span><br><span class="line">function validate(uuid) &#123;</span><br><span class="line">  return typeof uuid === &quot;string&quot; &amp;&amp; regex_default.test(uuid);</span><br><span class="line">&#125;</span><br><span class="line">var validate_default = validate;</span><br><span class="line"></span><br><span class="line">// ../node_modules/uuid/dist/esm-browser/stringify.js</span><br><span class="line">var byteToHex = [];</span><br><span class="line">for (let i = 0; i &lt; 256; ++i) &#123;</span><br><span class="line">  byteToHex.push((i + 256).toString(16).slice(1));</span><br><span class="line">&#125;</span><br><span class="line">function unsafeStringify(arr, offset = 0) &#123;</span><br><span class="line">  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + &quot;-&quot; + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + &quot;-&quot; + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + &quot;-&quot; + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + &quot;-&quot; + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();</span><br><span class="line">&#125;</span><br><span class="line">function stringify(arr, offset = 0) &#123;</span><br><span class="line">  const uuid = unsafeStringify(arr, offset);</span><br><span class="line">  if (!validate_default(uuid)) &#123;</span><br><span class="line">    throw TypeError(&quot;Stringified UUID is invalid&quot;);</span><br><span class="line">  &#125;</span><br><span class="line">  return uuid;</span><br><span class="line">&#125;</span><br><span class="line">var stringify_default = stringify;</span><br><span class="line"></span><br><span class="line">// vless-js/lib/vless-js.ts</span><br><span class="line">var WS_READY_STATE_OPEN = 1;</span><br><span class="line">function makeReadableWebSocketStream(ws, earlyDataHeader, log) &#123;</span><br><span class="line">  let readableStreamCancel = false;</span><br><span class="line">  return new ReadableStream(&#123;</span><br><span class="line">    start(controller) &#123;</span><br><span class="line">      ws.addEventListener(&quot;message&quot;, async (e) =&gt; &#123;</span><br><span class="line">        if (readableStreamCancel) &#123;</span><br><span class="line">          return;</span><br><span class="line">        &#125;</span><br><span class="line">        const vlessBuffer = e.data;</span><br><span class="line">        controller.enqueue(vlessBuffer);</span><br><span class="line">      &#125;);</span><br><span class="line">      ws.addEventListener(&quot;error&quot;, (e) =&gt; &#123;</span><br><span class="line">        log(&quot;socket has error&quot;);</span><br><span class="line">        readableStreamCancel = true;</span><br><span class="line">        controller.error(e);</span><br><span class="line">      &#125;);</span><br><span class="line">      ws.addEventListener(&quot;close&quot;, () =&gt; &#123;</span><br><span class="line">        try &#123;</span><br><span class="line">          log(&quot;webSocket is close&quot;);</span><br><span class="line">          if (readableStreamCancel) &#123;</span><br><span class="line">            return;</span><br><span class="line">          &#125;</span><br><span class="line">          controller.close();</span><br><span class="line">        &#125; catch (error2) &#123;</span><br><span class="line">          log(`websocketStream can&#x27;t close DUE to `, error2);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">      const &#123; earlyData, error &#125; = base64ToArrayBuffer(earlyDataHeader);</span><br><span class="line">      if (error) &#123;</span><br><span class="line">        log(`earlyDataHeader has invaild base64`);</span><br><span class="line">        safeCloseWebSocket(ws);</span><br><span class="line">        return;</span><br><span class="line">      &#125;</span><br><span class="line">      if (earlyData) &#123;</span><br><span class="line">        controller.enqueue(earlyData);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    pull(controller) &#123;</span><br><span class="line">    &#125;,</span><br><span class="line">    cancel(reason) &#123;</span><br><span class="line">      log(`websocketStream is cancel DUE to `, reason);</span><br><span class="line">      if (readableStreamCancel) &#123;</span><br><span class="line">        return;</span><br><span class="line">      &#125;</span><br><span class="line">      readableStreamCancel = true;</span><br><span class="line">      safeCloseWebSocket(ws);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line">function base64ToArrayBuffer(base64Str) &#123;</span><br><span class="line">  if (!base64Str) &#123;</span><br><span class="line">    return &#123; error: null &#125;;</span><br><span class="line">  &#125;</span><br><span class="line">  try &#123;</span><br><span class="line">    base64Str = base64Str.replace(/-/g, &quot;+&quot;).replace(/_/g, &quot;/&quot;);</span><br><span class="line">    const decode = atob(base64Str);</span><br><span class="line">    const arryBuffer = Uint8Array.from(decode, (c) =&gt; c.charCodeAt(0));</span><br><span class="line">    return &#123; earlyData: arryBuffer.buffer, error: null &#125;;</span><br><span class="line">  &#125; catch (error) &#123;</span><br><span class="line">    return &#123; error &#125;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">function safeCloseWebSocket(socket) &#123;</span><br><span class="line">  try &#123;</span><br><span class="line">    if (socket.readyState === WS_READY_STATE_OPEN) &#123;</span><br><span class="line">      socket.close();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; catch (error) &#123;</span><br><span class="line">    console.error(&quot;safeCloseWebSocket error&quot;, error);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">function processVlessHeader(vlessBuffer, userID) &#123;</span><br><span class="line">  if (vlessBuffer.byteLength &lt; 24) &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      hasError: true,</span><br><span class="line">      message: &quot;invalid data&quot;</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line">  const version = new Uint8Array(vlessBuffer.slice(0, 1));</span><br><span class="line">  let isValidUser = false;</span><br><span class="line">  let isUDP = false;</span><br><span class="line">  if (stringify_default(new Uint8Array(vlessBuffer.slice(1, 17))) === userID) &#123;</span><br><span class="line">    isValidUser = true;</span><br><span class="line">  &#125;</span><br><span class="line">  if (!isValidUser) &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      hasError: true,</span><br><span class="line">      message: &quot;invalid user&quot;</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line">  const optLength = new Uint8Array(vlessBuffer.slice(17, 18))[0];</span><br><span class="line">  const command = new Uint8Array(</span><br><span class="line">    vlessBuffer.slice(18 + optLength, 18 + optLength + 1)</span><br><span class="line">  )[0];</span><br><span class="line">  if (command === 1) &#123;</span><br><span class="line">  &#125; else if (command === 2) &#123;</span><br><span class="line">    isUDP = true;</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      hasError: true,</span><br><span class="line">      message: `command $&#123;command&#125; is not support, command 01-tcp,02-udp,03-mux`</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line">  const portIndex = 18 + optLength + 1;</span><br><span class="line">  const portBuffer = vlessBuffer.slice(portIndex, portIndex + 2);</span><br><span class="line">  const portRemote = new DataView(portBuffer).getInt16(0);</span><br><span class="line">  let addressIndex = portIndex + 2;</span><br><span class="line">  const addressBuffer = new Uint8Array(</span><br><span class="line">    vlessBuffer.slice(addressIndex, addressIndex + 1)</span><br><span class="line">  );</span><br><span class="line">  const addressType = addressBuffer[0];</span><br><span class="line">  let addressLength = 0;</span><br><span class="line">  let addressValueIndex = addressIndex + 1;</span><br><span class="line">  let addressValue = &quot;&quot;;</span><br><span class="line">  switch (addressType) &#123;</span><br><span class="line">    case 1:</span><br><span class="line">      addressLength = 4;</span><br><span class="line">      addressValue = new Uint8Array(</span><br><span class="line">        vlessBuffer.slice(addressValueIndex, addressValueIndex + addressLength)</span><br><span class="line">      ).join(&quot;.&quot;);</span><br><span class="line">      break;</span><br><span class="line">    case 2:</span><br><span class="line">      addressLength = new Uint8Array(</span><br><span class="line">        vlessBuffer.slice(addressValueIndex, addressValueIndex + 1)</span><br><span class="line">      )[0];</span><br><span class="line">      addressValueIndex += 1;</span><br><span class="line">      addressValue = new TextDecoder().decode(</span><br><span class="line">        vlessBuffer.slice(addressValueIndex, addressValueIndex + addressLength)</span><br><span class="line">      );</span><br><span class="line">      break;</span><br><span class="line">    case 3:</span><br><span class="line">      addressLength = 16;</span><br><span class="line">      const dataView = new DataView(</span><br><span class="line">        vlessBuffer.slice(addressValueIndex, addressValueIndex + addressLength)</span><br><span class="line">      );</span><br><span class="line">      const ipv6 = [];</span><br><span class="line">      for (let i = 0; i &lt; 8; i++) &#123;</span><br><span class="line">        ipv6.push(dataView.getUint16(i * 2).toString(16));</span><br><span class="line">      &#125;</span><br><span class="line">      addressValue = ipv6.join(&quot;:&quot;);</span><br><span class="line">      break;</span><br><span class="line">    default:</span><br><span class="line">      console.log(`invild  addressType is $&#123;addressType&#125;`);</span><br><span class="line">  &#125;</span><br><span class="line">  if (!addressValue) &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      hasError: true,</span><br><span class="line">      message: `addressValue is empty, addressType is $&#123;addressType&#125;`</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line">  return &#123;</span><br><span class="line">    hasError: false,</span><br><span class="line">    addressType,</span><br><span class="line">    addressRemote: addressValue,</span><br><span class="line">    portRemote,</span><br><span class="line">    rawDataIndex: addressValueIndex + addressLength,</span><br><span class="line">    vlessVersion: version,</span><br><span class="line">    isUDP</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// index.ts</span><br><span class="line">import &#123; connect &#125; from &quot;cloudflare:sockets&quot;;</span><br><span class="line"></span><br><span class="line">// dns.ts</span><br><span class="line">var doh = &quot;https://cloudflare-dns.com/dns-query&quot;;</span><br><span class="line">var dns = async (domain) =&gt; &#123;</span><br><span class="line">  const response = await fetch(`$&#123;doh&#125;?name=$&#123;domain&#125;`, &#123;</span><br><span class="line">    method: &quot;GET&quot;,</span><br><span class="line">    headers: &#123;</span><br><span class="line">      &quot;Accept&quot;: &quot;application/dns-json&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">  const data = await response.json();</span><br><span class="line">  const ans = data?.Answer;</span><br><span class="line">  return ans?.find((record) =&gt; record.type === 1)?.data;</span><br><span class="line">&#125;;</span><br><span class="line">var isCloudFlareIP = (ip) =&gt; &#123;</span><br><span class="line">  const CFIP = [</span><br><span class="line">    [2918526976, -4096],</span><br><span class="line">    [1729491968, -1024],</span><br><span class="line">    [1729546240, -1024],</span><br><span class="line">    [1730085888, -1024],</span><br><span class="line">    [2372222976, -16384],</span><br><span class="line">    [1822605312, -16384],</span><br><span class="line">    [3193827328, -4096],</span><br><span class="line">    [3161612288, -4096],</span><br><span class="line">    [3320508416, -1024],</span><br><span class="line">    [3324608512, -32768],</span><br><span class="line">    [2728263680, -131072],</span><br><span class="line">    [1745879040, -524288],</span><br><span class="line">    [1746403328, -262144],</span><br><span class="line">    [2889875456, -524288],</span><br><span class="line">    [2197833728, -1024]</span><br><span class="line">  ];</span><br><span class="line">  const isIp4InCidr = (ip2, cidr) =&gt; &#123;</span><br><span class="line">    const [a, b, c, d] = ip2.split(&quot;.&quot;).map(Number);</span><br><span class="line">    ip2 = a &lt;&lt; 24 | b &lt;&lt; 16 | c &lt;&lt; 8 | d;</span><br><span class="line">    const [range, mask] = cidr;</span><br><span class="line">    return (ip2 &amp; mask) === range;</span><br><span class="line">  &#125;;</span><br><span class="line">  return CFIP.some((cidr) =&gt; isIp4InCidr(ip, cidr));</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">// index.ts</span><br><span class="line">var HTML404 = &quot;Script by zizifn, modified by MisakaNo&quot;;</span><br><span class="line">function delay2(ms) &#123;</span><br><span class="line">  return new Promise((resolve, rej) =&gt; &#123;</span><br><span class="line">    setTimeout(resolve, ms);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line">var workers_default = &#123;</span><br><span class="line">  async fetch(request, env, ctx) &#123;</span><br><span class="line">    let address = &quot;&quot;;</span><br><span class="line">    let portWithRandomLog = &quot;&quot;;</span><br><span class="line">    const userID = env.UUID || &quot;3e036e57-4d74-469a-b312-b97b59680ec3&quot;;</span><br><span class="line">    const log = (info, event) =&gt; &#123;</span><br><span class="line">      console.log(`[$&#123;address&#125;:$&#123;portWithRandomLog&#125;] $&#123;info&#125;`, event || &quot;&quot;);</span><br><span class="line">    &#125;;</span><br><span class="line">    const upgradeHeader = request.headers.get(&quot;Upgrade&quot;);</span><br><span class="line">    if (!upgradeHeader || upgradeHeader !== &quot;websocket&quot;) &#123;</span><br><span class="line">      return new Response(HTML404, &#123;</span><br><span class="line">        status: 404,</span><br><span class="line">        headers: new Headers(&#123; &quot;Content-Type&quot;: &quot;text/html&quot; &#125;)</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    const webSocketPair = new WebSocketPair();</span><br><span class="line">    const [client, webSocket] = Object.values(webSocketPair);</span><br><span class="line">    const earlyDataHeader = request.headers.get(&quot;sec-websocket-protocol&quot;) || &quot;&quot;;</span><br><span class="line">    let remoteSocket = null;</span><br><span class="line">    webSocket.accept();</span><br><span class="line">    const readableWebSocketStream = makeReadableWebSocketStream(</span><br><span class="line">      webSocket,</span><br><span class="line">      earlyDataHeader,</span><br><span class="line">      log</span><br><span class="line">    );</span><br><span class="line">    let vlessResponseHeader = new Uint8Array([0, 0]);</span><br><span class="line">    let remoteConnectionReadyResolve;</span><br><span class="line">    readableWebSocketStream.pipeTo(</span><br><span class="line">      new WritableStream(&#123;</span><br><span class="line">        async write(chunk, controller) &#123;</span><br><span class="line">          if (remoteSocket) &#123;</span><br><span class="line">            const writer2 = remoteSocket.writable.getWriter();</span><br><span class="line">            await writer2.write(chunk);</span><br><span class="line">            writer2.releaseLock();</span><br><span class="line">            return;</span><br><span class="line">          &#125;</span><br><span class="line">          const &#123;</span><br><span class="line">            hasError,</span><br><span class="line">            message,</span><br><span class="line">            portRemote,</span><br><span class="line">            addressType,</span><br><span class="line">            addressRemote,</span><br><span class="line">            rawDataIndex,</span><br><span class="line">            vlessVersion,</span><br><span class="line">            isUDP</span><br><span class="line">          &#125; = processVlessHeader(chunk, userID);</span><br><span class="line">          address = addressRemote || &quot;&quot;;</span><br><span class="line">          portWithRandomLog = `$&#123;portRemote&#125; -- $&#123;isUDP ? &quot;udp &quot; : &quot;tcp &quot;&#125; `;</span><br><span class="line">          if (isUDP &amp;&amp; portRemote != 53) &#123;</span><br><span class="line">            controller.error(&quot;UDP proxy only enable for DNS which is port 53&quot;);</span><br><span class="line">            webSocket.close();</span><br><span class="line">            return;</span><br><span class="line">          &#125;</span><br><span class="line">          if (hasError) &#123;</span><br><span class="line">            controller.error(message);</span><br><span class="line">            webSocket.close();</span><br><span class="line">            return;</span><br><span class="line">          &#125;</span><br><span class="line">          vlessResponseHeader = new Uint8Array([vlessVersion[0], 0]);</span><br><span class="line">          const rawClientData = chunk.slice(rawDataIndex);</span><br><span class="line">          let queryip = &quot;&quot;;</span><br><span class="line">          if (addressType === 2) &#123;</span><br><span class="line">            queryip = await dns(addressRemote);</span><br><span class="line">            if (queryip &amp;&amp; isCloudFlareIP(queryip)) &#123;</span><br><span class="line">              queryip = &quot;64.68.192.&quot; + Math.floor(Math.random() * 255);</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">          remoteSocket = connect(&#123;</span><br><span class="line">            hostname: queryip ? queryip : addressRemote,</span><br><span class="line">            port: portRemote</span><br><span class="line">          &#125;);</span><br><span class="line">          log(`connected`);</span><br><span class="line">          const writer = remoteSocket.writable.getWriter();</span><br><span class="line">          await writer.write(rawClientData);</span><br><span class="line">          writer.releaseLock();</span><br><span class="line">          remoteConnectionReadyResolve(remoteSocket);</span><br><span class="line">        &#125;,</span><br><span class="line">        close() &#123;</span><br><span class="line">          console.log(</span><br><span class="line">            `[$&#123;address&#125;:$&#123;portWithRandomLog&#125;] readableWebSocketStream is close`</span><br><span class="line">          );</span><br><span class="line">        &#125;,</span><br><span class="line">        abort(reason) &#123;</span><br><span class="line">          console.log(</span><br><span class="line">            `[$&#123;address&#125;:$&#123;portWithRandomLog&#125;] readableWebSocketStream is abort`,</span><br><span class="line">            JSON.stringify(reason)</span><br><span class="line">          );</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">    );</span><br><span class="line">    (async () =&gt; &#123;</span><br><span class="line">      await new Promise((resolve) =&gt; remoteConnectionReadyResolve = resolve);</span><br><span class="line">      let count = 0;</span><br><span class="line">      remoteSocket.readable.pipeTo(</span><br><span class="line">        new WritableStream(&#123;</span><br><span class="line">          start() &#123;</span><br><span class="line">            if (webSocket.readyState === WebSocket.READY_STATE_OPEN) &#123;</span><br><span class="line">              webSocket.send(vlessResponseHeader);</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;,</span><br><span class="line">          async write(chunk, controller) &#123;</span><br><span class="line">            if (webSocket.readyState === WebSocket.READY_STATE_OPEN) &#123;</span><br><span class="line">              if (count++ &gt; 2e4) &#123;</span><br><span class="line">                await delay2(1);</span><br><span class="line">              &#125;</span><br><span class="line">              webSocket.send(chunk);</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">              controller.error(</span><br><span class="line">                &quot;webSocket.readyState is not open, maybe close&quot;</span><br><span class="line">              );</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;,</span><br><span class="line">          close() &#123;</span><br><span class="line">            console.log(</span><br><span class="line">              `[$&#123;address&#125;:$&#123;portWithRandomLog&#125;] remoteConnection!.readable is close`</span><br><span class="line">            );</span><br><span class="line">          &#125;,</span><br><span class="line">          abort(reason) &#123;</span><br><span class="line">            console.error(</span><br><span class="line">              `[$&#123;address&#125;:$&#123;portWithRandomLog&#125;] remoteConnection!.readable abort`,</span><br><span class="line">              reason</span><br><span class="line">            );</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">      ).catch((error) =&gt; &#123;</span><br><span class="line">        console.error(</span><br><span class="line">          `[$&#123;address&#125;:$&#123;portWithRandomLog&#125;] processWebSocket has exception `,</span><br><span class="line">          error.stack || error</span><br><span class="line">        );</span><br><span class="line">        safeCloseWebSocket2(webSocket);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;)();</span><br><span class="line">    return new Response(null, &#123;</span><br><span class="line">      status: 101,</span><br><span class="line">      webSocket: client</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">function safeCloseWebSocket2(ws) &#123;</span><br><span class="line">  try &#123;</span><br><span class="line">    if (ws.readyState !== WebSocket.READY_STATE_CLOSED) &#123;</span><br><span class="line">      ws.close();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; catch (error) &#123;</span><br><span class="line">    console.error(&quot;safeCloseWebSocket error&quot;, error);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">export &#123;</span><br><span class="line">  workers_default as default</span><br><span class="line">&#125;;</span><br><span class="line">//# sourceMappingURL=index.js.map</span><br></pre></td></tr></table></figure><ol start="7"><li>点击“Save and deploy”按钮，保存代码。然后复制workers地址备用</li></ol><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305261021676.png" alt="img"></p><ol start="8"><li>节点配置如下</li></ol><ul><li>非TLS（可适用于无域名情况）</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">PLAINTEXT</span><br><span class="line">协议：Vless</span><br><span class="line">地址：CF优选IP / 域名</span><br><span class="line">端口：80 或 CF 支持的 HTTPS 端口</span><br><span class="line">UUID/密码：设置的UUID（如未设置则为 `3e036e57-4d74-469a-b312-b97b59680ec3`）</span><br><span class="line">传输协议：ws</span><br><span class="line">伪装域名：设置的 Workers 自定义域名</span><br><span class="line">路径：/</span><br></pre></td></tr></table></figure><ul><li>TLS（仅限自定义域名）</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">PLAINTEXT</span><br><span class="line">协议：Vless</span><br><span class="line">地址：CF优选IP / 域名</span><br><span class="line">端口：443 或 CF 支持的 HTTPS 端口</span><br><span class="line">UUID/密码：设置的UUID（如未设置则为 `3e036e57-4d74-469a-b312-b97b59680ec3`）</span><br><span class="line">传输协议：ws</span><br><span class="line">伪装域名：设置的 Workers 自定义域名</span><br><span class="line">路径：/</span><br><span class="line">传输安全：TLS</span><br><span class="line">跳过证书验证：true 或 false 都可以</span><br></pre></td></tr></table></figure><blockquote><p>原文链接：<a href="https://blog.misaka.rest/2023/05/26/cf-wkrs-vless/">https://blog.misaka.rest/2023/05/26/cf-wkrs-vless/</a></p></blockquote>]]></content>
    
    
    <summary type="html">在CloudFlare Workers搭建VLESS节点</summary>
    
    
    
    <category term="教程" scheme="https://blog.ssopay.com/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="教程" scheme="https://blog.ssopay.com/tags/%E6%95%99%E7%A8%8B/"/>
    
    <category term="cf" scheme="https://blog.ssopay.com/tags/cf/"/>
    
    <category term="cloudflare" scheme="https://blog.ssopay.com/tags/cloudflare/"/>
    
    <category term="vless" scheme="https://blog.ssopay.com/tags/vless/"/>
    
    <category term="workers" scheme="https://blog.ssopay.com/tags/workers/"/>
    
    <category term="节点" scheme="https://blog.ssopay.com/tags/%E8%8A%82%E7%82%B9/"/>
    
  </entry>
  
  <entry>
    <title>甲骨文Oracle开区时间及AMD类型</title>
    <link href="https://blog.ssopay.com/posts/cd3afdd8.html"/>
    <id>https://blog.ssopay.com/posts/cd3afdd8.html</id>
    <published>2023-05-24T02:45:00.000Z</published>
    <updated>2023-05-26T02:29:11.800Z</updated>
    
    <content type="html"><![CDATA[<p>甲骨文是一家做数据库的巨头公司。后来亚马逊、微软谷歌等美国巨头公司推出了自己的云计算服务，甲骨文也做了云计算服务。其它巨头推出免费试用一年，甲骨文2019年9月推出永久免费服务。</p><p>本文介绍的是甲骨文Oracle开区时间及永久免费AMD类型。</p><blockquote><p>目前新加坡的AMD比较难开。</p></blockquote><h2 id="Asia-Pacific"><a href="#Asia-Pacific" class="headerlink" title="Asia-Pacific"></a>Asia-Pacific</h2><h4 id="海得拉巴"><a href="#海得拉巴" class="headerlink" title="海得拉巴"></a>海得拉巴</h4><p>2020年4月30日开区，永久免费的AMD是7551</p><h4 id="孟买"><a href="#孟买" class="headerlink" title="孟买"></a>孟买</h4><p>2019年7月26日开区，永久免费的AMD是7551</p><h4 id="墨尔本"><a href="#墨尔本" class="headerlink" title="墨尔本"></a>墨尔本</h4><p>2020年2月1日开区，永久免费的AMD是7551</p><h4 id="悉尼"><a href="#悉尼" class="headerlink" title="悉尼"></a>悉尼</h4><p>2019年8月30日开区，永久免费的AMD是7551</p><h4 id="新加坡"><a href="#新加坡" class="headerlink" title="新加坡"></a>新加坡</h4><p>2021年10月31日开区，永久免费的AMD是7742&#x2F;7j13</p><h4 id="大阪"><a href="#大阪" class="headerlink" title="大阪"></a>大阪</h4><p>2020年1月24日开区，永久免费的AMD是7551</p><h4 id="东京"><a href="#东京" class="headerlink" title="东京"></a>东京</h4><p>2019年4月30日开区，永久免费的AMD是7551</p><h4 id="春川"><a href="#春川" class="headerlink" title="春川"></a>春川</h4><p>2020年5月29日开区，永久免费的AMD是7751</p><h4 id="首尔"><a href="#首尔" class="headerlink" title="首尔"></a>首尔</h4><p>2019年5月13日开区，永久免费的AMD是7551</p><h2 id="Europe"><a href="#Europe" class="headerlink" title="Europe"></a>Europe</h2><h4 id="米兰"><a href="#米兰" class="headerlink" title="米兰"></a>米兰</h4><p>2021年11月30日开区，永久免费的AMD是7742</p><h4 id="苏黎世"><a href="#苏黎世" class="headerlink" title="苏黎世"></a>苏黎世</h4><p>2019年8月2日开区，永久免费的AMD是7551</p><h4 id="阿姆斯特丹"><a href="#阿姆斯特丹" class="headerlink" title="阿姆斯特丹"></a>阿姆斯特丹</h4><p>2020年2月1日开区，永久免费的AMD是7551</p><h4 id="耶路撒冷"><a href="#耶路撒冷" class="headerlink" title="耶路撒冷"></a>耶路撒冷</h4><p>2021年10月11日开区，永久免费的AMD是7742</p><h4 id="巴黎"><a href="#巴黎" class="headerlink" title="巴黎"></a>巴黎</h4><p>2022年6月1日开区，永久免费的AMD是7J13</p><h4 id="马赛"><a href="#马赛" class="headerlink" title="马赛"></a>马赛</h4><p>2021年10月31日开区，永久免费的AMD是7742</p><h4 id="法兰克福"><a href="#法兰克福" class="headerlink" title="法兰克福"></a>法兰克福</h4><p>2018年开区，永久免费的AMD是7551</p><h4 id="加的夫"><a href="#加的夫" class="headerlink" title="加的夫"></a>加的夫</h4><p>2018年开区，永久免费的AMD是7551</p><h4 id="伦敦"><a href="#伦敦" class="headerlink" title="伦敦"></a>伦敦</h4><p>2018年开区，永久免费的AMD是7551</p><h4 id="马德里"><a href="#马德里" class="headerlink" title="马德里"></a>马德里</h4><p>2022年9月13日开区，永久免费的AMD是7J13，暂无ARM</p><h4 id="斯德哥尔摩"><a href="#斯德哥尔摩" class="headerlink" title="斯德哥尔摩"></a>斯德哥尔摩</h4><p>2021年12月17日开区，永久免费的AMD是7742</p><h2 id="North-America"><a href="#North-America" class="headerlink" title="North America"></a>North America</h2><h4 id="蒙特利尔"><a href="#蒙特利尔" class="headerlink" title="蒙特利尔"></a>蒙特利尔</h4><p>2020年3月1日开区，永久免费的AMD是7551</p><h4 id="多伦多"><a href="#多伦多" class="headerlink" title="多伦多"></a>多伦多</h4><p>2019年1月17日开区，永久免费的AMD是7551</p><h4 id="阿什本"><a href="#阿什本" class="headerlink" title="阿什本"></a>阿什本</h4><p>2018年开区，永久免费的AMD是7551</p><h4 id="凤凰城"><a href="#凤凰城" class="headerlink" title="凤凰城"></a>凤凰城</h4><p>2018年开区，永久免费的AMD是7551</p><h4 id="圣何塞"><a href="#圣何塞" class="headerlink" title="圣何塞"></a>圣何塞</h4><p>2018年开区，永久免费的AMD是7551</p><h4 id="克雷塔罗"><a href="#克雷塔罗" class="headerlink" title="克雷塔罗"></a>克雷塔罗</h4><p>2022年7月17日开区，暂无永久免费的AMD&#x2F;ARM机器</p><h2 id="South-America"><a href="#South-America" class="headerlink" title="South America"></a>South America</h2><h4 id="圣保罗"><a href="#圣保罗" class="headerlink" title="圣保罗"></a>圣保罗</h4><p>2019年8月23日开区，永久免费的AMD是7551</p><h4 id="维涅杜"><a href="#维涅杜" class="headerlink" title="维涅杜"></a>维涅杜</h4><p>2021年5月28日开区，永久免费的AMD有7551</p><h4 id="圣地亚哥"><a href="#圣地亚哥" class="headerlink" title="圣地亚哥"></a>圣地亚哥</h4><p>2020年11月30日开区，永久免费AMD有7551&#x2F;7742&#x2F;7J13</p><h2 id="Middle-East-Afica"><a href="#Middle-East-Afica" class="headerlink" title="Middle East-Afica"></a>Middle East-Afica</h2><h4 id="约翰内斯堡"><a href="#约翰内斯堡" class="headerlink" title="约翰内斯堡"></a>约翰内斯堡</h4><p>2022年1月8日开区，永久免费的AMD是7J13</p><h4 id="吉达"><a href="#吉达" class="headerlink" title="吉达"></a>吉达</h4><p>2020年2月1日开区，永久免费的AMD是7551</p><h4 id="阿布扎比"><a href="#阿布扎比" class="headerlink" title="阿布扎比"></a>阿布扎比</h4><p>2021年11月19日开区，永久免费的AMD是7742</p><h4 id="迪拜"><a href="#迪拜" class="headerlink" title="迪拜"></a>迪拜</h4><p>2020年9月30日开区，永久免费的AMD是7551</p>]]></content>
    
    
    <summary type="html">甲骨文Oracle开区时间及AMD类型</summary>
    
    
    
    <category term="VPS" scheme="https://blog.ssopay.com/categories/VPS/"/>
    
    
    <category term="vps" scheme="https://blog.ssopay.com/tags/vps/"/>
    
    <category term="服务器" scheme="https://blog.ssopay.com/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    <category term="oracle" scheme="https://blog.ssopay.com/tags/oracle/"/>
    
    <category term="甲骨文" scheme="https://blog.ssopay.com/tags/%E7%94%B2%E9%AA%A8%E6%96%87/"/>
    
    <category term="amd" scheme="https://blog.ssopay.com/tags/amd/"/>
    
  </entry>
  
  <entry>
    <title>VPS/服务器常用脚本合集</title>
    <link href="https://blog.ssopay.com/posts/cc0ad38f.html"/>
    <id>https://blog.ssopay.com/posts/cc0ad38f.html</id>
    <published>2023-05-18T02:45:00.000Z</published>
    <updated>2023-05-18T02:58:18.581Z</updated>
    
    <content type="html"><![CDATA[<p>本帖所有脚本均来自互联网，本站仅对这些脚本进行收集，不对其可用性负责，也不对其安全性等任何方面负责。</p><h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><ul><li>查看CPU信息</li><li>查看当前内核信息</li><li>关键字查找进程</li><li>内核更改 [开启BBR、更换BBRplus等]</li><li>Linux修改主机名</li><li>一键开启&#x2F;关闭Swap</li><li>缝合怪测评</li><li>IP质量测试</li><li>Bench – 系统信息+I&#x2F;O+测速</li><li>SuperBench – 系统信息+I&#x2F;O+测速</li><li>HyperSpeed 一键测速</li><li>Besttrace 直接显示回程线路</li><li>Backtrace 三网回程路由测试</li><li>BestTrace 回程测试</li><li>回程测试 [Nanqinlang大佬作品]</li><li>UnixBench.sh [秋水逸冰大佬作品]</li><li>LemonBench.sh</li><li>Yabs.sh [Masonr大佬作品]</li><li>流媒体解锁测试 [Lmc999大佬作品]</li><li>流媒体解锁测试 [LovelyHaochi大佬作品]</li><li>推荐杜甫使用-本脚本支持查看I&#x2F;O bench以及system info</li><li>测试25端口是否开放</li></ul><h2 id="查看CPU信息"><a href="#查看CPU信息" class="headerlink" title="查看CPU信息"></a>查看CPU信息</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /proc/cpuinfo</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305181044175.jpeg" alt="img"></p><h2 id="查看当前内核信息"><a href="#查看当前内核信息" class="headerlink" title="查看当前内核信息"></a>查看当前内核信息</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname -a</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305181049853.jpeg" alt="img"></p><h2 id="关键字查找进程"><a href="#关键字查找进程" class="headerlink" title="关键字查找进程"></a>关键字查找进程</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -ef | grep &lt;进程关键字&gt;</span><br></pre></td></tr></table></figure><h2 id="内核更改-开启BBR、更换BBRplus等"><a href="#内核更改-开启BBR、更换BBRplus等" class="headerlink" title="内核更改 [开启BBR、更换BBRplus等]"></a>内核更改 [开启BBR、更换BBRplus等]</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Centos</span><br><span class="line">yum install ca-certificates wget -y &amp;&amp; update-ca-trust force-enable </span><br><span class="line">Debian/Ubuntu： </span><br><span class="line">apt-get install ca-certificates wget -y &amp;&amp; update-ca-certificates </span><br><span class="line"></span><br><span class="line">不卸载内核版本： </span><br><span class="line">wget -O tcpx.sh &quot;https://github.com/ylx2016/Linux-NetSpeed/raw/master/tcpx.sh&quot; &amp;&amp; chmod +x tcpx.sh &amp;&amp; ./tcpx.sh </span><br><span class="line"></span><br><span class="line">卸载内核版本： </span><br><span class="line">wget -O tcp.sh &quot;https://github.com/ylx2016/Linux-NetSpeed/raw/master/tcp.sh&quot; &amp;&amp; chmod +x tcp.sh &amp;&amp; ./tcp.sh</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305181049020.jpeg" alt="img"></p><h2 id="Linux修改主机名"><a href="#Linux修改主机名" class="headerlink" title="Linux修改主机名"></a>Linux修改主机名</h2><p>首先执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hostnamectl set-hostname &lt;newhostname&gt;</span><br></pre></td></tr></table></figure><p>然后执行下面的命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/hosts</span><br></pre></td></tr></table></figure><p>在第二行增加一个 <code>127.0.0.1 &lt;newhostname&gt;</code>，同时将文件中的原主机名修改为刚设置的新主机名</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305181044864.jpeg" alt="img"></p><h2 id="一键开启-x2F-关闭Swap"><a href="#一键开启-x2F-关闭Swap" class="headerlink" title="一键开启&#x2F;关闭Swap"></a>一键开启&#x2F;关闭Swap</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://www.moerats.com/usr/shell/swap.sh &amp;&amp; bash swap.sh</span><br></pre></td></tr></table></figure><h2 id="缝合怪测评"><a href="#缝合怪测评" class="headerlink" title="缝合怪测评"></a>缝合怪测评</h2><ul><li>自由组合测试方向和单项测试以及合集收录第三方脚本–原创</li><li>基础系统信息–感谢teddysun和superbench和yabs开源</li><li>CPU测试–感谢lemonbench开源</li><li>内存测试–感谢lemonbench开源</li><li>磁盘IO读写测试–感谢lemonbench开源</li><li>硬盘IO读写测试–感谢yabs开源</li><li>御三家流媒体解锁–感谢sjlleo的二进制文件</li><li>常用流媒体解锁–感谢RegionRestrictionCheck开源</li><li>Tiktok解锁–感谢lmc999的开源</li><li>三网回程以及路由延迟–感谢zhanghanyun&#x2F;backtrace开源</li><li>回程路由以及带宽类型检测(商宽&#x2F;家宽&#x2F;数据中心)–由fscarmen的PR以及本人的技术思路提供</li><li>端口检测(检测是否被墙)–由fscarmen的PR以及作者的技术思路提供 – 待修复</li><li>IP质量检测(检测IP白不白)(含IPV4和IPV6)–独创，感谢互联网提供的查询资源</li><li>speedtest测速–由teddysun和superspeed的开源以及整理</li><li>全国网络延迟测试–感谢IPASN开源</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">bash &lt;(wget -qO- --no-check-certificate https://gitlab.com/spiritysdx/za/-/raw/main/ecs.sh) </span><br><span class="line">或 </span><br><span class="line">bash &lt;(wget -qO- --no-check-certificate https://github.com/spiritLHLS/ecs/raw/main/ecs.sh)</span><br></pre></td></tr></table></figure><h2 id="IP质量测试"><a href="#IP质量测试" class="headerlink" title="IP质量测试"></a>IP质量测试</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">bash &lt;(wget -qO- --no-check-certificate https://gitlab.com/spiritysdx/za/-/raw/main/qzcheck.sh) </span><br><span class="line">或 </span><br><span class="line">bash &lt;(wget -qO- --no-check-certificate https://github.com/spiritLHLS/ecs/raw/main/qzcheck.sh)</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305181044180.jpeg" alt="img"></p><h2 id="Bench-–-系统信息-I-x2F-O-测速"><a href="#Bench-–-系统信息-I-x2F-O-测速" class="headerlink" title="Bench – 系统信息+I&#x2F;O+测速"></a>Bench – 系统信息+I&#x2F;O+测速</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -qO- bench.sh | bash</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305181048335.jpeg" alt="img"></p><h2 id="SuperBench-–-系统信息-I-x2F-O-测速"><a href="#SuperBench-–-系统信息-I-x2F-O-测速" class="headerlink" title="SuperBench – 系统信息+I&#x2F;O+测速"></a>SuperBench – 系统信息+I&#x2F;O+测速</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget -qO- git.io/superbench.sh | bash </span><br><span class="line">或 </span><br><span class="line">wget -qO- --no-check-certificate https://raw.githubusercontent.com/oooldking/script/master/superbench.sh | bash</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305181044569.jpeg" alt="img"></p><h2 id="HyperSpeed-一键测速"><a href="#HyperSpeed-一键测速" class="headerlink" title="HyperSpeed 一键测速"></a>HyperSpeed 一键测速</h2><ul><li>支持单线程、8线程测速，显示延迟与抖动</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">bash &lt;(curl -Lso- https://bench.im/hyperspeed) </span><br><span class="line">或 </span><br><span class="line">bash &lt;(wget -qO- https://bench.im/hyperspeed)</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305181044643.jpeg" alt="img"></p><h2 id="Besttrace-直接显示回程线路"><a href="#Besttrace-直接显示回程线路" class="headerlink" title="Besttrace 直接显示回程线路"></a>Besttrace 直接显示回程线路</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -qO- git.io/besttrace | bash</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305181044850.jpeg" alt="img"></p><p><strong>（</strong> * *<strong>部分截图* ）</strong></p><h2 id="Backtrace-三网回程路由测试"><a href="#Backtrace-三网回程路由测试" class="headerlink" title="Backtrace 三网回程路由测试"></a>Backtrace 三网回程路由测试</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl https://raw.githubusercontent.com/zhanghanyun/backtrace/main/install.sh -sSf | sh</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305181044948.jpeg" alt="img"></p><h2 id="BestTrace-回程测试"><a href="#BestTrace-回程测试" class="headerlink" title="BestTrace 回程测试"></a>BestTrace 回程测试</h2><ul><li>ipip.net 提供的手动输入IP测试回程线路工具</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">mkdir /root/besttrace </span><br><span class="line">cd /root/besttrace </span><br><span class="line">wget https://cdn.ipip.net/17mon/besttrace4linux.zip </span><br><span class="line">unzip besttrace4linux.zip </span><br><span class="line"></span><br><span class="line">解压之后会看到几个二进制文件,根据自己的系统选择对应文件。常用的： </span><br><span class="line"></span><br><span class="line">Linux X64系统： </span><br><span class="line">chmod +x besttrace </span><br><span class="line">./besttrace xxx.xxx.xxx.xxx   # 此处输入需测试IP </span><br><span class="line"></span><br><span class="line">Linux X32位系统： </span><br><span class="line">chmod +x besttrace32 </span><br><span class="line">./besttrace32 xxx.xxx.xxx.xxx   # 此处输入需测试IP </span><br><span class="line"></span><br><span class="line">ARM机型： </span><br><span class="line">chmod +x besttracearm </span><br><span class="line">./besttracearm xxx.xxx.xxx.xxx   # 此处输入需测试IP</span><br></pre></td></tr></table></figure><h2 id="回程测试-Nanqinlang大佬作品"><a href="#回程测试-Nanqinlang大佬作品" class="headerlink" title="回程测试 [Nanqinlang大佬作品]"></a>回程测试 [Nanqinlang大佬作品]</h2><ul><li>支持选择节点测试，四网快速测试，手动输入IP测试三种模式</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://raw.githubusercontent.com/nanqinlang-script/testrace/master/testrace.sh &amp;&amp; bash testrace.sh</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305181044653.jpeg" alt="img"></p><h2 id="UnixBench-sh-秋水逸冰大佬作品"><a href="#UnixBench-sh-秋水逸冰大佬作品" class="headerlink" title="UnixBench.sh [秋水逸冰大佬作品]"></a>UnixBench.sh [秋水逸冰大佬作品]</h2><ul><li>UnixBench是一个类unix系（Unix，BSD，Linux）统下的性能测试工具，一个开源工具，被广泛用与测试Linux系统主机的性能。Unixbench的主要测试项目有：系统调用、读写、进程、图形化测试、2D、3D、管道、运算、C库等系统基准性能提供测试数据。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget --no-check-certificate https://github.com/teddysun/across/raw/master/unixbench.sh &amp;&amp; chmod +x unixbench.sh &amp;&amp; ./unixbench.sh</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305181044518.jpeg" alt="img"></p><h2 id="LemonBench-sh"><a href="#LemonBench-sh" class="headerlink" title="LemonBench.sh"></a>LemonBench.sh</h2><ul><li>LemonBench工具(别名LBench、柠檬Bench)，是一款针对Linux服务器设计的服务器性能测试工具。通过综合测试，可以快速评估服务器的综合性能，为使用者提供服务器硬件配置信息。目前涵盖的测试有：服务器基础信息 (CPU信息&#x2F;内存信息&#x2F;Swap信息&#x2F;磁盘空间信息&#x2F;网络信息等)，流媒体解锁测试 (目前支持HBO Now&#x2F;动画疯&#x2F;B站港澳台&#x2F;B站台湾限定)，系统性能测试 (CPU&#x2F;内存&#x2F;磁盘)，Speedtest网速测试 (本地到最近源及国内各地域不同线路的网速)，路由追踪测试 (追踪到国内和海外不同线路的路由信息)。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">快速测试：</span><br><span class="line">curl -fsL https://ilemonra.in/LemonBenchIntl | bash -s fast </span><br><span class="line"></span><br><span class="line">完整测试： </span><br><span class="line">curl -fsL https://ilemonra.in/LemonBenchIntl | bash -s full</span><br></pre></td></tr></table></figure><h2 id="Yabs-sh-Masonr大佬作品"><a href="#Yabs-sh-Masonr大佬作品" class="headerlink" title="Yabs.sh [Masonr大佬作品]"></a>Yabs.sh [Masonr大佬作品]</h2><ul><li>又一个 Linux VPS 一键测评脚本，可以一键测试 VPS 硬盘的读写速度、网络带宽也就是下载速度、CPU 跑分（包括 Geekbench 4 和 Geekbench 5），以及各种性能测试等。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget -qO- yabs.sh | bash </span><br><span class="line">或 </span><br><span class="line">curl -sL yabs.sh | bash</span><br></pre></td></tr></table></figure><h2 id="流媒体解锁测试-Lmc999大佬作品"><a href="#流媒体解锁测试-Lmc999大佬作品" class="headerlink" title="流媒体解锁测试 [Lmc999大佬作品]"></a>流媒体解锁测试 [Lmc999大佬作品]</h2><ul><li>本脚本基于CoiaPrant&#x2F;MediaUnlock_Test代码进行修改，支持OS&#x2F;Platform：CentOS 6+, Ubuntu 14.04+, Debian 8+, MacOS, Android with Termux。</li><li>Github项目地址：<a href="https://github.com/lmc999/RegionRestrictionCheck">https://github.com/lmc999/RegionRestrictionCheck</a></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">bash &lt;(curl -L -s check.unlock.media) </span><br><span class="line"></span><br><span class="line">尾部添加参数的释义： </span><br><span class="line">-M 4      只检测IPv4结果 </span><br><span class="line">-M 6      只检测IPv6结果 </span><br><span class="line">-I eth0    指定检测的网卡名称（例：eth0） </span><br><span class="line">-E        选择脚本语言为英文</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305181048419.jpeg" alt="img"></p><h2 id="流媒体解锁测试-LovelyHaochi大佬作品"><a href="#流媒体解锁测试-LovelyHaochi大佬作品" class="headerlink" title="流媒体解锁测试 [LovelyHaochi大佬作品]"></a>流媒体解锁测试 [LovelyHaochi大佬作品]</h2><ul><li>支持多个流媒体的ipv4与ipv6解锁情况</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash &lt;(curl -sSL &quot;https://git.io/JswGm&quot;)</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305181044382.png" alt="img"></p><h2 id="推荐杜甫使用-本脚本支持查看I-x2F-O-bench以及system-info"><a href="#推荐杜甫使用-本脚本支持查看I-x2F-O-bench以及system-info" class="headerlink" title="推荐杜甫使用-本脚本支持查看I&#x2F;O bench以及system info"></a>推荐杜甫使用-本脚本支持查看I&#x2F;O bench以及system info</h2><ul><li>支持查看硬件信息，硬盘通电时间，io等脚本，适合独立服务器使用，vps也能用。</li><li>Github项目地址：<a href="https://github.com/Aniverse/A">https://github.com/Aniverse/A</a></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -q https://github.com/Aniverse/A/raw/i/a &amp;&amp; bash a</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305181047608.jpeg" alt="img"></p><h2 id="测试25端口是否开放"><a href="#测试25端口是否开放" class="headerlink" title="测试25端口是否开放"></a>测试25端口是否开放</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">telnet smtp.aol.com 25</span><br></pre></td></tr></table></figure><p>如果看到类似下面的回显，则说明端口是开放的：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Trying 74.6.141.50…</span><br><span class="line">Connected to smtp.aol.g03.yahoodns.net.</span><br><span class="line">Escape character is ‘^]’.</span><br><span class="line">220 smtp.mail.yahoo.com ESMTP ready</span><br></pre></td></tr></table></figure><p>如果显示 <code>Connection timed out</code> ，说明25端口不开放。需要注意的是：部分服务商或是系统，需要在控制后台开放25端口，或需要开放系统防火墙端口。</p>]]></content>
    
    
    <summary type="html">VPS/服务器常用脚本合集</summary>
    
    
    
    <category term="技术" scheme="https://blog.ssopay.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="vps" scheme="https://blog.ssopay.com/tags/vps/"/>
    
    <category term="服务器" scheme="https://blog.ssopay.com/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    <category term="脚本" scheme="https://blog.ssopay.com/tags/%E8%84%9A%E6%9C%AC/"/>
    
    <category term="测速" scheme="https://blog.ssopay.com/tags/%E6%B5%8B%E9%80%9F/"/>
    
    <category term="合集" scheme="https://blog.ssopay.com/tags/%E5%90%88%E9%9B%86/"/>
    
  </entry>
  
  <entry>
    <title>将OpenVZ或LXC虚拟化架构的VPS系统重装至Alpine</title>
    <link href="https://blog.ssopay.com/posts/ab77ae52.html"/>
    <id>https://blog.ssopay.com/posts/ab77ae52.html</id>
    <published>2023-05-16T06:41:00.000Z</published>
    <updated>2023-05-16T07:01:40.258Z</updated>
    
    <content type="html"><![CDATA[<p>在我们使用OpenVZ或LXC虚拟化架构的VPS时，有时候我们需要重装系统。但是由于其架构的特殊性质，无法使用常规的DD脚本重装系统。在这篇文章中，我来和大家一起来在OpenVZ或LXC虚拟化架构的VPS系统重装至Alpine</p><h2 id="准备材料"><a href="#准备材料" class="headerlink" title="准备材料"></a>准备材料</h2><ul><li>OpenVZ或LXC虚拟化架构的VPS</li></ul><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><p>请将原系统安装成Debian，并关闭WGCF或WARP-GO的WARP，以提高成功率</p><h2 id="部署步骤"><a href="#部署步骤" class="headerlink" title="部署步骤"></a>部署步骤</h2><ol><li><p>SSH进入VPS，输入以下命令，在弹出的提示输入“Y”即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -N --no-check-certificate https://raw.githubusercontent.com/Misaka-blog/convert-ovzlxc-to-alpine/main/alpine.sh &amp;&amp; bash alpine.sh</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305161444230.png" alt="img"></p></li><li><p>等待脚本执行完成，如无意外的话看到如下图这三条消息之后自动重启VPS即可代表成功</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305161449893.png" alt="img"></p></li><li><p>使用原root账号及密码，登录VPS，如无意外的话登录出现Alpine Linux字样即为成功。</p></li></ol><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305161444741.png" alt="img"></p><blockquote><p>原文链接：<a href="https://blog.misaka.rest/2023/05/16/convert-ovzlxc-to-alpine/">https://blog.misaka.rest/2023/05/16/convert-ovzlxc-to-alpine/</a></p></blockquote>]]></content>
    
    
    <summary type="html">将OpenVZ或LXC虚拟化架构的VPS系统重装至Alpine</summary>
    
    
    
    <category term="技术" scheme="https://blog.ssopay.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="vps" scheme="https://blog.ssopay.com/tags/vps/"/>
    
    <category term="教程" scheme="https://blog.ssopay.com/tags/%E6%95%99%E7%A8%8B/"/>
    
    <category term="openvz" scheme="https://blog.ssopay.com/tags/openvz/"/>
    
    <category term="lxc" scheme="https://blog.ssopay.com/tags/lxc/"/>
    
    <category term="alpine" scheme="https://blog.ssopay.com/tags/alpine/"/>
    
    <category term="系统" scheme="https://blog.ssopay.com/tags/%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="重装" scheme="https://blog.ssopay.com/tags/%E9%87%8D%E8%A3%85/"/>
    
  </entry>
  
  <entry>
    <title>AZURE-CLI 开机教程 AZURE最安全稳定的开机方式</title>
    <link href="https://blog.ssopay.com/posts/bb82f602.html"/>
    <id>https://blog.ssopay.com/posts/bb82f602.html</id>
    <published>2023-05-13T02:40:00.000Z</published>
    <updated>2023-05-13T02:43:03.200Z</updated>
    
    <content type="html"><![CDATA[<p>一、 首先，我们去azure官方下载一个az-cli，各个操作系统的都有，官方文档讲得已经很详细了，这里就不做赘述。 azure cli <a href="https://learn.microsoft.com/zh-tw/cli/azure/install-azure-cli-linux?pivots=apt">官方安装网址</a></p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305131029688.png" alt="img"></p><p>这里以安装-linux为例，vps机器是ubuntu<br>找到ubuntu的安装命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash</span><br></pre></td></tr></table></figure><p>登录机器进入root模式，输入安装命令，完成安装。<br><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305131029056.png" alt="img"></p><p>二 ，登录AZ账户<br>机器VPS输入命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">az account clear # 清除以前账户</span><br><span class="line">az login --use-device-code</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305131037722.png" alt="img"></p><p>输入命令后机器给出了一个网址和代码，网址不变，代码每次不同</p><p>谷歌无痕浏览器打开网址 <a href="https://microsoft.com/devicelogin">https://microsoft.com/devicelogin</a></p><p>输入代码 FDVKBEGEE，再按提示输入AZ账号和密码</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305131029839.png" alt="img"><br><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305131029595.png" alt="img"></p><p>出现上图这样表明AZ账户登录成功了，可以关掉网页了，<br>这时的机器VPS也会变成下图这样，表明机器接管了AZ账户</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305131038731.png" alt="img"></p><p>三 ，创建虚拟机机器vps</p><p>1，接下来我们先创建资源组</p><p>输入命令 az group create -n 资源组名 -l 地区</p><p>示例:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">az group create -n mghk -l eastasia #香港</span><br></pre></td></tr></table></figure><p>注意此处的地区请填写az的代码 如香港是eastasia等，多个机器可以共用同一个资源组</p><p>AZ常用地区代码 (查询命令 az account list-locations -o table）<br>koreacentral 韩国<br>eastasia 香港<br>southeastasia 新加坡<br>japaneast 日本<br>eastus 美国西部</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305131029634.png" alt="img"></p><p>2， 创建机器：输入命令 （自行替换中文部分）</p><p>az vm create -g 资源组名（名字要对应上一步）-n 机器名 –image 系统 –admin-username 用户名(SSH登录用户名) –admin-password 密码(SSH登录密码，需要12位以上 大小写字母和数字) –size Standard_B1s(机器规格型号） –os-disk-size-gb 64(内存大小) -public-ip-address-dns-name 自定义dns标签名称(每次更换名称，不能重复)</p><p>注意：在同一个资源组名下创建多个机器时，机器名称不能相同</p><p>示例1–CentOS:7.5系统，7.5可换成其他版本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">az vm create -g mghk -n myvmzhu --image OpenLogic:CentOS:7.5:latest --admin-username azureuser --admin-password Azure1234567 --size Standard_F2s --os-disk-size-gb 64 --public-ip-address-dns-name zhutou1021rr</span><br></pre></td></tr></table></figure><p>示例2–默认ubuntu18.04,尝试换20.04或更高级没有成功</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">az vm create -g mghk-n myvmzhu002 --image ubuntults --admin-username azureuser --admin-password Azure1234567 --size Standard_B1s --os-disk-size-gb 64 --public-ip-address-dns-name zhutou1021hao</span><br></pre></td></tr></table></figure><p>示例3–Debian:debian-10:10:latest，可更换数字</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">az vm create -g mghk -n myvmzhu003 --image Debian:debian-10:10:latest --admin-username azureuser --admin-password Azure1234567 --size Standard_B1s --os-disk-size-gb 64 --public-ip-address-dns-name zhutou1022gg</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305131029031.png" alt="img"></p><p>四 ，登录SSH<br>创建机器成功后看上图，机器显示的”publicIpAddress”就是公网IP，填入主机那里<br>用户名和密码（根据前面自己创建机器时填写的数据）<br>用户名 azureuser<br>密码 Azure1234567<br>使用上面三个数据就可以登录SSH了</p><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305131039625.png" alt="img"></p><p>五，最后一步开放AZ端口</p><p>开放端口命令如下：az vm open-port -n 机器名 -g 资源组名 –port 端口或端口范围 如0-65535全开<br>示例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">az vm open-port -n myvmzhu -g mghk --port 0-65535</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305131029357.png" alt="img"></p><p>更换ip命令如下：az vm deallocate -n 机器名 -g 资源组名</p><p>示例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">az vm deallocate -n myvmzhu -g mghk</span><br></pre></td></tr></table></figure><p>等待1分钟过后输入下一个命令</p><p>az vm start -n 机器名 -g 资源组名</p><p>示例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">az vm start -n myvmzhu -g mghk</span><br></pre></td></tr></table></figure><p>接下来我们输入查看更换后的ip地址</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">az vm list-ip-addresses -o table</span><br></pre></td></tr></table></figure><blockquote><p>原文链接：<a href="https://help.azfa.me/2022/12/01/az-cli/">https://help.azfa.me/2022/12/01/az-cli/</a></p></blockquote>]]></content>
    
    
    <summary type="html">AZURE-CLI 开机教程 AZURE最安全稳定的开机方式</summary>
    
    
    
    <category term="技术" scheme="https://blog.ssopay.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="vps" scheme="https://blog.ssopay.com/tags/vps/"/>
    
    <category term="教程" scheme="https://blog.ssopay.com/tags/%E6%95%99%E7%A8%8B/"/>
    
    <category term="azure" scheme="https://blog.ssopay.com/tags/azure/"/>
    
    <category term="cli" scheme="https://blog.ssopay.com/tags/cli/"/>
    
    <category term="开机" scheme="https://blog.ssopay.com/tags/%E5%BC%80%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>使用Hostmonit网站，在线优选CloudFlare IP</title>
    <link href="https://blog.ssopay.com/posts/f1a88224.html"/>
    <id>https://blog.ssopay.com/posts/f1a88224.html</id>
    <published>2023-05-12T01:46:00.000Z</published>
    <updated>2023-05-12T01:49:49.340Z</updated>
    
    <content type="html"><![CDATA[<p>使用Hostmonit在线优选CloudFlare IP</p><h2 id="准备材料"><a href="#准备材料" class="headerlink" title="准备材料"></a>准备材料</h2><ul><li>能上网的浏览器</li></ul><h2 id="部署步骤"><a href="#部署步骤" class="headerlink" title="部署步骤"></a>部署步骤</h2><ol><li>打开这个优选网页：<a href="https://stock.hostmonit.com/CloudFlareYes">https://stock.hostmonit.com/CloudFlareYes</a></li><li>可以在这里，选择适合自己运营商的优选IP</li></ol><p><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305120943743.png" alt="img"></p><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><p>由于在线测速的服务器和本地网络环境不一定相同，因此在线优选结果仅供参考</p>]]></content>
    
    
    <summary type="html">使用Hostmonit网站，在线优选CloudFlare IP</summary>
    
    
    
    <category term="技术" scheme="https://blog.ssopay.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="教程" scheme="https://blog.ssopay.com/tags/%E6%95%99%E7%A8%8B/"/>
    
    <category term="cf" scheme="https://blog.ssopay.com/tags/cf/"/>
    
    <category term="cloudflare" scheme="https://blog.ssopay.com/tags/cloudflare/"/>
    
    <category term="优选" scheme="https://blog.ssopay.com/tags/%E4%BC%98%E9%80%89/"/>
    
    <category term="ip" scheme="https://blog.ssopay.com/tags/ip/"/>
    
    <category term="hostmonit" scheme="https://blog.ssopay.com/tags/hostmonit/"/>
    
  </entry>
  
  <entry>
    <title>零撸openai120刀教程 带土耳其入金方法.md</title>
    <link href="https://blog.ssopay.com/posts/61903346.html"/>
    <id>https://blog.ssopay.com/posts/61903346.html</id>
    <published>2023-05-08T14:15:00.000Z</published>
    <updated>2023-05-08T14:16:37.817Z</updated>
    
    <content type="html"><![CDATA[<p><strong>原理</strong>：土耳其钱包Oldubli注册后自动开通一张每月1250里拉限额的10年有效期万事达（master）虚拟卡，无需任何KYC。OpenAI绑定信用卡并扣除5美刀预授权额度后将提高账户消费额度为120美刀&#x2F;月，所以并不是真正的赠送120美刀余额，只是将账户升级为即用即付（Pay As You Go）且限制消费为120美刀的账户。</p><p>至于Oldubli如何入金，可以使用wise 或者万能淘宝<br><img src="https://cdn.jsdelivr.net/gh/liuyesblog/images@main/2023/202305082213307.jpeg" alt="img"><br><strong>重点</strong>：OpenAI扣除的5美刀仅为预授权额度，得益于土耳其的落后系统以及虚拟信用卡的特性，在为此万事达（master）虚拟卡充值5美刀（考虑到汇损我一般入金115土耳其里拉按照2023.04.22汇率 115里拉为5.9美元)后，短时间内扣除5美刀预授权的操作不会秒级别的应用到此账户。 说人话：冲5刀进去 可以30min-1h内无限扣除5刀预授权，意思为你只要手速快，用这张只充值了115里拉的卡能绑起码2-4个OpenAI账户…..等30min-1h内土佬的系统把此额度应用了才会失效….so….</p><p><strong>重点中的重点</strong>：30min-1h后5刀额度被真正应用后就无法骚操作了，但是就算到这一步，你的5美刀（115里拉）依然没有消失，依然在你的万事达卡中，依然可以真实的花出去！！！所以撸完了OpenAI120美金后是用其继续开土耳其netflix还是充值这5美金到linode账户还是你继续撸aws等等….就都随你了</p><p><strong>注意事项</strong>：Oldubli在google 商店和apple商店（外区）均可下载，但需美国IP或土耳其IP访问，否则报错！<br>Oldubli目前仅乌克兰手机号、土耳其手机号、阿塞拜疆手机号可以正常收验证码注册。这里提供一个应用：SafeUM 同样可以在两个商店下载到，注册后获得一个拉脱维亚或阿塞拜疆虚拟号，这个号码完全属于你，看广告可以继续续期！<br>SO:获得到的阿塞拜疆手机号还能注册验证OpenAI账户，这下真连账号成本都没有了</p>]]></content>
    
    
    <summary type="html">零撸openai120刀教程 带土耳其入金方法.md</summary>
    
    
    
    <category term="技术" scheme="https://blog.ssopay.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="教程" scheme="https://blog.ssopay.com/tags/%E6%95%99%E7%A8%8B/"/>
    
    <category term="openai" scheme="https://blog.ssopay.com/tags/openai/"/>
    
    <category term="chatGPT" scheme="https://blog.ssopay.com/tags/chatGPT/"/>
    
    <category term="零撸" scheme="https://blog.ssopay.com/tags/%E9%9B%B6%E6%92%B8/"/>
    
    <category term="入金" scheme="https://blog.ssopay.com/tags/%E5%85%A5%E9%87%91/"/>
    
  </entry>
  
</feed>
